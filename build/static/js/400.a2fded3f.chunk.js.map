{"version":3,"file":"static/js/400.a2fded3f.chunk.js","mappings":"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","sources":["Utils/helperFunctions.js","Views/PreLogin/Signin.js"],"sourcesContent":["import { Box, CircularProgress } from \"@mui/material\";\r\nimport { toast } from \"react-toastify\";\r\nexport const ValidationEngine = {\r\n  EMAIL_REGEX: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\r\n  PASSWORD_REGEX: /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/,\r\n  MOBILE_NUMBER_REGEX: /^\\d{10}$/,\r\n  NUMBER_ONLY_REGEX: /^[0-9]+$/,\r\n  DECIMAL_ALLOW_REGEX: /^\\d*\\.?\\d*$/,\r\n  ONLY_TWO_DECIMAL_ALLOW_REGEX: /^(?:\\d*\\.\\d{1,2}|\\d+)$/,\r\n  type: {\r\n    MANDATORY: 0,\r\n    REGEX: 1,\r\n    CHARACTERCOUNT: 2,\r\n  },\r\n  validate: (validationJSON, data) => {\r\n    function validateMandatory(validationObject, value) {\r\n      if (!value || value === '') {\r\n        return {\r\n          isValid: false,\r\n          error: {\r\n            isValid: false,\r\n            message: validationObject.message,\r\n          },\r\n        };\r\n      }\r\n      return {\r\n        isValid: true,\r\n        error: {\r\n          isValid: true,\r\n          message: \"\",\r\n        },\r\n      };\r\n    }\r\n\r\n    function validateCharacterCount(validationObject, value) {\r\n      if (value && value.length !== validationObject.CharacterCout) {\r\n        return {\r\n          isValid: false,\r\n          error: {\r\n            isValid: false,\r\n            message: validationObject.message,\r\n          },\r\n        };\r\n      }\r\n      return {\r\n        isValid: true,\r\n        error: {\r\n          isValid: true,\r\n          message: \"\",\r\n        },\r\n      };\r\n    }\r\n\r\n    function validateRegex(validationObject, value) {\r\n      if (validationObject.regex && !validationObject.regex.test(value)) {\r\n        return {\r\n          isValid: false,\r\n          error: {\r\n            isValid: false,\r\n            message: validationObject.message,\r\n          },\r\n        };\r\n      }\r\n      return {\r\n        isValid: true,\r\n        error: {\r\n          isValid: true,\r\n          message: \"\",\r\n        },\r\n      };\r\n    }\r\n\r\n    const keys = Object.keys(data);\r\n    const errors = {};\r\n    let isValid = true;\r\n    let errorObj;\r\n    keys.forEach((key) => {\r\n      const validationArray = validationJSON[key];\r\n      const value = data[key];\r\n      for (const validationObj of validationArray) {\r\n        if (validationObj.type === ValidationEngine.type.MANDATORY) {\r\n          errorObj = validateMandatory(validationObj, value);\r\n        } else if (\r\n          validationObj.type === ValidationEngine.type.CHARACTERCOUNT\r\n        ) {\r\n          errorObj = validateCharacterCount(validationObj, value);\r\n        } else if (validationObj.type === ValidationEngine.type.REGEX) {\r\n          errorObj = validateRegex(validationObj, value);\r\n        }\r\n        errors[key] = errorObj.error;\r\n        isValid = isValid && errorObj.isValid;\r\n        if (!errorObj.isValid) {\r\n          break;\r\n        }\r\n      }\r\n    });\r\n    errors.isValid = isValid;\r\n    return errors;\r\n  },\r\n};\r\n\r\nexport const ErrorMessages = {\r\n  error: (message) =>\r\n    toast.error(message, {\r\n      position: \"top-right\",\r\n      autoClose: 3000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"colored\",\r\n    }),\r\n  success: (message) =>\r\n    toast.success(message, {\r\n      position: \"top-right\",\r\n      autoClose: 3000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"colored\",\r\n    }),\r\n  info: (message) =>\r\n    toast.info(message, {\r\n      position: \"top-right\",\r\n      autoClose: 3000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"colored\",\r\n    }),\r\n};\r\nexport const Loader = {\r\n  commonLoader() {\r\n    return (\r\n      <Box className=\"d-flex align-items-center justify-content-center common-loader\">\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  },\r\n};\r\n\r\nexport const pathFile = {\r\n  dashboards: \"DashBoard\",\r\n};\r\n\r\n\r\nexport const navigate = () => {\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const getBreadcrumbItems = (pathname) => {\r\n  const breadcrumbMap = {\r\n    \"/app/home\": [{ text: \"Home\", href: \"/\" } , {text:''} ],\r\n\r\n    \"/app/home/runsheet\": [{ text: \"Home\", href: \"/app/home\" }, { text: \"Runsheet (5425)\", href: \"/dashboard\" }],\r\n\r\n\r\n    \"/profile\": [{ text: \"Home\", href: \"/\" },\r\n    { text: \"Profile\", href: \"/profile\" }],\r\n    \"/verify-order\": [{ text: \"Home\", href: \"/\" }\r\n      , { text: \"Orders\", href: \"/orders\" },\r\n    { text: \"Verify Order\", href: \"/verify-order\" }],\r\n    // Add more routes as needed\r\n  };\r\n\r\n  return breadcrumbMap[pathname] || [{ text: \"Home\", href: \"/\" }];\r\n};\r\n\r\n\r\n\r\nexport const loginDetails = () => {\r\n  const items = JSON.parse(localStorage.getItem(\"login\"));\r\n  return items;\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Logo from \"../../Assets/Images/PTRLogo.png\";\r\nimport scooterImg from \"../../Assets/Images/scooterImg.png\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormField,\r\n  Input,\r\n  SpaceBetween,\r\n} from \"@cloudscape-design/components\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { signIn } from \"Redux-Store/Signin/SigninThunk\";\r\nimport { ValidationEngine } from \"Utils/helperFunctions\";\r\n\r\nconst mobileValidationSchema = {\r\n  number: [\r\n    {\r\n      message: \"Please enter Mobile number\",\r\n      type: ValidationEngine.type.MANDATORY,\r\n    },\r\n    {\r\n      message: \"Please enter a valid Mobile Number\",\r\n      type: ValidationEngine.type.REGEX,\r\n      regex: ValidationEngine.MOBILE_NUMBER_REGEX,\r\n    },\r\n  ],\r\n};\r\n\r\nconst Signin = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [number, setNumber] = useState(\"\");\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [showSplash, setShowSplash] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const hasSeenSplash = localStorage.getItem(\"hasSeenSplash\");\r\n\r\n    if (!hasSeenSplash) {\r\n      setShowSplash(true);\r\n      localStorage.setItem(\"hasSeenSplash\", \"true\");\r\n      const timer = setTimeout(() => {\r\n        setShowSplash(false);\r\n      }, 3000);\r\n\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, []);\r\n\r\n  const validateForm = () => {\r\n    const error = ValidationEngine.validate(mobileValidationSchema, { number });\r\n    return error;\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (isSubmitting) return;\r\n    setIsSubmitting(true);\r\n\r\n    setIsSubmitted(true);\r\n    const error = validateForm();\r\n    if (error.isValid) {\r\n      console.log(\"Calling API with number:\", number);\r\n      const result = await dispatch(signIn({ number, userType: \"rider\" }));\r\n      console.log(\"API response:\", result.payload.data);\r\n      const session = result.payload.data?.session;  // Modify as per your response structure\r\n      localStorage.setItem(\"session\", session); // Store the session code in localStorage\r\n  \r\n      navigate(`/auth/otp-varification/${number}`);\r\n    } else {\r\n      console.log(\"Validation failed:\", error);\r\n    }\r\n\r\n    setIsSubmitting(false);\r\n  };\r\n\r\n  const errorData = validateForm();\r\n\r\n  if (showSplash) {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          height: \"100vh\",\r\n          backgroundColor: \"white\",\r\n        }}\r\n      >\r\n        <img src={Logo} alt=\"Logo\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SpaceBetween size=\"xxl\">\r\n      <SpaceBetween size=\"l\">\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            padding: \"2rem 0 2rem 0\",\r\n          }}\r\n        >\r\n          <img src={Logo} alt=\"Logo\" />\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <img src={scooterImg} style={{ height: \"16rem\", width: \"16rem\" }} />\r\n        </div>\r\n      </SpaceBetween>\r\n      <SpaceBetween size=\"m\">\r\n        <div\r\n          style={{\r\n            fontSize: \"2.3rem\",\r\n            fontWeight: \"bold\",\r\n            width: \"20rem\",\r\n            margin: \"0 auto\",\r\n          }}\r\n        >\r\n          Hello, <br />\r\n          <span style={{ color: \"#0972D3\" }}>Promode Delivery Partner!</span>\r\n        </div>\r\n        <SpaceBetween size=\"s\">\r\n          <form\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              handleSubmit();\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexFlow: \"column\",\r\n                gap: \"0.8rem\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                margin: \"0 auto\",\r\n              }}\r\n            >\r\n              <div style={{ width: \"20rem\" }}>\r\n                <FormField\r\n                  errorText={\r\n                    isSubmitted &&\r\n                    !errorData.isValid && <>{errorData?.number?.message}</>\r\n                  }\r\n                >\r\n                  <Input\r\n                    autoFocus\r\n                    value={number}\r\n                    type=\"number\"\r\n                    onChange={(e) => setNumber(e.detail.value)}\r\n                    placeholder=\"Enter Your Mobile Number\"\r\n                  />\r\n                </FormField>\r\n              </div>\r\n              <div style={{ width: \"20rem\" }}>\r\n                <Button onClick={handleSubmit} variant=\"primary\" fullWidth>\r\n                  Sign In\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <Box textAlign=\"center\" variant=\"p\">\r\n            <span style={{ color: \"gray\" }}>Don’t have an account? </span>\r\n            <span\r\n              className=\"blue pointer\"\r\n              onClick={() => navigate(\"/auth/register\")}\r\n            >\r\n              Register\r\n            </span>\r\n          </Box>\r\n        </SpaceBetween>\r\n      </SpaceBetween>\r\n    </SpaceBetween>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n"],"names":["ValidationEngine","EMAIL_REGEX","PASSWORD_REGEX","MOBILE_NUMBER_REGEX","NUMBER_ONLY_REGEX","DECIMAL_ALLOW_REGEX","ONLY_TWO_DECIMAL_ALLOW_REGEX","type","MANDATORY","REGEX","CHARACTERCOUNT","validate","validationJSON","data","validateMandatory","validationObject","value","isValid","error","message","validateCharacterCount","length","CharacterCout","validateRegex","regex","test","keys","Object","errors","errorObj","forEach","key","validationArray","validationObj","mobileValidationSchema","number","Signin","_errorData$number","navigate","useNavigate","dispatch","useDispatch","setNumber","useState","isSubmitted","setIsSubmitted","isSubmitting","setIsSubmitting","showSplash","setShowSplash","useEffect","localStorage","getItem","setItem","timer","setTimeout","clearTimeout","validateForm","handleSubmit","async","_result$payload$data","console","log","result","signIn","userType","payload","session","concat","errorData","_jsx","style","display","justifyContent","alignItems","height","backgroundColor","children","src","Logo","alt","_jsxs","SpaceBetween","size","padding","scooterImg","width","fontSize","fontWeight","margin","color","onSubmit","e","preventDefault","flexFlow","gap","FormField","errorText","_Fragment","Input","autoFocus","onChange","detail","placeholder","Button","onClick","variant","fullWidth","Box","textAlign","className"],"sourceRoot":""}