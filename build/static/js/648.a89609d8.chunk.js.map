{"version":3,"file":"static/js/648.a89609d8.chunk.js","mappings":"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","sources":["../node_modules/src/container/index.tsx","../node_modules/@cloudscape-design/components/internal/components/abstract-switch/analytics-metadata/styles.css.js","../node_modules/@cloudscape-design/components/internal/components/abstract-switch/styles.css.js","../node_modules/src/internal/components/abstract-switch/index.tsx","../node_modules/src/internal/utils/browser-scrollbar-size.ts","../node_modules/src/internal/utils/calculate-once.ts","../node_modules/src/internal/context/reset-contexts-for-modal.tsx","../node_modules/@cloudscape-design/components/modal/styles.css.js","../node_modules/src/modal/body-scroll.ts","../node_modules/src/modal/internal.tsx","../node_modules/src/internal/hooks/use-intersection-observer/index.ts","../node_modules/src/modal/index.tsx","../node_modules/src/radio-group/internal.tsx","../node_modules/src/internal/hooks/forward-focus/radio-group.ts","../node_modules/src/radio-group/index.tsx","../node_modules/src/radio-group/radio-button.tsx","../node_modules/@cloudscape-design/components/radio-group/styles.css.js","../node_modules/src/table/header-cell/utils.ts","../node_modules/src/internal/hooks/use-mouse-down-target.ts","../node_modules/src/table/body-cell/click-away.tsx","../node_modules/@cloudscape-design/components/table/expandable-rows/styles.css.js","../node_modules/src/table/expandable-rows/expand-toggle-button.tsx","../node_modules/src/area-chart/async-store/index.ts","../node_modules/src/table/sticky-columns/use-sticky-columns.ts","../node_modules/src/table/sticky-columns/utils.ts","../node_modules/src/table/table-role/table-role-helper.ts","../node_modules/src/table/utils.ts","../node_modules/@cloudscape-design/components/table/body-cell/styles.css.js","../node_modules/src/table/body-cell/td-element.tsx","../node_modules/src/table/body-cell/disabled-inline-editor.tsx","../node_modules/src/table/body-cell/inline-editor.tsx","../node_modules/src/table/body-cell/index.tsx","../node_modules/src/table/column-widths-utils.ts","../node_modules/src/table/selection/utils.ts","../node_modules/@cloudscape-design/components/table/styles.css.js","../node_modules/src/table/no-data-cell.tsx","../node_modules/@cloudscape-design/components/table/progressive-loading/styles.css.js","../node_modules/src/table/progressive-loading/items-loader.tsx","../node_modules/src/table/use-column-widths.tsx","../node_modules/@cloudscape-design/components/table/resizer/styles.css.js","../node_modules/src/table/resizer/resizer-lookup.ts","../node_modules/src/table/resizer/index.tsx","../node_modules/@cloudscape-design/components/table/selection/styles.css.js","../node_modules/src/table/selection/use-selection-focus-move.ts","../node_modules/src/table/selection/use-selection.ts","../node_modules/@cloudscape-design/components/checkbox/styles.css.js","../node_modules/src/checkbox/internal.tsx","../node_modules/src/table/selection/selection-control.tsx","../node_modules/@cloudscape-design/components/table/header-cell/styles.css.js","../node_modules/src/table/header-cell/th-element.tsx","../node_modules/@cloudscape-design/components/table/analytics-metadata/styles.css.js","../node_modules/src/table/header-cell/index.tsx","../node_modules/src/table/thead.tsx","../node_modules/src/table/sticky-scrolling.ts","../node_modules/src/table/use-sticky-header.ts","../node_modules/src/table/sticky-header.tsx","../node_modules/@cloudscape-design/components/table/sticky-scrollbar/styles.css.js","../node_modules/src/table/sticky-scrollbar/use-sticky-scrollbar.ts","../node_modules/src/table/sticky-scrollbar/sticky-scrollbar.tsx","../node_modules/src/table/table-role/utils.ts","../node_modules/src/table/table-role/grid-navigation.tsx","../node_modules/src/table/tools-header.tsx","../node_modules/src/table/use-table-focus-navigation.ts","../node_modules/src/table/internal.tsx","../node_modules/src/table/expandable-rows/expandable-rows-utils.ts","../node_modules/src/table/progressive-loading/progressive-loading-utils.ts","../node_modules/src/table/use-cell-editing.ts","../node_modules/src/internal/hooks/use-table-interaction-metrics/index.ts","../node_modules/src/internal/hooks/use-scroll-sync/index.ts","../node_modules/src/table/use-row-events.ts","../node_modules/src/table/index.tsx","../node_modules/@cloudscape-design/components/textarea/styles.css.js","../node_modules/src/textarea/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { AnalyticsFunnelSubStep } from '../internal/analytics/components/analytics-funnel';\nimport { BasePropsWithAnalyticsMetadata, getAnalyticsMetadataProps } from '../internal/base-component';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { getExternalProps } from '../internal/utils/external-props';\nimport { GeneratedAnalyticsMetadataContainerComponent } from './analytics-metadata/interfaces';\nimport { ContainerProps } from './interfaces';\nimport { InternalContainerAsSubstep } from './internal';\n\nexport { ContainerProps };\n\nexport default function Container({\n  variant = 'default',\n  disableHeaderPaddings = false,\n  disableContentPaddings = false,\n  fitHeight = false,\n  ...props\n}: ContainerProps) {\n  const analyticsMetadata = getAnalyticsMetadataProps(props as BasePropsWithAnalyticsMetadata);\n  const baseComponentProps = useBaseComponent(\n    'Container',\n    {\n      props: { disableContentPaddings, disableHeaderPaddings, fitHeight, variant },\n    },\n    analyticsMetadata\n  );\n  const externalProps = getExternalProps(props);\n\n  const analyticsComponentMetadata: GeneratedAnalyticsMetadataContainerComponent = {\n    name: 'awsui.Container',\n    label: { root: 'self' },\n  };\n\n  return (\n    <AnalyticsFunnelSubStep\n      subStepIdentifier={analyticsMetadata?.instanceIdentifier}\n      subStepErrorContext={analyticsMetadata?.errorContext}\n    >\n      <InternalContainerAsSubstep\n        variant={variant}\n        disableContentPaddings={disableContentPaddings}\n        disableHeaderPaddings={disableHeaderPaddings}\n        fitHeight={fitHeight}\n        {...props}\n        {...externalProps}\n        {...baseComponentProps}\n        {...getAnalyticsMetadataAttribute({ component: analyticsComponentMetadata })}\n      />\n    </AnalyticsFunnelSubStep>\n  );\n}\n\napplyDisplayName(Container, 'Container');\n","\n    import './styles.scoped.css';\n    export default {\n  \"label\": \"awsui_label_13tpe_9w8pd_5\",\n  \"native-input\": \"awsui_native-input_13tpe_9w8pd_6\"\n};\n  ","\n    import './styles.scoped.css';\n    export default {\n  \"content\": \"awsui_content_1wepg_s8qpr_97\",\n  \"description\": \"awsui_description_1wepg_s8qpr_98\",\n  \"label\": \"awsui_label_1wepg_s8qpr_99\",\n  \"outline\": \"awsui_outline_1wepg_s8qpr_107\",\n  \"show-outline\": \"awsui_show-outline_1wepg_s8qpr_110\",\n  \"native-input\": \"awsui_native-input_1wepg_s8qpr_114\",\n  \"wrapper\": \"awsui_wrapper_1wepg_s8qpr_118\",\n  \"label-wrapper\": \"awsui_label-wrapper_1wepg_s8qpr_124\",\n  \"empty-content\": \"awsui_empty-content_1wepg_s8qpr_135\",\n  \"description-bottom-padding\": \"awsui_description-bottom-padding_1wepg_s8qpr_145\",\n  \"label-disabled\": \"awsui_label-disabled_1wepg_s8qpr_153\",\n  \"description-disabled\": \"awsui_description-disabled_1wepg_s8qpr_154\",\n  \"control\": \"awsui_control_1wepg_s8qpr_158\"\n};\n  ","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport {\n  getAnalyticsLabelAttribute,\n  getAnalyticsMetadataAttribute,\n} from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { InternalBaseComponentProps } from '../../hooks/use-base-component/index.js';\nimport { useUniqueId } from '../../hooks/use-unique-id';\n\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\n\nexport interface AbstractSwitchProps extends React.HTMLAttributes<HTMLElement>, InternalBaseComponentProps {\n  controlId?: string;\n  controlClassName: string;\n  outlineClassName: string;\n  showOutline?: boolean;\n  disabled?: boolean;\n  readOnly?: boolean;\n  nativeControl: (props: React.InputHTMLAttributes<HTMLInputElement>) => React.ReactElement;\n  styledControl: React.ReactElement;\n  label?: React.ReactNode;\n  description?: React.ReactNode;\n  descriptionBottomPadding?: boolean;\n  ariaLabel?: string;\n  ariaLabelledby?: string;\n  ariaDescribedby?: string;\n  ariaControls?: string;\n  onClick: () => void;\n}\n\nfunction joinString(values: (string | undefined)[]) {\n  return values.filter((value): value is string => !!value).join(' ');\n}\n\nexport default function AbstractSwitch({\n  controlId,\n  controlClassName,\n  outlineClassName,\n  showOutline,\n  disabled,\n  readOnly,\n  nativeControl,\n  styledControl,\n  label,\n  description,\n  descriptionBottomPadding,\n  ariaLabel,\n  ariaLabelledby,\n  ariaDescribedby,\n  ariaControls,\n  onClick,\n  __internalRootRef,\n  ...rest\n}: AbstractSwitchProps) {\n  const uniqueId = useUniqueId();\n  const id = controlId || uniqueId;\n\n  const labelId = `${id}-label`;\n  const descriptionId = `${id}-description`;\n\n  const ariaLabelledByIds = [];\n  if (label && !ariaLabel) {\n    ariaLabelledByIds.push(labelId);\n  }\n  if (ariaLabelledby) {\n    ariaLabelledByIds.push(ariaLabelledby);\n  }\n\n  const ariaDescriptions = [];\n  if (ariaDescribedby) {\n    ariaDescriptions.push(ariaDescribedby);\n  }\n  if (description) {\n    ariaDescriptions.push(descriptionId);\n  }\n\n  return (\n    <span\n      {...rest}\n      className={clsx(styles.wrapper, rest.className)}\n      ref={__internalRootRef}\n      {...getAnalyticsLabelAttribute(label ? `.${analyticsSelectors.label}` : `.${analyticsSelectors['native-input']}`)}\n    >\n      <span\n        className={styles['label-wrapper']}\n        aria-disabled={disabled ? 'true' : undefined}\n        onClick={disabled || readOnly ? undefined : onClick}\n        {...getAnalyticsMetadataAttribute(\n          disabled || readOnly\n            ? {}\n            : {\n                action: 'select',\n                detail: {\n                  label: label ? `.${analyticsSelectors.label}` : `.${analyticsSelectors['native-input']}`,\n                },\n              }\n        )}\n      >\n        <span className={clsx(styles.control, controlClassName)}>\n          {styledControl}\n          {nativeControl({\n            id,\n            disabled,\n            className: clsx(styles['native-input'], analyticsSelectors['native-input']),\n            'aria-describedby': ariaDescriptions.length ? joinString(ariaDescriptions) : undefined,\n            'aria-labelledby': ariaLabelledByIds.length ? joinString(ariaLabelledByIds) : undefined,\n            'aria-label': ariaLabel,\n            'aria-controls': ariaControls,\n          })}\n          <span className={clsx(styles.outline, outlineClassName, showOutline && styles['show-outline'])} />\n        </span>\n        <span className={clsx(styles.content, !label && !description && styles['empty-content'])}>\n          {label && (\n            <span\n              id={labelId}\n              className={clsx(styles.label, analyticsSelectors.label, { [styles['label-disabled']]: disabled })}\n            >\n              {label}\n            </span>\n          )}\n          {description && (\n            <span\n              id={descriptionId}\n              className={clsx(styles.description, {\n                [styles['description-disabled']]: disabled,\n                [styles['description-bottom-padding']]: descriptionBottomPadding,\n              })}\n            >\n              {description}\n            </span>\n          )}\n        </span>\n      </span>\n    </span>\n  );\n}\n","/*\n * ** Detect scrollbar width (blog post); version N/A -- https://davidwalsh.name/detect-scrollbar-width\n *\n * MIT License\n *\n * Copyright (c) 2007-2021 David Walsh\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n/* eslint-disable header/header */\nimport { calculateOnce } from './calculate-once';\n\nexport const browserScrollbarSize = calculateOnce(() => {\n  if (typeof document === 'undefined') {\n    return { width: 0, height: 0 };\n  }\n  const scrollDiv = document.createElement('div');\n  scrollDiv.style.overflow = 'scroll';\n  scrollDiv.style.height = '100px';\n  scrollDiv.style.width = '100px';\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.top = '-9999px';\n  scrollDiv.style.left = '-9999px';\n  document.body.appendChild(scrollDiv);\n\n  const width = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  const height = scrollDiv.offsetHeight - scrollDiv.clientHeight;\n  document.body.removeChild(scrollDiv);\n  return { width, height };\n});\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function calculateOnce<T>(callback: () => T) {\n  let result: T | undefined = undefined;\n  return () => {\n    if (result === undefined) {\n      result = callback();\n    }\n    return result;\n  };\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { ButtonContext } from './button-context';\nimport { CollectionLabelContext } from './collection-label-context';\nimport { FormFieldContext } from './form-field-context';\nimport { InfoLinkLabelContext } from './info-link-label-context';\nimport { defaultValue as linkDefaultValue, LinkDefaultVariantContext } from './link-default-variant-context';\nimport {\n  defaultValue as singleTabStopDefaultValue,\n  SingleTabStopNavigationContext,\n} from './single-tab-stop-navigation-context';\n\n/*\n Use this context-resetter when creating a new modal-type context where typically the contents\n of the modal should not be affected by the surrounding components/DOM.\n */\nconst ResetContextsForModal = ({ children }: { children: React.ReactNode }) => (\n  <ButtonContext.Provider value={{ onClick: () => {} }}>\n    <CollectionLabelContext.Provider value={{ assignId: () => {} }}>\n      <FormFieldContext.Provider value={{}}>\n        <InfoLinkLabelContext.Provider value=\"\">\n          <LinkDefaultVariantContext.Provider value={linkDefaultValue}>\n            <SingleTabStopNavigationContext.Provider value={singleTabStopDefaultValue}>\n              {children}\n            </SingleTabStopNavigationContext.Provider>\n          </LinkDefaultVariantContext.Provider>\n        </InfoLinkLabelContext.Provider>\n      </FormFieldContext.Provider>\n    </CollectionLabelContext.Provider>\n  </ButtonContext.Provider>\n);\n\nexport default ResetContextsForModal;\n","\n    import './styles.scoped.css';\n    export default {\n  \"dialog\": \"awsui_dialog_1d2i7_xpcku_109\",\n  \"modal-slide-up\": \"awsui_modal-slide-up_1d2i7_xpcku_1\",\n  \"awsui-motion-fade-in-0\": \"awsui_awsui-motion-fade-in-0_1d2i7_xpcku_1\",\n  \"refresh\": \"awsui_refresh_1d2i7_xpcku_132\",\n  \"awsui-motion-scale-popup\": \"awsui_awsui-motion-scale-popup_1d2i7_xpcku_1\",\n  \"root\": \"awsui_root_1d2i7_xpcku_165\",\n  \"awsui-motion-fade-in\": \"awsui_awsui-motion-fade-in_1d2i7_xpcku_1\",\n  \"hidden\": \"awsui_hidden_1d2i7_xpcku_249\",\n  \"focus-lock\": \"awsui_focus-lock_1d2i7_xpcku_253\",\n  \"small\": \"awsui_small_1d2i7_xpcku_273\",\n  \"medium\": \"awsui_medium_1d2i7_xpcku_276\",\n  \"large\": \"awsui_large_1d2i7_xpcku_279\",\n  \"max\": \"awsui_max_1d2i7_xpcku_282\",\n  \"breakpoint-xs\": \"awsui_breakpoint-xs_1d2i7_xpcku_282\",\n  \"container\": \"awsui_container_1d2i7_xpcku_288\",\n  \"content\": \"awsui_content_1d2i7_xpcku_332\",\n  \"no-paddings\": \"awsui_no-paddings_1d2i7_xpcku_337\",\n  \"header\": \"awsui_header_1d2i7_xpcku_342\",\n  \"header--text\": \"awsui_header--text_1d2i7_xpcku_354\",\n  \"footer\": \"awsui_footer_1d2i7_xpcku_358\",\n  \"footer--stuck\": \"awsui_footer--stuck_1d2i7_xpcku_367\",\n  \"dismiss-control\": \"awsui_dismiss-control_1d2i7_xpcku_379\",\n  \"modal-open\": \"awsui_modal-open_1d2i7_xpcku_383\"\n};\n  ","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { browserScrollbarSize } from '../internal/utils/browser-scrollbar-size';\n\nimport styles from './styles.css.js';\n\n// Read this before making changes to the code below.\n//\n// When a modal is used from an iframe the body scrolling utils take no effect because they need to be applied to another document.\n// The customers replicate this behavior by running the same code on the correct document instance, see AWSUI-41915.\n// Hence, we should avoid making changes to the component that break the body scrolling logic in its current form.\n\nlet initialBodyPaddingRightStyle: string | undefined = undefined;\n\nexport function disableBodyScrolling() {\n  setBodyScrollbarPadding();\n  document.body.classList.add(styles['modal-open']);\n}\n\nexport function enableBodyScrolling() {\n  document.body.classList.remove(styles['modal-open']);\n  restoreBodyScrollbarPadding();\n}\n\nfunction setBodyScrollbarPadding() {\n  if (bodyHasScrollbar()) {\n    initialBodyPaddingRightStyle = document.body.style.paddingRight;\n    const initialBodyPaddingRight = computedBodyPaddingRightPixels();\n    const scrollbarWidth = browserScrollbarSize().width;\n    const newBodyPaddingRight = initialBodyPaddingRight + scrollbarWidth;\n    document.body.style.paddingRight = newBodyPaddingRight + 'px';\n  }\n}\n\nfunction computedBodyPaddingRightPixels() {\n  return parseInt(window.getComputedStyle(document.body).paddingRight, 10);\n}\n\nfunction restoreBodyScrollbarPadding() {\n  if (initialBodyPaddingRightStyle) {\n    document.body.style.setProperty('padding-right', initialBodyPaddingRightStyle);\n  } else {\n    document.body.style.removeProperty('padding-right');\n  }\n  initialBodyPaddingRightStyle = undefined;\n}\n\nfunction bodyHasScrollbar() {\n  // Unfortunately this difference doesn't appear to match the scrollbar width during testing,\n  // otherwise we could remove browserScrollbarSize().  Bootstrap also doesn't use this difference\n  // directly.\n  return document.body.clientWidth < window.innerWidth;\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { useContainerQuery } from '@cloudscape-design/component-toolkit';\n\nimport { InternalButton } from '../button/internal';\nimport InternalHeader from '../header/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport { FunnelNameSelectorContext } from '../internal/analytics/context/analytics-context';\nimport { useFunnelSubStep } from '../internal/analytics/hooks/use-funnel';\nimport { getBaseProps } from '../internal/base-component';\nimport FocusLock from '../internal/components/focus-lock';\nimport Portal from '../internal/components/portal';\nimport { ModalContext } from '../internal/context/modal-context';\nimport ResetContextsForModal from '../internal/context/reset-contexts-for-modal';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useIntersectionObserver } from '../internal/hooks/use-intersection-observer';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { KeyCode } from '../internal/keycode';\nimport { SomeRequired } from '../internal/types';\nimport { disableBodyScrolling, enableBodyScrolling } from './body-scroll';\nimport { ModalProps } from './interfaces';\n\nimport styles from './styles.css.js';\n\ntype InternalModalProps = SomeRequired<ModalProps, 'size'> & InternalBaseComponentProps;\n\nexport default function InternalModal({ modalRoot, getModalRoot, removeModalRoot, ...rest }: InternalModalProps) {\n  return (\n    <Portal container={modalRoot} getContainer={getModalRoot} removeContainer={removeModalRoot}>\n      <PortaledModal {...rest} />\n    </Portal>\n  );\n}\n\ntype PortaledModalProps = Omit<InternalModalProps, 'modalRoot' | 'getModalRoot' | 'removeModalRoot'>;\n\n// Separate component to prevent the Portal from getting in the way of refs, as it needs extra cycles to render the inner components.\n// useContainerQuery needs its targeted element to exist on the first render in order to work properly.\nfunction PortaledModal({\n  size,\n  visible,\n  header,\n  children,\n  footer,\n  disableContentPaddings,\n  onDismiss,\n  __internalRootRef = null,\n  ...rest\n}: PortaledModalProps) {\n  const instanceUniqueId = useUniqueId();\n  const headerId = `${rest.id || instanceUniqueId}-header`;\n  const lastMouseDownElementRef = useRef<HTMLElement | null>(null);\n  const [breakpoint, breakpointsRef] = useContainerBreakpoints(['xs']);\n\n  const i18n = useInternalI18n('modal');\n  const closeAriaLabel = i18n('closeAriaLabel', rest.closeAriaLabel);\n\n  const refObject = useRef<HTMLDivElement>(null);\n  const mergedRef = useMergeRefs(breakpointsRef, refObject, __internalRootRef);\n\n  const isRefresh = useVisualRefresh();\n\n  const baseProps = getBaseProps(rest);\n\n  // enable body scroll and restore focus if unmounting while visible\n  useEffect(() => {\n    return () => {\n      enableBodyScrolling();\n    };\n  }, []);\n\n  // enable / disable body scroll\n  useEffect(() => {\n    if (visible) {\n      disableBodyScrolling();\n    } else {\n      enableBodyScrolling();\n    }\n  }, [visible]);\n\n  // Because we hide the element with styles (and not actually detach it from DOM), we need to scroll to top\n  useEffect(() => {\n    if (visible && refObject.current) {\n      refObject.current.scrollTop = 0;\n    }\n  }, [visible]);\n\n  const dismiss = (reason: string) => fireNonCancelableEvent(onDismiss, { reason });\n\n  const onOverlayMouseDown = (event: React.MouseEvent) => {\n    lastMouseDownElementRef.current = event.target as HTMLElement;\n  };\n  const onOverlayClick = (event: React.MouseEvent) => {\n    const overlay = refObject.current;\n    const lastClicked = lastMouseDownElementRef.current;\n\n    if (event.target === overlay && lastClicked === overlay) {\n      dismiss('overlay');\n    }\n  };\n  const onCloseButtonClick = () => dismiss('closeButton');\n  const escKeyHandler = (event: React.KeyboardEvent) => {\n    if (event.keyCode === KeyCode.escape) {\n      dismiss('keyboard');\n    }\n  };\n\n  // We use an empty div element at the end of the content slot as a sentinel\n  // to detect when the user has scrolled to the bottom.\n  const { ref: stickySentinelRef, isIntersecting: footerStuck } = useIntersectionObserver();\n\n  // Add extra scroll padding to account for the height of the sticky footer,\n  // to prevent it from covering focused elements.\n  const [footerHeight, footerRef] = useContainerQuery(rect => rect.borderBoxHeight);\n  const { subStepRef } = useFunnelSubStep();\n\n  return (\n    <FunnelNameSelectorContext.Provider value={`.${styles['header--text']}`}>\n      <ResetContextsForModal>\n        <ModalContext.Provider value={{ isInModal: true }}>\n          <div\n            {...baseProps}\n            className={clsx(\n              styles.root,\n              { [styles.hidden]: !visible },\n              baseProps.className,\n              isRefresh && styles.refresh\n            )}\n            role=\"dialog\"\n            aria-modal={true}\n            aria-labelledby={headerId}\n            onMouseDown={onOverlayMouseDown}\n            onClick={onOverlayClick}\n            ref={mergedRef}\n            style={footerHeight ? { scrollPaddingBottom: footerHeight } : undefined}\n            data-awsui-referrer-id={subStepRef.current?.id}\n          >\n            <FocusLock disabled={!visible} autoFocus={true} restoreFocus={true} className={styles['focus-lock']}>\n              <div\n                className={clsx(\n                  styles.dialog,\n                  styles[size],\n                  styles[`breakpoint-${breakpoint}`],\n                  isRefresh && styles.refresh\n                )}\n                onKeyDown={escKeyHandler}\n              >\n                <div className={styles.container}>\n                  <div className={styles.header}>\n                    <InternalHeader\n                      variant=\"h2\"\n                      __disableActionsWrapping={true}\n                      actions={\n                        <InternalButton\n                          ariaLabel={closeAriaLabel}\n                          className={styles['dismiss-control']}\n                          variant=\"modal-dismiss\"\n                          iconName=\"close\"\n                          formAction=\"none\"\n                          onClick={onCloseButtonClick}\n                        />\n                      }\n                    >\n                      <span id={headerId} className={styles['header--text']}>\n                        {header}\n                      </span>\n                    </InternalHeader>\n                  </div>\n                  <div className={clsx(styles.content, { [styles['no-paddings']]: disableContentPaddings })}>\n                    {children}\n                    <div ref={stickySentinelRef} />\n                  </div>\n                  {footer && (\n                    <div ref={footerRef} className={clsx(styles.footer, footerStuck && styles['footer--stuck'])}>\n                      {footer}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </FocusLock>\n          </div>\n        </ModalContext.Provider>\n      </ResetContextsForModal>\n    </FunnelNameSelectorContext.Provider>\n  );\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { RefCallback, useCallback, useRef, useState } from 'react';\n\n/**\n * A hook that uses an Intersection Observer on the target element ref\n * and detects if the element is intersecting with its parent.\n */\nexport function useIntersectionObserver<T extends HTMLElement>() {\n  const observerRef = useRef<IntersectionObserver | null>(null);\n  const [isIntersecting, setIsIntersecting] = useState(false);\n\n  const ref = useCallback<RefCallback<T>>(targetElement => {\n    if (typeof IntersectionObserver === 'undefined') {\n      // Do nothing in environments like JSDOM\n      return;\n    }\n\n    if (observerRef.current) {\n      // Dismiss previous observer because the target changed\n      observerRef.current.disconnect();\n    }\n\n    // Create a new observer with the target element\n    if (targetElement) {\n      observerRef.current = new IntersectionObserver(([entry]) => setIsIntersecting(entry.isIntersecting));\n      observerRef.current.observe(targetElement);\n    }\n  }, []);\n\n  return { ref, isIntersecting };\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { ModalProps } from './interfaces';\nimport InternalModal from './internal';\n\nexport { ModalProps };\n\nexport default function Modal({ size = 'medium', ...props }: ModalProps) {\n  const baseComponentProps = useBaseComponent('Modal', {\n    props: { size, disableContentPaddings: props.disableContentPaddings },\n  });\n  return <InternalModal size={size} {...props} {...baseComponentProps} />;\n}\n\napplyDisplayName(Modal, 'Modal');\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { getBaseProps } from '../internal/base-component';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport useRadioGroupForwardFocus from '../internal/hooks/forward-focus/radio-group';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { GeneratedAnalyticsMetadataRadioGroupSelect } from './analytics-metadata/interfaces';\nimport { RadioGroupProps } from './interfaces';\nimport RadioButton from './radio-button';\n\nimport styles from './styles.css.js';\n\ntype InternalRadioGroupProps = RadioGroupProps & InternalBaseComponentProps;\n\nconst InternalRadioGroup = React.forwardRef(\n  (\n    {\n      name,\n      value,\n      items,\n      ariaLabel,\n      ariaRequired,\n      ariaControls,\n      onChange,\n      readOnly,\n      __internalRootRef = null,\n      ...props\n    }: InternalRadioGroupProps,\n    ref: React.Ref<RadioGroupProps.Ref>\n  ) => {\n    const { ariaDescribedby, ariaLabelledby } = useFormFieldContext(props);\n    const baseProps = getBaseProps(props);\n    const generatedName = useUniqueId('awsui-radio-');\n\n    const [radioButtonRef, radioButtonRefIndex] = useRadioGroupForwardFocus(ref, items, value);\n\n    return (\n      <div\n        role=\"radiogroup\"\n        aria-labelledby={ariaLabelledby}\n        aria-label={ariaLabel}\n        aria-describedby={ariaDescribedby}\n        aria-required={ariaRequired}\n        aria-controls={ariaControls}\n        aria-readonly={readOnly ? 'true' : undefined}\n        {...baseProps}\n        className={clsx(baseProps.className, styles.root)}\n        ref={__internalRootRef}\n      >\n        {items &&\n          items.map((item, index) => (\n            <RadioButton\n              key={item.value}\n              ref={index === radioButtonRefIndex ? radioButtonRef : undefined}\n              checked={item.value === value}\n              name={name || generatedName}\n              value={item.value}\n              label={item.label}\n              description={item.description}\n              disabled={item.disabled}\n              onChange={onChange}\n              controlId={item.controlId}\n              readOnly={readOnly}\n              {...getAnalyticsMetadataAttribute(\n                !item.disabled && !readOnly\n                  ? {\n                      detail: {\n                        position: `${index + 1}`,\n                        value: item.value,\n                      } as Partial<GeneratedAnalyticsMetadataRadioGroupSelect['detail']>,\n                    }\n                  : {}\n              )}\n            />\n          ))}\n      </div>\n    );\n  }\n);\n\nexport default InternalRadioGroup;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useImperativeHandle, useRef } from 'react';\n\nexport interface ForwardFocusRef {\n  focus(): void;\n}\n\n/**\n * Focus forwarding helper for radio groups where only the first selected\n * child element should be focused.\n */\nexport default function useRadioGroupForwardFocus(\n  forwardedRef: React.Ref<ForwardFocusRef>,\n  items: ReadonlyArray<{ value: string }> | undefined,\n  value: string | null\n): [React.Ref<HTMLInputElement>, number] {\n  const itemRef = useRef<HTMLInputElement | null>(null);\n  const itemIndex = items && findIndex(items, item => item.value === value);\n  useImperativeHandle(forwardedRef, () => ({\n    focus() {\n      itemRef.current?.focus();\n    },\n  }));\n\n  return [itemRef, itemIndex !== undefined && itemIndex !== -1 ? itemIndex : 0];\n}\n\nfunction findIndex<T>(items: ReadonlyArray<T>, predicate: (t: T) => any): number {\n  for (let i = 0; i < items.length; i++) {\n    if (predicate(items[i])) {\n      return i;\n    }\n  }\n  return -1;\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { GeneratedAnalyticsMetadataRadioGroupComponent } from './analytics-metadata/interfaces';\nimport { RadioGroupProps } from './interfaces';\nimport InternalRadioGroup from './internal';\n\nexport { RadioGroupProps };\n\nconst RadioGroup = React.forwardRef((props: RadioGroupProps, ref: React.Ref<RadioGroupProps.Ref>) => {\n  const baseComponentProps = useBaseComponent('RadioGroup');\n  return (\n    <InternalRadioGroup\n      ref={ref}\n      {...props}\n      {...baseComponentProps}\n      {...getAnalyticsMetadataAttribute({\n        component: {\n          name: 'awsui.RadioGroup',\n          label: { root: 'self' },\n        } as GeneratedAnalyticsMetadataRadioGroupComponent,\n      })}\n    />\n  );\n});\n\napplyDisplayName(RadioGroup, 'RadioGroup');\nexport default RadioGroup;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { copyAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport AbstractSwitch from '../internal/components/abstract-switch';\nimport { useSingleTabStopNavigation } from '../internal/context/single-tab-stop-navigation-context';\nimport { fireNonCancelableEvent, NonCancelableEventHandler } from '../internal/events';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { RadioGroupProps } from './interfaces';\n\nimport styles from './styles.css.js';\n\ninterface RadioButtonProps extends RadioGroupProps.RadioButtonDefinition {\n  name: string;\n  checked: boolean;\n  onChange?: NonCancelableEventHandler<RadioGroupProps.ChangeDetail>;\n  readOnly?: boolean;\n}\n\nexport default React.forwardRef(function RadioButton(\n  { name, label, value, checked, description, disabled, controlId, onChange, readOnly, ...rest }: RadioButtonProps,\n  ref: React.Ref<HTMLInputElement>\n) {\n  const isVisualRefresh = useVisualRefresh();\n  const radioButtonRef = useRef<HTMLInputElement>(null);\n  const mergedRefs = useMergeRefs(radioButtonRef, ref);\n\n  const { tabIndex } = useSingleTabStopNavigation(radioButtonRef);\n\n  return (\n    <AbstractSwitch\n      className={clsx(styles.radio, description && styles['radio--has-description'])}\n      controlClassName={styles['radio-control']}\n      outlineClassName={styles.outline}\n      label={label}\n      description={description}\n      disabled={disabled}\n      readOnly={readOnly}\n      controlId={controlId}\n      {...copyAnalyticsMetadataAttribute(rest)}\n      nativeControl={nativeControlProps => (\n        <input\n          {...nativeControlProps}\n          tabIndex={tabIndex}\n          type=\"radio\"\n          ref={mergedRefs}\n          name={name}\n          value={value}\n          checked={checked}\n          aria-disabled={readOnly && !disabled ? 'true' : undefined}\n          // empty handler to suppress React controllability warning\n          onChange={() => {}}\n        />\n      )}\n      onClick={() => {\n        radioButtonRef.current?.focus();\n        if (checked) {\n          return;\n        }\n        fireNonCancelableEvent(onChange, { value });\n      }}\n      styledControl={\n        <svg viewBox=\"0 0 100 100\" focusable=\"false\" aria-hidden=\"true\">\n          <circle\n            className={clsx(styles['styled-circle-border'], {\n              [styles['styled-circle-disabled']]: disabled,\n              [styles['styled-circle-readonly']]: readOnly,\n            })}\n            strokeWidth={isVisualRefresh ? 12 : 8}\n            cx={50}\n            cy={50}\n            r={isVisualRefresh ? 44 : 46}\n          />\n          <circle\n            className={clsx(styles['styled-circle-fill'], {\n              [styles['styled-circle-disabled']]: disabled,\n              [styles['styled-circle-checked']]: checked,\n              [styles['styled-circle-readonly']]: readOnly,\n            })}\n            strokeWidth={30}\n            cx={50}\n            cy={50}\n            r={35}\n          />\n        </svg>\n      }\n    />\n  );\n});\n","\n    import './styles.scoped.css';\n    export default {\n  \"root\": \"awsui_root_1mabk_fodq7_97\",\n  \"radio\": \"awsui_radio_1mabk_fodq7_133\",\n  \"radio--has-description\": \"awsui_radio--has-description_1mabk_fodq7_141\",\n  \"radio-control\": \"awsui_radio-control_1mabk_fodq7_145\",\n  \"outline\": \"awsui_outline_1mabk_fodq7_153\",\n  \"styled-circle-border\": \"awsui_styled-circle-border_1mabk_fodq7_175\",\n  \"styled-circle-disabled\": \"awsui_styled-circle-disabled_1mabk_fodq7_179\",\n  \"styled-circle-readonly\": \"awsui_styled-circle-readonly_1mabk_fodq7_179\",\n  \"styled-circle-fill\": \"awsui_styled-circle-fill_1mabk_fodq7_184\",\n  \"styled-circle-checked\": \"awsui_styled-circle-checked_1mabk_fodq7_190\"\n};\n  ","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { TableProps } from '../interfaces';\n\nexport type SortingStatus = 'sortable' | 'ascending' | 'descending';\nconst stateToIcon = {\n  sortable: 'caret-down',\n  ascending: 'caret-up-filled',\n  descending: 'caret-down-filled',\n} as const;\n\nexport const getSortingStatus = (\n  sortable: boolean,\n  sorted: boolean,\n  descending: boolean,\n  disabled: boolean\n): SortingStatus | undefined => {\n  if (sorted) {\n    if (descending) {\n      return 'descending';\n    }\n    return 'ascending';\n  }\n  if (sortable && !disabled) {\n    return 'sortable';\n  }\n  return undefined;\n};\n\nexport const getSortingIconName = (sortingState: SortingStatus) => stateToIcon[sortingState];\nexport const isSorted = <T>(column: TableProps.ColumnDefinition<T>, sortingColumn: TableProps.SortingColumn<T>) =>\n  column === sortingColumn ||\n  (column.sortingField !== undefined && column.sortingField === sortingColumn.sortingField) ||\n  (column.sortingComparator !== undefined && column.sortingComparator === sortingColumn.sortingComparator);\nexport const getSortingColumnId = <T>(\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<T>> = [],\n  sortingColumn?: TableProps.SortingColumn<T>\n) => {\n  if (!sortingColumn) {\n    return null;\n  }\n  for (let i = 0; i < columnDefinitions.length; i++) {\n    if (isSorted(columnDefinitions[i], sortingColumn)) {\n      return columnDefinitions[i].id || null;\n    }\n  }\n  return null;\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useRef } from 'react';\n\nimport { createSingletonHandler } from '@cloudscape-design/component-toolkit/internal';\n\nconst useEventListenersSingleton = createSingletonHandler<Node | null>(setTarget => {\n  function handleMouseDown(event: MouseEvent) {\n    setTarget(event.target as Node);\n  }\n  function handleKeyDown() {\n    setTarget(null);\n  }\n  window.addEventListener('mousedown', handleMouseDown);\n  window.addEventListener('keydown', handleKeyDown);\n  return () => {\n    window.removeEventListener('mousedown', handleMouseDown);\n    window.removeEventListener('keydown', handleKeyDown);\n  };\n});\n\n/**\n * Captures last mouse down target and clears it on keydown.\n * @returns a callback to get the last detected mouse down target.\n */\nexport default function useMouseDownTarget() {\n  const mouseDownTargetRef = useRef<null | Node>(null);\n  useEventListenersSingleton(target => {\n    mouseDownTargetRef.current = target;\n  });\n  return () => mouseDownTargetRef.current;\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useEffect, useRef } from 'react';\n\nimport { useStableCallback } from '@cloudscape-design/component-toolkit/internal';\n\nimport { nodeBelongs } from '../../internal/utils/node-belongs';\n\nexport function useClickAway(onClick: () => void) {\n  const awayRef = useRef<any>(null);\n  const onClickStable = useStableCallback(onClick);\n  useEffect(() => {\n    function handleClick(event: Event) {\n      if (!nodeBelongs(awayRef.current, event.target as HTMLElement)) {\n        onClickStable();\n      }\n    }\n    // contains returns wrong result if the next render would remove the element\n    // but capture phase happens before the render, so returns correct result\n    // Ref: https://github.com/facebook/react/issues/20325\n    document.addEventListener('click', handleClick, { capture: true });\n    return () => document.removeEventListener('click', handleClick, { capture: true });\n  }, [onClickStable]);\n  return awayRef;\n}\n","\n    import './styles.scoped.css';\n    export default {\n  \"expand-toggle-icon\": \"awsui_expand-toggle-icon_1ss49_1npai_97\",\n  \"expand-toggle-icon-expanded\": \"awsui_expand-toggle-icon-expanded_1ss49_1npai_122\",\n  \"expand-toggle\": \"awsui_expand-toggle_1ss49_1npai_97\"\n};\n  ","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\n\nimport InternalIcon from '../../icon/internal';\nimport { useSingleTabStopNavigation } from '../../internal/context/single-tab-stop-navigation-context';\n\nimport styles from './styles.css.js';\n\nexport function ExpandToggleButton({\n  isExpanded,\n  onExpandableItemToggle,\n  expandButtonLabel,\n  collapseButtonLabel,\n}: {\n  isExpanded?: boolean;\n  onExpandableItemToggle?: () => void;\n  expandButtonLabel?: string;\n  collapseButtonLabel?: string;\n}) {\n  const buttonRef = useRef<HTMLButtonElement>(null);\n  const { tabIndex } = useSingleTabStopNavigation(buttonRef);\n  return (\n    <button\n      ref={buttonRef}\n      tabIndex={tabIndex}\n      aria-label={isExpanded ? collapseButtonLabel : expandButtonLabel}\n      aria-expanded={isExpanded}\n      className={styles['expand-toggle']}\n      onClick={onExpandableItemToggle}\n    >\n      <InternalIcon\n        size=\"small\"\n        name=\"caret-down-filled\"\n        className={clsx(styles['expand-toggle-icon'], isExpanded && styles['expand-toggle-icon-expanded'])}\n      />\n    </button>\n  );\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useLayoutEffect, useState } from 'react';\nimport { unstable_batchedUpdates } from 'react-dom';\n\nimport { usePrevious } from '../../internal/hooks/use-previous';\n\ntype Selector<S, R> = (state: S) => R;\ntype Listener<S> = (state: S, prevState: S) => void;\n\nexport interface ReadonlyAsyncStore<S> {\n  get(): S;\n  subscribe<R>(selector: Selector<S, R>, listener: Listener<S>): () => void;\n  unsubscribe(listener: Listener<S>): void;\n}\n\nexport default class AsyncStore<S> implements ReadonlyAsyncStore<S> {\n  _state: S;\n  _listeners: [Selector<S, unknown>, Listener<S>][] = [];\n\n  constructor(state: S) {\n    this._state = state;\n  }\n\n  get(): S {\n    return this._state;\n  }\n\n  set(cb: (state: S) => S): void {\n    const prevState = this._state;\n    const newState = cb(prevState);\n\n    this._state = newState;\n\n    unstable_batchedUpdates(() => {\n      for (const [selector, listener] of this._listeners) {\n        if (selector(prevState) !== selector(newState)) {\n          listener(newState, prevState);\n        }\n      }\n    });\n  }\n\n  subscribe<R>(selector: Selector<S, R>, listener: Listener<S>): () => void {\n    this._listeners.push([selector, listener]);\n\n    return () => this.unsubscribe(listener);\n  }\n\n  unsubscribe(listener: Listener<S>): void {\n    for (let index = 0; index < this._listeners.length; index++) {\n      const [, storedListener] = this._listeners[index];\n\n      if (storedListener === listener) {\n        this._listeners.splice(index, 1);\n        break;\n      }\n    }\n  }\n}\n\nexport function useReaction<S, R>(store: ReadonlyAsyncStore<S>, selector: Selector<S, R>, effect: Listener<R>): void {\n  useLayoutEffect(\n    () => {\n      const unsubscribe = store.subscribe(selector, (newState, prevState) =>\n        effect(selector(newState), selector(prevState))\n      );\n      return unsubscribe;\n    },\n    // ignoring selector and effect as they are expected to stay constant\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [store]\n  );\n}\n\nexport function useSelector<S, R>(store: ReadonlyAsyncStore<S>, selector: Selector<S, R>): R {\n  const [state, setState] = useState<R>(selector(store.get()));\n\n  useReaction(store, selector, newState => {\n    setState(newState);\n  });\n\n  // When store changes we need the state to be updated synchronously to avoid inconsistencies.\n  const prevStore = usePrevious(store);\n  if (prevStore !== null && prevStore !== store) {\n    return selector(store.get());\n  }\n\n  return state;\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useCallback, useEffect, useMemo, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { useResizeObserver, useStableCallback } from '@cloudscape-design/component-toolkit/internal';\nimport { getLogicalBoundingClientRect, getScrollInlineStart } from '@cloudscape-design/component-toolkit/internal';\n\nimport AsyncStore, { ReadonlyAsyncStore } from '../../area-chart/async-store';\nimport {\n  CellOffsets,\n  StickyColumnsCellState,\n  StickyColumnsProps,\n  StickyColumnsState,\n  StickyColumnsWrapperState,\n} from './interfaces';\nimport { isCellStatesEqual, isWrapperStatesEqual, updateCellOffsets } from './utils';\n\n// We allow the table to have a minimum of 148px of available space besides the sum of the widths of the sticky columns\n// This value is an UX recommendation and is approximately 1/3 of our smallest breakpoint (465px)\nconst MINIMUM_SCROLLABLE_SPACE = 148;\n\nexport interface StickyColumnsModel {\n  store: ReadonlyAsyncStore<StickyColumnsState>;\n  style: {\n    wrapper?: React.CSSProperties;\n  };\n  refs: {\n    table: React.RefCallback<HTMLElement>;\n    wrapper: React.RefCallback<HTMLElement>;\n    cell: (columnId: PropertyKey, node: null | HTMLElement) => void;\n  };\n}\n\nexport function useStickyColumns({\n  visibleColumns,\n  stickyColumnsFirst,\n  stickyColumnsLast,\n}: StickyColumnsProps): StickyColumnsModel {\n  const store = useMemo(() => new StickyColumnsStore(), []);\n  const wrapperRef = useRef<HTMLElement>(null) as React.MutableRefObject<null | HTMLElement>;\n  const tableRef = useRef<HTMLElement>(null) as React.MutableRefObject<null | HTMLElement>;\n  const cellsRef = useRef(new Map<PropertyKey, HTMLElement>());\n\n  const hasStickyColumns = stickyColumnsFirst + stickyColumnsLast > 0;\n\n  const updateStickyStyles = useStableCallback(() => {\n    if (wrapperRef.current && tableRef.current) {\n      store.updateCellStyles({\n        wrapper: wrapperRef.current,\n        table: tableRef.current,\n        cells: cellsRef.current,\n        visibleColumns,\n        stickyColumnsFirst,\n        stickyColumnsLast,\n      });\n    }\n  });\n\n  useResizeObserver(wrapperRef, updateStickyStyles);\n\n  useResizeObserver(tableRef, updateStickyStyles);\n\n  useEffect(() => {\n    if (wrapperRef.current && tableRef.current) {\n      store.updateCellStyles({\n        wrapper: wrapperRef.current,\n        table: tableRef.current,\n        cells: cellsRef.current,\n        visibleColumns,\n        stickyColumnsFirst,\n        stickyColumnsLast,\n      });\n    }\n  }, [store, stickyColumnsFirst, stickyColumnsLast, visibleColumns]);\n\n  // Update wrapper styles imperatively to avoid unnecessary re-renders.\n  useEffect(() => {\n    if (!hasStickyColumns) {\n      return;\n    }\n\n    const selector = (state: StickyColumnsState) => state.wrapperState;\n\n    const updateWrapperStyles = (state: StickyColumnsWrapperState, prev: StickyColumnsWrapperState) => {\n      if (isWrapperStatesEqual(state, prev)) {\n        return;\n      }\n\n      if (wrapperRef.current) {\n        wrapperRef.current.style.scrollPaddingInlineStart = state.scrollPaddingInlineStart + 'px';\n        wrapperRef.current.style.scrollPaddingInlineEnd = state.scrollPaddingInlineEnd + 'px';\n      }\n    };\n\n    const unsubscribe = store.subscribe(selector, (newState, prevState) =>\n      updateWrapperStyles(selector(newState), selector(prevState))\n    );\n    return unsubscribe;\n  }, [store, hasStickyColumns]);\n\n  const setWrapper = useCallback(\n    (node: null | HTMLElement) => {\n      if (wrapperRef.current) {\n        wrapperRef.current.removeEventListener('scroll', updateStickyStyles);\n      }\n      if (node && hasStickyColumns) {\n        node.addEventListener('scroll', updateStickyStyles);\n      }\n      wrapperRef.current = node;\n    },\n    [hasStickyColumns, updateStickyStyles]\n  );\n\n  const setTable = useCallback((node: null | HTMLElement) => {\n    tableRef.current = node;\n  }, []);\n\n  const setCell = useCallback((columnId: PropertyKey, node: null | HTMLElement) => {\n    if (node) {\n      cellsRef.current.set(columnId, node);\n    } else {\n      cellsRef.current.delete(columnId);\n    }\n  }, []);\n\n  return {\n    store,\n    style: {\n      // Provide wrapper styles as props so that a re-render won't cause invalidation.\n      wrapper: hasStickyColumns ? { ...store.get().wrapperState } : undefined,\n    },\n    refs: { wrapper: setWrapper, table: setTable, cell: setCell },\n  };\n}\n\ninterface UseStickyCellStylesProps {\n  stickyColumns: StickyColumnsModel;\n  columnId: PropertyKey;\n  getClassName: (styles: null | StickyColumnsCellState) => Record<string, boolean>;\n}\n\ninterface StickyCellStyles {\n  ref: React.RefCallback<HTMLElement>;\n  className?: string;\n  style?: React.CSSProperties;\n}\n\nexport function useStickyCellStyles({\n  stickyColumns,\n  columnId,\n  getClassName,\n}: UseStickyCellStylesProps): StickyCellStyles {\n  const setCell = stickyColumns.refs.cell;\n\n  // unsubscribeRef to hold the function to unsubscribe from the store's updates\n  const unsubscribeRef = useRef<null | (() => void)>(null);\n\n  // refCallback updates the cell ref and sets up the store subscription\n  const refCallback = useCallback(\n    (cellElement: null | HTMLElement) => {\n      if (unsubscribeRef.current) {\n        // Unsubscribe before we do any updates to avoid leaving any subscriptions hanging\n        unsubscribeRef.current();\n      }\n\n      // Update cellRef and the store's state to point to the new DOM node\n      setCell(columnId, cellElement);\n\n      // Update cell styles imperatively to avoid unnecessary re-renders.\n      const selector = (state: StickyColumnsState) => state.cellState.get(columnId) ?? null;\n\n      const updateCellStyles = (state: null | StickyColumnsCellState, prev: null | StickyColumnsCellState) => {\n        if (isCellStatesEqual(state, prev)) {\n          return;\n        }\n\n        const className = getClassName(state);\n        if (cellElement) {\n          Object.keys(className).forEach(key => {\n            if (className[key]) {\n              cellElement.classList.add(key);\n            } else {\n              cellElement.classList.remove(key);\n            }\n          });\n          cellElement.style.insetInlineStart =\n            state?.offset.insetInlineStart !== undefined ? `${state.offset.insetInlineStart}px` : '';\n          cellElement.style.insetInlineEnd =\n            state?.offset.insetInlineEnd !== undefined ? `${state.offset.insetInlineEnd}px` : '';\n        }\n      };\n\n      // If the node is not null (i.e., the table cell is being mounted or updated, not unmounted),\n      // set up a new subscription to the store's updates\n      if (cellElement) {\n        unsubscribeRef.current = stickyColumns.store.subscribe(selector, (newState, prevState) => {\n          updateCellStyles(selector(newState), selector(prevState));\n        });\n      }\n    },\n\n    // getClassName is expected to be pure\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [columnId, setCell, stickyColumns.store]\n  );\n\n  // Provide cell styles as props so that a re-render won't cause invalidation.\n  const cellStyles = stickyColumns.store.get().cellState.get(columnId);\n  return {\n    ref: refCallback,\n    className: cellStyles ? clsx(getClassName(cellStyles)) : undefined,\n    style: cellStyles?.offset ?? undefined,\n  };\n}\n\ninterface UpdateCellStylesProps {\n  wrapper: HTMLElement;\n  table: HTMLElement;\n  cells: Map<PropertyKey, HTMLElement>;\n  visibleColumns: readonly PropertyKey[];\n  stickyColumnsFirst: number;\n  stickyColumnsLast: number;\n}\n\nexport default class StickyColumnsStore extends AsyncStore<StickyColumnsState> {\n  private cellOffsets: CellOffsets = {\n    offsets: new Map(),\n    stickyWidthInlineStart: 0,\n    stickyWidthInlineEnd: 0,\n  };\n  private isStuckToTheInlineStart = false;\n  private isStuckToTheInlineEnd = false;\n  private padInlineStart = false;\n\n  constructor() {\n    super({ cellState: new Map(), wrapperState: { scrollPaddingInlineStart: 0, scrollPaddingInlineEnd: 0 } });\n  }\n\n  public updateCellStyles(props: UpdateCellStylesProps) {\n    const hasStickyColumns = props.stickyColumnsFirst + props.stickyColumnsLast > 0;\n    const hadStickyColumns = this.cellOffsets.offsets.size > 0;\n\n    if (hasStickyColumns || hadStickyColumns) {\n      this.updateScroll(props);\n      this.updateCellOffsets(props);\n      this.set(() => ({\n        cellState: this.generateCellStyles(props),\n        wrapperState: {\n          scrollPaddingInlineStart: this.cellOffsets.stickyWidthInlineStart,\n          scrollPaddingInlineEnd: this.cellOffsets.stickyWidthInlineEnd,\n        },\n      }));\n    }\n  }\n\n  private updateScroll(props: UpdateCellStylesProps) {\n    const wrapperScrollInlineStart = getScrollInlineStart(props.wrapper);\n    const wrapperScrollWidth = props.wrapper.scrollWidth;\n    const wrapperClientWidth = props.wrapper.clientWidth;\n    const tablePaddingInlineStart = parseFloat(getComputedStyle(props.table).paddingInlineStart) || 0;\n    const tablePaddingInlineEnd = parseFloat(getComputedStyle(props.table).paddingInlineEnd) || 0;\n\n    this.isStuckToTheInlineStart = wrapperScrollInlineStart > tablePaddingInlineStart;\n\n    // Math.ceil() is used here to address an edge-case in certain browsers, where they return non-integer wrapperScrollInlineStart values\n    // which are lower than expected (sub-pixel difference), resulting in the table always being in the \"stuck to the right\" state\n    this.isStuckToTheInlineEnd =\n      Math.ceil(wrapperScrollInlineStart) < wrapperScrollWidth - wrapperClientWidth - tablePaddingInlineEnd;\n\n    this.padInlineStart = tablePaddingInlineStart !== 0 && this.isStuckToTheInlineStart;\n  }\n\n  private generateCellStyles = (props: UpdateCellStylesProps): Map<PropertyKey, StickyColumnsCellState> => {\n    const isEnabled = this.isEnabled(props);\n    const lastLeftStickyColumnIndex = props.stickyColumnsFirst - 1;\n    const lastRightStickyColumnIndex = props.visibleColumns.length - props.stickyColumnsLast;\n\n    return props.visibleColumns.reduce((acc, columnId, index) => {\n      let stickySide = 'non-sticky';\n      if (index < props.stickyColumnsFirst) {\n        stickySide = 'inline-start';\n      } else if (index >= props.visibleColumns.length - props.stickyColumnsLast) {\n        stickySide = 'inline-end';\n      }\n\n      if (!isEnabled || stickySide === 'non-sticky') {\n        return acc;\n      }\n\n      // Determine the offset of the sticky column using the `cellOffsets` state object\n      const isFirstColumn = index === 0;\n      const stickyColumnOffsetLeft = this.cellOffsets.offsets.get(columnId)?.first ?? 0;\n      const stickyColumnOffsetRight = this.cellOffsets.offsets.get(columnId)?.last ?? 0;\n\n      acc.set(columnId, {\n        padInlineStart: isFirstColumn && this.padInlineStart,\n        lastInsetInlineStart: this.isStuckToTheInlineStart && lastLeftStickyColumnIndex === index,\n        lastInsetInlineEnd: this.isStuckToTheInlineEnd && lastRightStickyColumnIndex === index,\n        offset: {\n          insetInlineStart: stickySide === 'inline-start' ? stickyColumnOffsetLeft : undefined,\n          insetInlineEnd: stickySide === 'inline-end' ? stickyColumnOffsetRight : undefined,\n        },\n      });\n      return acc;\n    }, new Map<PropertyKey, StickyColumnsCellState>());\n  };\n\n  private updateCellOffsets = (props: UpdateCellStylesProps): void => {\n    this.cellOffsets = updateCellOffsets(props.cells, props);\n  };\n\n  private isEnabled = (props: UpdateCellStylesProps): boolean => {\n    const noStickyColumns = props.stickyColumnsFirst + props.stickyColumnsLast === 0;\n    if (noStickyColumns) {\n      return false;\n    }\n\n    const wrapperWidth = getLogicalBoundingClientRect(props.wrapper).inlineSize;\n    const tableWidth = getLogicalBoundingClientRect(props.table).inlineSize;\n    const isWrapperScrollable = tableWidth > wrapperWidth;\n    if (!isWrapperScrollable) {\n      return false;\n    }\n\n    const totalStickySpace = this.cellOffsets.stickyWidthInlineStart + this.cellOffsets.stickyWidthInlineEnd;\n    const tablePaddingLeft = parseFloat(getComputedStyle(props.table).paddingLeft) || 0;\n    const tablePaddingRight = parseFloat(getComputedStyle(props.table).paddingRight) || 0;\n    const hasEnoughScrollableSpace =\n      totalStickySpace + MINIMUM_SCROLLABLE_SPACE + tablePaddingLeft + tablePaddingRight < wrapperWidth;\n    if (!hasEnoughScrollableSpace) {\n      return false;\n    }\n\n    return true;\n  };\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { getLogicalBoundingClientRect } from '@cloudscape-design/component-toolkit/internal';\n\nimport { CellOffsets, StickyColumnsCellState, StickyColumnsProps, StickyColumnsWrapperState } from './interfaces';\n\nexport function isCellStatesEqual(s1: null | StickyColumnsCellState, s2: null | StickyColumnsCellState): boolean {\n  if (s1 && s2) {\n    return (\n      s1.padInlineStart === s2.padInlineStart &&\n      s1.lastInsetInlineStart === s2.lastInsetInlineStart &&\n      s1.lastInsetInlineEnd === s2.lastInsetInlineEnd &&\n      s1.offset.insetInlineStart === s2.offset.insetInlineStart &&\n      s1.offset.insetInlineEnd === s2.offset.insetInlineEnd\n    );\n  }\n  return s1 === s2;\n}\n\nexport function isWrapperStatesEqual(s1: StickyColumnsWrapperState, s2: StickyColumnsWrapperState): boolean {\n  return (\n    s1.scrollPaddingInlineStart === s2.scrollPaddingInlineStart &&\n    s1.scrollPaddingInlineEnd === s2.scrollPaddingInlineEnd\n  );\n}\n\nexport function updateCellOffsets(cells: Map<PropertyKey, HTMLElement>, props: StickyColumnsProps): CellOffsets {\n  const totalColumns = props.visibleColumns.length;\n\n  const firstColumnsWidths: number[] = [];\n  for (let i = 0; i < Math.min(totalColumns, props.stickyColumnsFirst); i++) {\n    const element = cells.get(props.visibleColumns[i]);\n    const cellWidth = element ? getLogicalBoundingClientRect(element).inlineSize : 0;\n    firstColumnsWidths[i] = (firstColumnsWidths[i - 1] ?? 0) + cellWidth;\n  }\n\n  const lastColumnsWidths: number[] = [];\n  for (let i = 0; i < Math.min(totalColumns, props.stickyColumnsLast); i++) {\n    const element = cells.get(props.visibleColumns[totalColumns - 1 - i]);\n    const cellWidth = element ? getLogicalBoundingClientRect(element).inlineSize : 0;\n    lastColumnsWidths[i] = (lastColumnsWidths[i - 1] ?? 0) + cellWidth;\n  }\n\n  const stickyWidthInlineStart = firstColumnsWidths[props.stickyColumnsFirst - 1] ?? 0;\n  const stickyWidthInlineEnd = lastColumnsWidths[props.stickyColumnsLast - 1] ?? 0;\n  const offsets = props.visibleColumns.reduce(\n    (map, columnId, columnIndex) =>\n      map.set(columnId, {\n        first: firstColumnsWidths[columnIndex - 1] ?? 0,\n        last: lastColumnsWidths[totalColumns - 1 - columnIndex - 1] ?? 0,\n      }),\n    new Map()\n  );\n\n  return { offsets, stickyWidthInlineStart, stickyWidthInlineEnd };\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { TableRole } from './interfaces';\n\ntype SortingStatus = 'sortable' | 'ascending' | 'descending';\n\nconst stateToAriaSort = {\n  sortable: 'none',\n  ascending: 'ascending',\n  descending: 'descending',\n} as const;\nconst getAriaSort = (sortingState: SortingStatus) => stateToAriaSort[sortingState];\n\n// Depending on its content the table can have different semantic representation which includes the\n// ARIA role of the table component (\"table\", \"grid\", \"treegrid\") but also roles and other semantic attributes\n// of the child elements. The TableRole helper encapsulates table's semantic structure.\n\nexport function getTableRoleProps(options: {\n  tableRole: TableRole;\n  ariaLabel?: string;\n  ariaLabelledby?: string;\n  totalItemsCount?: number;\n  totalColumnsCount?: number;\n}): React.TableHTMLAttributes<HTMLTableElement> {\n  const nativeProps: React.TableHTMLAttributes<HTMLTableElement> = {};\n\n  // Browsers have weird mechanism to guess whether it's a data table or a layout table.\n  // If we state explicitly, they get it always correctly even with low number of rows.\n  nativeProps.role = options.tableRole === 'grid-default' ? 'grid' : options.tableRole;\n\n  nativeProps['aria-label'] = options.ariaLabel;\n  nativeProps['aria-labelledby'] = options.ariaLabelledby;\n\n  // Incrementing the total count by one to account for the header row.\n  nativeProps['aria-rowcount'] = typeof options.totalItemsCount === 'number' ? options.totalItemsCount + 1 : -1;\n\n  if (options.tableRole === 'grid' || options.tableRole === 'treegrid') {\n    nativeProps['aria-colcount'] = options.totalColumnsCount;\n  }\n\n  // Make table component programmatically focusable to attach focusin/focusout for keyboard navigation.\n  if (options.tableRole === 'grid' || options.tableRole === 'treegrid') {\n    nativeProps.tabIndex = -1;\n  }\n\n  return nativeProps;\n}\n\nexport function getTableWrapperRoleProps(options: {\n  tableRole: TableRole;\n  isScrollable: boolean;\n  ariaLabel?: string;\n  ariaLabelledby?: string;\n}) {\n  const nativeProps: React.HTMLAttributes<HTMLDivElement> = {};\n\n  // When the table is scrollable, the wrapper is made focusable so that keyboard users can scroll it horizontally with arrow keys.\n  if (options.isScrollable) {\n    nativeProps.role = 'region';\n    nativeProps.tabIndex = 0;\n    nativeProps['aria-label'] = options.ariaLabel;\n    nativeProps['aria-labelledby'] = options.ariaLabelledby;\n  }\n\n  return nativeProps;\n}\n\nexport function getTableHeaderRowRoleProps(options: { tableRole: TableRole }) {\n  const nativeProps: React.HTMLAttributes<HTMLTableRowElement> = {};\n\n  // For grids headers are treated similar to data rows and are indexed accordingly.\n  if (options.tableRole === 'grid' || options.tableRole === 'grid-default' || options.tableRole === 'treegrid') {\n    nativeProps['aria-rowindex'] = 1;\n  }\n\n  return nativeProps;\n}\n\nexport function getTableRowRoleProps(options: {\n  tableRole: TableRole;\n  rowIndex: number;\n  firstIndex?: number;\n  level?: number;\n  setSize?: number;\n  posInSet?: number;\n}) {\n  const nativeProps: React.HTMLAttributes<HTMLTableRowElement> = {};\n\n  // The data cell indices are incremented by 1 to account for the header cells.\n  if (options.tableRole === 'grid' || options.tableRole === 'treegrid') {\n    nativeProps['aria-rowindex'] = (options.firstIndex || 1) + options.rowIndex + 1;\n  }\n  // For tables indices are only added when the first index is not 0 (not the first page/frame).\n  else if (options.firstIndex !== undefined) {\n    nativeProps['aria-rowindex'] = options.firstIndex + options.rowIndex + 1;\n  }\n  if (options.tableRole === 'treegrid' && options.level && options.level !== 0) {\n    nativeProps['aria-level'] = options.level;\n  }\n  if (options.tableRole === 'treegrid' && options.setSize) {\n    nativeProps['aria-setsize'] = options.setSize;\n  }\n  if (options.tableRole === 'treegrid' && options.posInSet) {\n    nativeProps['aria-posinset'] = options.posInSet;\n  }\n\n  return nativeProps;\n}\n\nexport function getTableColHeaderRoleProps(options: {\n  tableRole: TableRole;\n  colIndex: number;\n  sortingStatus?: SortingStatus;\n}) {\n  const nativeProps: React.ThHTMLAttributes<HTMLTableCellElement> = {};\n\n  nativeProps.scope = 'col';\n\n  if (options.tableRole === 'grid' || options.tableRole === 'treegrid') {\n    nativeProps['aria-colindex'] = options.colIndex + 1;\n  }\n\n  if (options.sortingStatus) {\n    nativeProps['aria-sort'] = getAriaSort(options.sortingStatus);\n  }\n\n  return nativeProps;\n}\n\nexport function getTableCellRoleProps(options: { tableRole: TableRole; colIndex: number; isRowHeader?: boolean }) {\n  const nativeProps: React.TdHTMLAttributes<HTMLTableCellElement> = {};\n\n  if (options.tableRole === 'grid' || options.tableRole === 'treegrid') {\n    nativeProps['aria-colindex'] = options.colIndex + 1;\n  }\n\n  if (options.isRowHeader) {\n    nativeProps.scope = 'row';\n  }\n\n  return nativeProps;\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\n\nimport { InternalContainerProps } from '../container/internal';\nimport { TableProps } from './interfaces';\nimport { StickyColumnsCellState } from './sticky-columns';\n\nexport const applyTrackBy = <T>(trackBy: TableProps.TrackBy<T>, item: T) => {\n  if (typeof trackBy === 'function') {\n    return trackBy(item);\n  }\n  return (item as any)[trackBy];\n};\n\nexport const getItemKey = <T>(trackBy: TableProps.TrackBy<T> | undefined, item: T, index: number) => {\n  if (!trackBy) {\n    return index;\n  }\n  return applyTrackBy(trackBy, item);\n};\n\nexport const getTrackableValue = <T>(trackBy: TableProps.TrackBy<T> | undefined, item: T) => {\n  if (!trackBy) {\n    return item;\n  }\n  return applyTrackBy(trackBy, item);\n};\n\nexport const getColumnKey = <T>(column: TableProps.ColumnDefinition<T>, index: number) => {\n  return column.id || index;\n};\n\nexport const toContainerVariant = (variant: TableProps.Variant | undefined): InternalContainerProps['variant'] => {\n  const isDefaultVariant = !variant || variant === 'container';\n  return isDefaultVariant ? 'default' : variant === 'borderless' ? 'embedded' : variant;\n};\n\nexport function checkSortingState<T>(\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<T>>,\n  sortingComparator: TableProps.SortingColumn<T>['sortingComparator']\n) {\n  const matchedColumn = columnDefinitions.filter(column => column.sortingComparator === sortingComparator)[0];\n  if (!matchedColumn) {\n    warnOnce(\n      'Table',\n      'Currently active sorting comparator was not found in any columns. Make sure to provide the same comparator function instance on each render.'\n    );\n  }\n}\n\nexport function getVisibleColumnDefinitions<T>({\n  columnDisplay,\n  visibleColumns,\n  columnDefinitions,\n}: {\n  columnDisplay?: ReadonlyArray<TableProps.ColumnDisplayProperties>;\n  visibleColumns?: ReadonlyArray<string>;\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<T>>;\n}) {\n  // columnsDisplay has a precedence over visibleColumns.\n  if (columnDisplay) {\n    return getVisibleColumnDefinitionsFromColumnDisplay({ columnDisplay, columnDefinitions });\n  } else if (visibleColumns) {\n    return getVisibleColumnDefinitionsFromVisibleColumns({ visibleColumns, columnDefinitions });\n  } else {\n    return columnDefinitions;\n  }\n}\n\nfunction getVisibleColumnDefinitionsFromColumnDisplay<T>({\n  columnDisplay,\n  columnDefinitions,\n}: {\n  columnDisplay: ReadonlyArray<TableProps.ColumnDisplayProperties>;\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<T>>;\n}) {\n  const columnDefinitionsById: Record<string, TableProps.ColumnDefinition<T>> = columnDefinitions.reduce(\n    (accumulator, item) => (item.id === undefined ? accumulator : { ...accumulator, [item.id]: item }),\n    {}\n  );\n  return columnDisplay\n    .filter(item => item.visible)\n    .map(item => columnDefinitionsById[item.id])\n    .filter(Boolean);\n}\n\nfunction getVisibleColumnDefinitionsFromVisibleColumns<T>({\n  visibleColumns,\n  columnDefinitions,\n}: {\n  visibleColumns: ReadonlyArray<string>;\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<T>>;\n}) {\n  const ids = new Set(visibleColumns);\n  return columnDefinitions.filter(({ id }) => id !== undefined && ids.has(id));\n}\n\nexport function getStickyClassNames(styles: Record<string, string>, props: StickyColumnsCellState | null) {\n  return {\n    [styles['sticky-cell']]: !!props,\n    [styles['sticky-cell-pad-inline-start']]: !!props?.padInlineStart,\n    [styles['sticky-cell-last-inline-start']]: !!props?.lastInsetInlineStart,\n    [styles['sticky-cell-last-inline-end']]: !!props?.lastInsetInlineEnd,\n  };\n}\n","\n    import './styles.scoped.css';\n    export default {\n  \"expandable-toggle-wrapper\": \"awsui_expandable-toggle-wrapper_c6tup_1j1xu_97\",\n  \"body-cell\": \"awsui_body-cell_c6tup_1j1xu_104\",\n  \"body-cell-content\": \"awsui_body-cell-content_c6tup_1j1xu_112\",\n  \"expandable-level-0\": \"awsui_expandable-level-0_c6tup_1j1xu_118\",\n  \"expandable-level-1\": \"awsui_expandable-level-1_c6tup_1j1xu_124\",\n  \"expandable-level-2\": \"awsui_expandable-level-2_c6tup_1j1xu_130\",\n  \"expandable-level-3\": \"awsui_expandable-level-3_c6tup_1j1xu_136\",\n  \"expandable-level-4\": \"awsui_expandable-level-4_c6tup_1j1xu_142\",\n  \"expandable-level-5\": \"awsui_expandable-level-5_c6tup_1j1xu_148\",\n  \"expandable-level-6\": \"awsui_expandable-level-6_c6tup_1j1xu_154\",\n  \"expandable-level-7\": \"awsui_expandable-level-7_c6tup_1j1xu_160\",\n  \"expandable-level-8\": \"awsui_expandable-level-8_c6tup_1j1xu_166\",\n  \"expandable-level-9\": \"awsui_expandable-level-9_c6tup_1j1xu_172\",\n  \"expandable-level-next\": \"awsui_expandable-level-next_c6tup_1j1xu_178\",\n  \"body-cell-wrap\": \"awsui_body-cell-wrap_c6tup_1j1xu_198\",\n  \"is-visual-refresh\": \"awsui_is-visual-refresh_c6tup_1j1xu_212\",\n  \"has-striped-rows\": \"awsui_has-striped-rows_c6tup_1j1xu_224\",\n  \"body-cell-edit-active\": \"awsui_body-cell-edit-active_c6tup_1j1xu_296\",\n  \"body-cell-interactive\": \"awsui_body-cell-interactive_c6tup_1j1xu_296\",\n  \"body-cell-editable\": \"awsui_body-cell-editable_c6tup_1j1xu_296\",\n  \"has-striped-rows-sticky-cell-pad-inline-start\": \"awsui_has-striped-rows-sticky-cell-pad-inline-start_c6tup_1j1xu_440\",\n  \"has-selection\": \"awsui_has-selection_c6tup_1j1xu_512\",\n  \"body-cell-align-top\": \"awsui_body-cell-align-top_c6tup_1j1xu_591\",\n  \"body-cell-first-row\": \"awsui_body-cell-first-row_c6tup_1j1xu_594\",\n  \"body-cell-last-row\": \"awsui_body-cell-last-row_c6tup_1j1xu_597\",\n  \"body-cell-selected\": \"awsui_body-cell-selected_c6tup_1j1xu_597\",\n  \"has-footer\": \"awsui_has-footer_c6tup_1j1xu_597\",\n  \"body-cell-shaded\": \"awsui_body-cell-shaded_c6tup_1j1xu_607\",\n  \"sticky-cell\": \"awsui_sticky-cell_c6tup_1j1xu_635\",\n  \"sticky-cell-pad-left\": \"awsui_sticky-cell-pad-left_c6tup_1j1xu_643\",\n  \"sticky-cell-last-inline-end\": \"awsui_sticky-cell-last-inline-end_c6tup_1j1xu_729\",\n  \"sticky-cell-last-inline-start\": \"awsui_sticky-cell-last-inline-start_c6tup_1j1xu_738\",\n  \"body-cell-next-selected\": \"awsui_body-cell-next-selected_c6tup_1j1xu_771\",\n  \"body-cell-prev-selected\": \"awsui_body-cell-prev-selected_c6tup_1j1xu_777\",\n  \"body-cell-editor-wrapper\": \"awsui_body-cell-editor-wrapper_c6tup_1j1xu_803\",\n  \"body-cell-success\": \"awsui_body-cell-success_c6tup_1j1xu_810\",\n  \"body-cell-editor\": \"awsui_body-cell-editor_c6tup_1j1xu_803\",\n  \"body-cell-editor-disabled\": \"awsui_body-cell-editor-disabled_c6tup_1j1xu_837\",\n  \"body-cell-editor-form\": \"awsui_body-cell-editor-form_c6tup_1j1xu_846\",\n  \"body-cell-editor-row\": \"awsui_body-cell-editor-row_c6tup_1j1xu_856\",\n  \"body-cell-editor-controls\": \"awsui_body-cell-editor-controls_c6tup_1j1xu_866\",\n  \"body-cell-editor-row-editor\": \"awsui_body-cell-editor-row-editor_c6tup_1j1xu_869\",\n  \"body-cell-expandable\": \"awsui_body-cell-expandable_c6tup_1j1xu_872\",\n  \"resizable-columns\": \"awsui_resizable-columns_c6tup_1j1xu_893\",\n  \"expandable-cell-content\": \"awsui_expandable-cell-content_c6tup_1j1xu_896\",\n  \"body-cell-has-success\": \"awsui_body-cell-has-success_c6tup_1j1xu_965\",\n  \"body-cell-edit-disabled-popover\": \"awsui_body-cell-edit-disabled-popover_c6tup_1j1xu_965\"\n};\n  ","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { copyAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { useSingleTabStopNavigation } from '../../internal/context/single-tab-stop-navigation-context';\nimport { useMergeRefs } from '../../internal/hooks/use-merge-refs';\nimport { ExpandToggleButton } from '../expandable-rows/expand-toggle-button';\nimport { TableProps } from '../interfaces.js';\nimport { StickyColumnsModel, useStickyCellStyles } from '../sticky-columns';\nimport { getTableCellRoleProps, TableRole } from '../table-role';\nimport { getStickyClassNames } from '../utils';\n\nimport styles from './styles.css.js';\n\nexport interface TableTdElementProps {\n  className?: string;\n  style?: React.CSSProperties;\n  wrapLines: boolean | undefined;\n  isRowHeader?: boolean;\n  isFirstRow: boolean;\n  isLastRow: boolean;\n  isSelected: boolean;\n  isNextSelected: boolean;\n  isPrevSelected: boolean;\n  nativeAttributes?: Omit<\n    React.TdHTMLAttributes<HTMLTableCellElement> | React.ThHTMLAttributes<HTMLTableCellElement>,\n    'style' | 'className' | 'onClick'\n  >;\n  onClick?: () => void;\n  onMouseEnter?: () => void;\n  onMouseLeave?: () => void;\n  children?: React.ReactNode;\n  isEvenRow?: boolean;\n  stripedRows?: boolean;\n  hasSelection?: boolean;\n  hasFooter?: boolean;\n  columnId: PropertyKey;\n  colIndex: number;\n  stickyState: StickyColumnsModel;\n  isVisualRefresh?: boolean;\n  tableRole: TableRole;\n  level?: number;\n  isExpandable?: boolean;\n  isExpanded?: boolean;\n  onExpandableItemToggle?: () => void;\n  expandButtonLabel?: string;\n  collapseButtonLabel?: string;\n  verticalAlign?: TableProps.VerticalAlign;\n}\n\nexport const TableTdElement = React.forwardRef<HTMLTableCellElement, TableTdElementProps>(\n  (\n    {\n      className,\n      style,\n      children,\n      wrapLines,\n      isRowHeader,\n      isFirstRow,\n      isLastRow,\n      isSelected,\n      isNextSelected,\n      isPrevSelected,\n      nativeAttributes,\n      onClick,\n      onMouseEnter,\n      onMouseLeave,\n      isEvenRow,\n      stripedRows,\n      isVisualRefresh,\n      hasSelection,\n      hasFooter,\n      columnId,\n      colIndex,\n      stickyState,\n      tableRole,\n      level,\n      isExpandable,\n      isExpanded,\n      onExpandableItemToggle,\n      expandButtonLabel,\n      collapseButtonLabel,\n      verticalAlign,\n      ...rest\n    },\n    ref\n  ) => {\n    const Element = isRowHeader ? 'th' : 'td';\n\n    nativeAttributes = { ...nativeAttributes, ...getTableCellRoleProps({ tableRole, isRowHeader, colIndex }) };\n\n    const stickyStyles = useStickyCellStyles({\n      stickyColumns: stickyState,\n      columnId,\n      getClassName: props => getStickyClassNames(styles, props),\n    });\n\n    const cellRefObject = useRef<HTMLTableCellElement>(null);\n    const mergedRef = useMergeRefs(stickyStyles.ref, ref, cellRefObject);\n    const { tabIndex: cellTabIndex } = useSingleTabStopNavigation(cellRefObject);\n\n    return (\n      <Element\n        style={{ ...style, ...stickyStyles.style }}\n        className={clsx(\n          className,\n          styles['body-cell'],\n          wrapLines && styles['body-cell-wrap'],\n          isFirstRow && styles['body-cell-first-row'],\n          isLastRow && styles['body-cell-last-row'],\n          isSelected && styles['body-cell-selected'],\n          isNextSelected && styles['body-cell-next-selected'],\n          isPrevSelected && styles['body-cell-prev-selected'],\n          !isEvenRow && stripedRows && styles['body-cell-shaded'],\n          stripedRows && styles['has-striped-rows'],\n          isVisualRefresh && styles['is-visual-refresh'],\n          hasSelection && styles['has-selection'],\n          hasFooter && styles['has-footer'],\n          level !== undefined && styles['body-cell-expandable'],\n          level !== undefined && styles[`expandable-level-${getLevelClassSuffix(level)}`],\n          verticalAlign === 'top' && styles['body-cell-align-top'],\n          stickyStyles.className\n        )}\n        onClick={onClick}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        ref={mergedRef}\n        {...nativeAttributes}\n        tabIndex={cellTabIndex === -1 ? undefined : cellTabIndex}\n        {...copyAnalyticsMetadataAttribute(rest)}\n      >\n        {level !== undefined && isExpandable && (\n          <div className={styles['expandable-toggle-wrapper']}>\n            <ExpandToggleButton\n              isExpanded={isExpanded}\n              onExpandableItemToggle={onExpandableItemToggle}\n              expandButtonLabel={expandButtonLabel}\n              collapseButtonLabel={collapseButtonLabel}\n            />\n          </div>\n        )}\n\n        <div className={styles['body-cell-content']}>{children}</div>\n      </Element>\n    );\n  }\n);\n\nfunction getLevelClassSuffix(level: number) {\n  return 0 <= level && level <= 9 ? level : 'next';\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport Icon from '../../icon/internal';\nimport Portal from '../../internal/components/portal';\nimport { useSingleTabStopNavigation } from '../../internal/context/single-tab-stop-navigation-context';\nimport useHiddenDescription from '../../internal/hooks/use-hidden-description';\nimport { usePortalModeClasses } from '../../internal/hooks/use-portal-mode-classes';\nimport Arrow from '../../popover/arrow';\nimport PopoverBody from '../../popover/body';\nimport PopoverContainer from '../../popover/container';\nimport { useClickAway } from './click-away';\nimport { TableBodyCellProps } from './index';\nimport { TableTdElement, TableTdElementProps } from './td-element';\n\nimport styles from './styles.css.js';\n\ninterface DisabledInlineEditorProps<ItemType> extends TableBodyCellProps<ItemType> {\n  editDisabledReason: string;\n}\n\nexport function DisabledInlineEditor<ItemType>({\n  className,\n  item,\n  column,\n  ariaLabels,\n  isEditing,\n  onEditStart,\n  onEditEnd,\n  editDisabledReason,\n  isVisualRefresh,\n  interactiveCell = true,\n  resizableColumns = false,\n  ...rest\n}: DisabledInlineEditorProps<ItemType>) {\n  const clickAwayRef = useClickAway(() => {\n    if (isEditing) {\n      onEditEnd(true);\n    }\n  });\n\n  const [hasHover, setHasHover] = useState(false);\n  const [hasFocus, setHasFocus] = useState(false);\n  // When a cell is both expandable and editable the icon is always shown.\n  const showIcon = hasHover || hasFocus || isEditing || !interactiveCell;\n\n  const iconRef = useRef(null);\n  const buttonRef = useRef<HTMLButtonElement>(null);\n  const portalRef = useRef<HTMLSpanElement>(null);\n\n  function handleEscape(event: React.KeyboardEvent): void {\n    if (event.key === 'Escape') {\n      onEditEnd(true);\n    }\n  }\n\n  const onClick = () => {\n    onEditStart();\n    buttonRef.current?.focus();\n  };\n\n  const { targetProps, descriptionEl } = useHiddenDescription(editDisabledReason);\n  const portalClasses = usePortalModeClasses(portalRef);\n\n  const { tabIndex } = useSingleTabStopNavigation(buttonRef);\n\n  return (\n    <TableTdElement\n      {...rest}\n      nativeAttributes={\n        { 'data-inline-editing-active': isEditing.toString() } as TableTdElementProps['nativeAttributes']\n      }\n      className={clsx(\n        className,\n        styles['body-cell-editable'],\n        interactiveCell && styles['body-cell-interactive'],\n        resizableColumns && styles['resizable-columns'],\n        isEditing && styles['body-cell-edit-disabled-popover'],\n        isVisualRefresh && styles['is-visual-refresh']\n      )}\n      onClick={interactiveCell && !isEditing ? onClick : undefined}\n      onMouseEnter={() => setHasHover(true)}\n      onMouseLeave={() => setHasHover(false)}\n      ref={clickAwayRef}\n    >\n      {column.cell(item)}\n\n      <div className={styles['body-cell-editor-wrapper']}>\n        <button\n          ref={buttonRef}\n          tabIndex={tabIndex}\n          className={clsx(styles['body-cell-editor'], styles['body-cell-editor-disabled'])}\n          aria-label={ariaLabels?.activateEditLabel?.(column, item)}\n          aria-haspopup=\"dialog\"\n          aria-disabled=\"true\"\n          onClick={!interactiveCell && !isEditing ? onClick : undefined}\n          onFocus={() => setHasFocus(true)}\n          onBlur={() => setHasFocus(false)}\n          onKeyDown={handleEscape}\n          {...targetProps}\n        >\n          {showIcon && <Icon name=\"lock-private\" variant=\"normal\" __internalRootRef={iconRef} />}\n          {descriptionEl}\n        </button>\n      </div>\n\n      {isEditing && (\n        <span ref={portalRef}>\n          <Portal>\n            <span className={portalClasses}>\n              <PopoverContainer\n                size=\"medium\"\n                fixedWidth={false}\n                position=\"top\"\n                trackRef={iconRef}\n                arrow={position => <Arrow position={position} />}\n                renderWithPortal={true}\n                zIndex={2000}\n              >\n                <PopoverBody\n                  dismissButton={false}\n                  dismissAriaLabel={undefined}\n                  header={null}\n                  onDismiss={() => {}}\n                  overflowVisible=\"both\"\n                >\n                  <span aria-live=\"polite\">{editDisabledReason}</span>\n                </PopoverBody>\n              </PopoverContainer>\n            </span>\n          </Portal>\n        </span>\n      )}\n    </TableTdElement>\n  );\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport Button from '../../button/internal';\nimport FormField from '../../form-field/internal';\nimport { useInternalI18n } from '../../i18n/context';\nimport FocusLock, { FocusLockRef } from '../../internal/components/focus-lock';\nimport LiveRegion from '../../internal/components/live-region';\nimport { Optional } from '../../internal/types';\nimport SpaceBetween from '../../space-between/internal';\nimport { TableProps } from '../interfaces';\nimport { useClickAway } from './click-away';\n\nimport styles from './styles.css.js';\n\n// A function that does nothing\nconst noop = () => undefined;\n\ninterface OnEditEndOptions {\n  cancelled: boolean;\n  refocusCell: boolean;\n}\n\ninterface InlineEditorProps<ItemType> {\n  ariaLabels: TableProps['ariaLabels'];\n  column: TableProps.ColumnDefinition<ItemType>;\n  item: ItemType;\n  onEditEnd: (options: OnEditEndOptions) => void;\n  submitEdit: TableProps.SubmitEditFunction<ItemType>;\n  __onRender?: () => void;\n}\n\nexport function InlineEditor<ItemType>({\n  ariaLabels,\n  item,\n  column,\n  onEditEnd,\n  submitEdit,\n  __onRender,\n}: InlineEditorProps<ItemType>) {\n  const [currentEditLoading, setCurrentEditLoading] = useState(false);\n  const [currentEditValue, setCurrentEditValue] = useState<Optional<any>>();\n  const i18n = useInternalI18n('table');\n\n  const focusLockRef = useRef<FocusLockRef>(null);\n\n  const cellContext = {\n    currentValue: currentEditValue,\n    setValue: setCurrentEditValue,\n  };\n\n  function finishEdit({ cancelled = false, refocusCell = true }: Partial<OnEditEndOptions> = {}) {\n    if (!cancelled) {\n      setCurrentEditValue(undefined);\n    }\n    onEditEnd({ cancelled, refocusCell: refocusCell });\n  }\n\n  async function onSubmitClick(evt: React.FormEvent) {\n    evt.preventDefault();\n    if (currentEditValue === undefined) {\n      finishEdit();\n      return;\n    }\n\n    setCurrentEditLoading(true);\n    try {\n      await submitEdit(item, column, currentEditValue);\n      setCurrentEditLoading(false);\n      finishEdit();\n    } catch (e) {\n      setCurrentEditLoading(false);\n      focusLockRef.current?.focusFirst();\n    }\n  }\n\n  function onCancel({ reFocusEditedCell = true } = {}) {\n    if (currentEditLoading) {\n      return;\n    }\n    finishEdit({ cancelled: true, refocusCell: reFocusEditedCell });\n  }\n\n  function handleEscape(event: React.KeyboardEvent): void {\n    if (event.key === 'Escape') {\n      onCancel();\n    }\n  }\n\n  const clickAwayRef = useClickAway(() => onCancel({ reFocusEditedCell: false }));\n\n  useEffect(() => {\n    if (__onRender) {\n      const timer = setTimeout(__onRender, 1);\n      return () => clearTimeout(timer);\n    }\n  }, [__onRender]);\n\n  // asserting non-undefined editConfig here because this component is unreachable otherwise\n  const {\n    ariaLabel = undefined,\n    validation = noop,\n    errorIconAriaLabel,\n    constraintText,\n    editingCell,\n  } = column.editConfig!;\n\n  return (\n    <FocusLock restoreFocus={true} ref={focusLockRef}>\n      <div\n        role=\"dialog\"\n        ref={clickAwayRef}\n        aria-label={ariaLabels?.activateEditLabel?.(column, item)}\n        onKeyDown={handleEscape}\n      >\n        <form onSubmit={onSubmitClick} className={styles['body-cell-editor-form']}>\n          <FormField\n            stretch={true}\n            label={ariaLabel}\n            constraintText={constraintText}\n            __hideLabel={true}\n            __disableGutters={true}\n            i18nStrings={{ errorIconAriaLabel }}\n            errorText={validation(item, currentEditValue)}\n          >\n            <div className={styles['body-cell-editor-row']}>\n              <div className={styles['body-cell-editor-row-editor']}>{editingCell(item, cellContext)}</div>\n              <span className={styles['body-cell-editor-controls']}>\n                <SpaceBetween direction=\"horizontal\" size=\"xxs\">\n                  {!currentEditLoading ? (\n                    <Button\n                      ariaLabel={ariaLabels?.cancelEditLabel?.(column)}\n                      formAction=\"none\"\n                      iconName=\"close\"\n                      variant=\"inline-icon\"\n                      onClick={() => onCancel()}\n                    />\n                  ) : null}\n                  <Button\n                    ariaLabel={ariaLabels?.submitEditLabel?.(column)}\n                    formAction=\"submit\"\n                    iconName=\"check\"\n                    variant=\"inline-icon\"\n                    loading={currentEditLoading}\n                  />\n                </SpaceBetween>\n                <LiveRegion>\n                  {currentEditLoading\n                    ? i18n('ariaLabels.submittingEditText', ariaLabels?.submittingEditText?.(column))\n                    : ''}\n                </LiveRegion>\n              </span>\n            </div>\n          </FormField>\n        </form>\n      </div>\n    </FocusLock>\n  );\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { useInternalI18n } from '../../i18n/context';\nimport Icon from '../../icon/internal';\nimport LiveRegion from '../../internal/components/live-region/index.js';\nimport { useSingleTabStopNavigation } from '../../internal/context/single-tab-stop-navigation-context.js';\nimport { usePrevious } from '../../internal/hooks/use-previous';\nimport { TableProps } from '../interfaces';\nimport { DisabledInlineEditor } from './disabled-inline-editor';\nimport { InlineEditor } from './inline-editor';\nimport { TableTdElement, TableTdElementProps } from './td-element';\n\nimport styles from './styles.css.js';\n\nconst submitHandlerFallback = () => {\n  throw new Error('The function `handleSubmit` is required for editable columns');\n};\n\nexport interface TableBodyCellProps<ItemType> extends TableTdElementProps {\n  column: TableProps.ColumnDefinition<ItemType>;\n  item: ItemType;\n  isEditing: boolean;\n  resizableColumns?: boolean;\n  successfulEdit?: boolean;\n  onEditStart: () => void;\n  onEditEnd: (cancelled: boolean) => void;\n  submitEdit?: TableProps.SubmitEditFunction<ItemType>;\n  ariaLabels: TableProps['ariaLabels'];\n  interactiveCell?: boolean;\n}\n\nfunction TableCellEditable<ItemType>({\n  className,\n  item,\n  column,\n  isEditing,\n  onEditStart,\n  onEditEnd,\n  submitEdit,\n  ariaLabels,\n  isVisualRefresh,\n  resizableColumns = false,\n  successfulEdit = false,\n  interactiveCell = true,\n  ...rest\n}: TableBodyCellProps<ItemType>) {\n  const i18n = useInternalI18n('table');\n  const editActivateRef = useRef<HTMLButtonElement>(null);\n  const tdNativeAttributes = {\n    'data-inline-editing-active': isEditing.toString(),\n  };\n  const isFocusMoveNeededRef = useRef(false);\n\n  useEffect(() => {\n    if (!isEditing && editActivateRef.current && isFocusMoveNeededRef.current) {\n      isFocusMoveNeededRef.current = false;\n      editActivateRef.current.focus();\n    }\n  }, [isEditing]);\n  // To improve the initial page render performance we only show the edit icon when necessary.\n  const [hasHover, setHasHover] = useState(false);\n  const [hasFocus, setHasFocus] = useState(false);\n  // When a cell is both expandable and editable the icon is always shown.\n  const showIcon = hasHover || hasFocus || !interactiveCell;\n\n  const prevSuccessfulEdit = usePrevious(successfulEdit);\n  const prevHasFocus = usePrevious(hasFocus);\n  const [showSuccessIcon, setShowSuccessIcon] = useState(false);\n\n  useEffect(() => {\n    // Hide the success icon after a successful edit, when cell loses focus.\n    if (successfulEdit && prevSuccessfulEdit && !hasFocus && prevHasFocus) {\n      setShowSuccessIcon(false);\n    }\n    // Show success icon right after a successful edit, when `successfulEdit` switches to true.\n    if (successfulEdit && !prevSuccessfulEdit) {\n      setShowSuccessIcon(true);\n    }\n  }, [hasFocus, successfulEdit, prevHasFocus, prevSuccessfulEdit]);\n\n  const { tabIndex: editActivateTabIndex } = useSingleTabStopNavigation(editActivateRef);\n\n  return (\n    <TableTdElement\n      {...rest}\n      nativeAttributes={tdNativeAttributes as TableTdElementProps['nativeAttributes']}\n      className={clsx(\n        className,\n        styles['body-cell-editable'],\n        interactiveCell && styles['body-cell-interactive'],\n        resizableColumns && styles['resizable-columns'],\n        isEditing && styles['body-cell-edit-active'],\n        showSuccessIcon && showIcon && styles['body-cell-has-success'],\n        isVisualRefresh && styles['is-visual-refresh']\n      )}\n      onClick={interactiveCell && !isEditing ? onEditStart : undefined}\n      onMouseEnter={() => setHasHover(true)}\n      onMouseLeave={() => setHasHover(false)}\n    >\n      {isEditing ? (\n        <InlineEditor\n          ariaLabels={ariaLabels}\n          column={column}\n          item={item}\n          onEditEnd={options => {\n            setShowSuccessIcon(false);\n            isFocusMoveNeededRef.current = options.refocusCell;\n            onEditEnd(options.cancelled);\n          }}\n          submitEdit={submitEdit ?? submitHandlerFallback}\n        />\n      ) : (\n        <>\n          {column.cell(item)}\n\n          {showSuccessIcon && showIcon && (\n            <>\n              <span\n                className={styles['body-cell-success']}\n                aria-label={ariaLabels?.successfulEditLabel?.(column)}\n                role=\"img\"\n                onMouseDown={e => {\n                  // Prevent the editor's Button blur event to be fired when clicking the success icon.\n                  // This prevents unfocusing the button and triggers the `TableTdElement` onClick event which initiates the edit mode.\n                  e.preventDefault();\n                }}\n              >\n                <Icon name=\"status-positive\" variant=\"success\" />\n              </span>\n              <LiveRegion>\n                {i18n('ariaLabels.successfulEditLabel', ariaLabels?.successfulEditLabel?.(column))}\n              </LiveRegion>\n            </>\n          )}\n\n          <div className={styles['body-cell-editor-wrapper']}>\n            <button\n              className={styles['body-cell-editor']}\n              aria-label={ariaLabels?.activateEditLabel?.(column, item)}\n              ref={editActivateRef}\n              onClick={!interactiveCell && !isEditing ? onEditStart : undefined}\n              onFocus={() => setHasFocus(true)}\n              onBlur={() => setHasFocus(false)}\n              tabIndex={editActivateTabIndex}\n            >\n              {showIcon && <Icon name=\"edit\" />}\n            </button>\n          </div>\n        </>\n      )}\n    </TableTdElement>\n  );\n}\n\nexport function TableBodyCell<ItemType>({\n  isEditable,\n  ...rest\n}: TableBodyCellProps<ItemType> & { isEditable: boolean }) {\n  const isExpandableColumnCell = rest.level !== undefined;\n  const editDisabledReason = rest.column.editConfig?.disabledReason?.(rest.item);\n\n  // Inline editing is deactivated for expandable column because editable cells are interactive\n  // and cannot include interactive content such as expand toggles.\n  if (editDisabledReason && !isExpandableColumnCell) {\n    return <DisabledInlineEditor editDisabledReason={editDisabledReason} {...rest} />;\n  }\n  if ((isEditable || rest.isEditing) && !isExpandableColumnCell) {\n    return <TableCellEditable {...rest} />;\n  }\n\n  const { column, item } = rest;\n  return <TableTdElement {...rest}>{column.cell(item)}</TableTdElement>;\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\n\nimport { TableProps } from './interfaces';\n\nexport function checkColumnWidths(columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<any>>) {\n  for (const column of columnDefinitions) {\n    checkProperty(column, 'minWidth');\n    checkProperty(column, 'width');\n  }\n}\n\nexport function setElementWidths(element: HTMLElement, styles: React.CSSProperties) {\n  function setProperty(property: 'width' | 'minWidth' | 'maxWidth') {\n    const value = styles[property];\n    let widthCssValue = '';\n    if (typeof value === 'number') {\n      widthCssValue = value + 'px';\n    }\n    if (typeof value === 'string') {\n      widthCssValue = value;\n    }\n    if (element.style[property] !== widthCssValue) {\n      element.style[property] = widthCssValue;\n    }\n  }\n  setProperty('width');\n  setProperty('minWidth');\n  setProperty('maxWidth');\n}\n\nfunction checkProperty(column: TableProps.ColumnDefinition<any>, name: 'width' | 'minWidth') {\n  const value = column[name];\n  if (typeof value !== 'number' && typeof value !== 'undefined') {\n    warnOnce(\n      'Table',\n      `resizableColumns feature requires ${name} property to be a number, got ${value}. The component may work incorrectly.`\n    );\n  }\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { TableProps } from '../interfaces';\nimport { getTrackableValue } from '../utils';\n\nexport const SELECTION_ITEM = 'selection-item';\nexport const SELECTION_ROOT = 'selection-root';\n\n// A set, that compares items by their \"trackables\" (the results of applying `trackBy` to them)\nexport class ItemSet<T> {\n  constructor(trackBy: TableProps.TrackBy<T> | undefined, items: ReadonlyArray<T>) {\n    this.trackBy = trackBy;\n    items.forEach(this.put);\n  }\n  private trackBy: TableProps.TrackBy<T> | undefined;\n  private map: Map<unknown, T> = new Map();\n  put = (item: T) => this.map.set.call(this.map, getTrackableValue(this.trackBy, item), item);\n  has = (item: T) => this.map.has.call(this.map, getTrackableValue(this.trackBy, item));\n  forEach = this.map.forEach.bind(this.map);\n}\n\nexport const focusMarkers = {\n  item: { ['data-' + SELECTION_ITEM]: 'item' },\n  all: { ['data-' + SELECTION_ITEM]: 'all' },\n  root: { ['data-' + SELECTION_ROOT]: 'true' },\n};\n","\n    import './styles.scoped.css';\n    export default {\n  \"root\": \"awsui_root_wih1l_rg19l_101\",\n  \"tools\": \"awsui_tools_wih1l_rg19l_112\",\n  \"tools-filtering\": \"awsui_tools-filtering_wih1l_rg19l_120\",\n  \"tools-align-right\": \"awsui_tools-align-right_wih1l_rg19l_134\",\n  \"tools-pagination\": \"awsui_tools-pagination_wih1l_rg19l_138\",\n  \"tools-preferences\": \"awsui_tools-preferences_wih1l_rg19l_138\",\n  \"tools-small\": \"awsui_tools-small_wih1l_rg19l_144\",\n  \"table\": \"awsui_table_wih1l_rg19l_150\",\n  \"table-layout-fixed\": \"awsui_table-layout-fixed_wih1l_rg19l_156\",\n  \"wrapper\": \"awsui_wrapper_wih1l_rg19l_160\",\n  \"variant-stacked\": \"awsui_variant-stacked_wih1l_rg19l_167\",\n  \"wrapper-content-measure\": \"awsui_wrapper-content-measure_wih1l_rg19l_167\",\n  \"variant-container\": \"awsui_variant-container_wih1l_rg19l_167\",\n  \"has-footer\": \"awsui_has-footer_wih1l_rg19l_170\",\n  \"has-header\": \"awsui_has-header_wih1l_rg19l_173\",\n  \"cell-merged\": \"awsui_cell-merged_wih1l_rg19l_190\",\n  \"cell-merged-content\": \"awsui_cell-merged-content_wih1l_rg19l_202\",\n  \"empty\": \"awsui_empty_wih1l_rg19l_218\",\n  \"loading\": \"awsui_loading_wih1l_rg19l_222\",\n  \"selection-control\": \"awsui_selection-control_wih1l_rg19l_231\",\n  \"selection-control-header\": \"awsui_selection-control-header_wih1l_rg19l_238\",\n  \"header-secondary\": \"awsui_header-secondary_wih1l_rg19l_244\",\n  \"variant-full-page\": \"awsui_variant-full-page_wih1l_rg19l_256\",\n  \"table-has-header\": \"awsui_table-has-header_wih1l_rg19l_265\",\n  \"header-controls\": \"awsui_header-controls_wih1l_rg19l_269\",\n  \"variant-embedded\": \"awsui_variant-embedded_wih1l_rg19l_278\",\n  \"variant-borderless\": \"awsui_variant-borderless_wih1l_rg19l_278\",\n  \"footer-wrapper\": \"awsui_footer-wrapper_wih1l_rg19l_283\",\n  \"footer\": \"awsui_footer_wih1l_rg19l_283\",\n  \"footer-with-pagination\": \"awsui_footer-with-pagination_wih1l_rg19l_291\",\n  \"footer-pagination\": \"awsui_footer-pagination_wih1l_rg19l_299\",\n  \"thead-active\": \"awsui_thead-active_wih1l_rg19l_303\",\n  \"row\": \"awsui_row_wih1l_rg19l_304\",\n  \"row-selected\": \"awsui_row-selected_wih1l_rg19l_305\"\n};\n  ","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { useResizeObserver } from '@cloudscape-design/component-toolkit/internal';\n\nimport LiveRegion from '../internal/components/live-region';\nimport InternalStatusIndicator from '../status-indicator/internal';\n\nimport styles from './styles.css.js';\n\ninterface NoDataCellProps {\n  totalColumnsCount: number;\n  hasFooter: boolean;\n  loading?: boolean;\n  loadingText?: string;\n  empty?: React.ReactNode;\n  tableRef: React.RefObject<HTMLTableElement>;\n  containerRef: React.RefObject<HTMLElement>;\n}\n\nexport function NoDataCell({\n  totalColumnsCount,\n  hasFooter,\n  loading,\n  loadingText,\n  empty,\n  tableRef,\n  containerRef,\n}: NoDataCellProps) {\n  const cellContentRef = useRef<HTMLDivElement>(null);\n\n  useResizeObserver(containerRef, ({ contentBoxWidth: containerInlineSize }) => {\n    if (tableRef.current && cellContentRef.current) {\n      const tablePaddingInlineStart = parseFloat(getComputedStyle(tableRef.current).paddingInlineStart) || 0;\n      const tablePaddingInlineEnd = parseFloat(getComputedStyle(tableRef.current).paddingInlineEnd) || 0;\n      const inlineSize = containerInlineSize + tablePaddingInlineStart + tablePaddingInlineEnd;\n      cellContentRef.current.style.inlineSize = Math.floor(inlineSize) + 'px';\n    }\n  });\n\n  return (\n    <td colSpan={totalColumnsCount} className={clsx(styles['cell-merged'], hasFooter && styles['has-footer'])}>\n      <div ref={cellContentRef} className={styles['cell-merged-content']} data-awsui-table-suppress-navigation={true}>\n        {loading ? (\n          <InternalStatusIndicator type=\"loading\" className={styles.loading} wrapText={true}>\n            <LiveRegion visible={true}>{loadingText}</LiveRegion>\n          </InternalStatusIndicator>\n        ) : (\n          <div className={styles.empty}>{empty}</div>\n        )}\n      </div>\n    </td>\n  );\n}\n","\n    import './styles.scoped.css';\n    export default {\n  \"items-loader\": \"awsui_items-loader_115pt_16l07_5\"\n};\n  ","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\n\nimport LiveRegion from '../../internal/components/live-region';\nimport { TableProps } from '../interfaces';\nimport { applyTrackBy } from '../utils';\n\nimport styles from './styles.css.js';\n\ninterface ItemsLoaderProps<T> {\n  item: null | T;\n  loadingStatus: TableProps.LoadingStatus;\n  renderLoaderPending?: (detail: TableProps.RenderLoaderDetail<T>) => React.ReactNode;\n  renderLoaderLoading?: (detail: TableProps.RenderLoaderDetail<T>) => React.ReactNode;\n  renderLoaderError?: (detail: TableProps.RenderLoaderDetail<T>) => React.ReactNode;\n  trackBy?: TableProps.TrackBy<T>;\n}\n\nexport function ItemsLoader<T>({\n  item,\n  loadingStatus,\n  renderLoaderPending,\n  renderLoaderLoading,\n  renderLoaderError,\n  trackBy,\n}: ItemsLoaderProps<T>) {\n  let content: React.ReactNode = null;\n  if (loadingStatus === 'pending' && renderLoaderPending) {\n    content = renderLoaderPending({ item });\n  } else if (loadingStatus === 'loading' && renderLoaderLoading) {\n    content = <LiveRegion visible={true}>{renderLoaderLoading({ item })}</LiveRegion>;\n  } else if (loadingStatus === 'error' && renderLoaderError) {\n    content = <LiveRegion visible={true}>{renderLoaderError({ item })}</LiveRegion>;\n  } else {\n    warnOnce(\n      'Table',\n      'Must define `renderLoaderPending`, `renderLoaderLoading`, or `renderLoaderError` when using corresponding loading status.'\n    );\n  }\n\n  let parentTrackId = item && trackBy ? applyTrackBy(trackBy, item) : undefined;\n  parentTrackId = typeof parentTrackId === 'string' ? parentTrackId : undefined;\n  return (\n    <div data-root={item ? 'false' : 'true'} data-parentrow={parentTrackId} className={styles['items-loader']}>\n      {content}\n    </div>\n  );\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { createContext, useContext, useEffect, useRef, useState } from 'react';\n\nimport { useResizeObserver, useStableCallback } from '@cloudscape-design/component-toolkit/internal';\nimport { getLogicalBoundingClientRect } from '@cloudscape-design/component-toolkit/internal';\n\nimport { setElementWidths } from './column-widths-utils';\n\nexport const DEFAULT_COLUMN_WIDTH = 120;\n\nexport interface ColumnWidthDefinition {\n  id: PropertyKey;\n  minWidth?: string | number;\n  maxWidth?: string | number;\n  width?: string | number;\n}\n\nfunction readWidths(\n  getCell: (columnId: PropertyKey) => null | HTMLElement,\n  visibleColumns: readonly ColumnWidthDefinition[]\n) {\n  const result = new Map<PropertyKey, number>();\n  for (let index = 0; index < visibleColumns.length; index++) {\n    const column = visibleColumns[index];\n    let width = (column.width as number) || 0;\n    const minWidth = (column.minWidth as number) || width || DEFAULT_COLUMN_WIDTH;\n    if (\n      !width && // read width from the DOM if it is missing in the config\n      index !== visibleColumns.length - 1 // skip reading for the last column, because it expands to fully fit the container\n    ) {\n      const colEl = getCell(column.id);\n      width = colEl ? getLogicalBoundingClientRect(colEl).inlineSize : DEFAULT_COLUMN_WIDTH;\n    }\n    result.set(column.id, Math.max(width, minWidth));\n  }\n  return result;\n}\n\nfunction updateWidths(\n  visibleColumns: readonly ColumnWidthDefinition[],\n  oldWidths: Map<PropertyKey, number>,\n  newWidth: number,\n  columnId: PropertyKey\n) {\n  const column = visibleColumns.find(column => column.id === columnId);\n  const minWidth = typeof column?.minWidth === 'number' ? column.minWidth : DEFAULT_COLUMN_WIDTH;\n  newWidth = Math.max(newWidth, minWidth);\n  if (oldWidths.get(columnId) === newWidth) {\n    return oldWidths;\n  }\n  const newWidths = new Map(oldWidths);\n  newWidths.set(columnId, newWidth);\n  return newWidths;\n}\n\ninterface WidthsContext {\n  getColumnStyles(sticky: boolean, columnId: PropertyKey): React.CSSProperties;\n  columnWidths: Map<PropertyKey, number>;\n  updateColumn: (columnId: PropertyKey, newWidth: number) => void;\n  setCell: (sticky: boolean, columnId: PropertyKey, node: null | HTMLElement) => void;\n}\n\nconst WidthsContext = createContext<WidthsContext>({\n  getColumnStyles: () => ({}),\n  columnWidths: new Map(),\n  updateColumn: () => {},\n  setCell: () => {},\n});\n\ninterface WidthProviderProps {\n  visibleColumns: readonly ColumnWidthDefinition[];\n  resizableColumns: boolean | undefined;\n  containerRef: React.RefObject<HTMLElement>;\n  children: React.ReactNode;\n}\n\nexport function ColumnWidthsProvider({ visibleColumns, resizableColumns, containerRef, children }: WidthProviderProps) {\n  const visibleColumnsRef = useRef<PropertyKey[] | null>(null);\n  const containerWidthRef = useRef(0);\n  const [columnWidths, setColumnWidths] = useState<null | Map<PropertyKey, number>>(null);\n\n  const cellsRef = useRef(new Map<PropertyKey, HTMLElement>());\n  const stickyCellsRef = useRef(new Map<PropertyKey, HTMLElement>());\n  const getCell = (columnId: PropertyKey): null | HTMLElement => cellsRef.current.get(columnId) ?? null;\n  const setCell = (sticky: boolean, columnId: PropertyKey, node: null | HTMLElement) => {\n    const ref = sticky ? stickyCellsRef : cellsRef;\n    if (node) {\n      ref.current.set(columnId, node);\n    } else {\n      ref.current.delete(columnId);\n    }\n  };\n\n  const getColumnStyles = (sticky: boolean, columnId: PropertyKey): React.CSSProperties => {\n    const column = visibleColumns.find(column => column.id === columnId);\n    if (!column) {\n      return {};\n    }\n\n    if (sticky) {\n      return { width: cellsRef.current.get(column.id)?.offsetWidth || (columnWidths?.get(column.id) ?? column.width) };\n    }\n\n    if (resizableColumns && columnWidths) {\n      const isLastColumn = column.id === visibleColumns[visibleColumns.length - 1]?.id;\n      const totalWidth = visibleColumns.reduce(\n        (sum, { id }) => sum + (columnWidths.get(id) || DEFAULT_COLUMN_WIDTH),\n        0\n      );\n      if (isLastColumn && containerWidthRef.current > totalWidth) {\n        return { width: 'auto', minWidth: column?.minWidth };\n      } else {\n        return { width: columnWidths.get(column.id), minWidth: column?.minWidth };\n      }\n    }\n    return {\n      width: column.width,\n      minWidth: column.minWidth,\n      maxWidth: !resizableColumns ? column.maxWidth : undefined,\n    };\n  };\n\n  // Imperatively sets width style for a cell avoiding React state.\n  // This allows setting the style as soon container's size change is observed.\n  const updateColumnWidths = useStableCallback(() => {\n    for (const { id } of visibleColumns) {\n      const element = cellsRef.current.get(id);\n      if (element) {\n        setElementWidths(element, getColumnStyles(false, id));\n      }\n    }\n    // Sticky column widths must be synchronized once all real column widths are assigned.\n    for (const { id } of visibleColumns) {\n      const element = stickyCellsRef.current.get(id);\n      if (element) {\n        setElementWidths(element, getColumnStyles(true, id));\n      }\n    }\n  });\n\n  // Observes container size and requests an update to the last cell width as it depends on the container's width.\n  useResizeObserver(containerRef, ({ contentBoxWidth: containerWidth }) => {\n    containerWidthRef.current = containerWidth;\n    updateColumnWidths();\n  });\n\n  // The widths of the dynamically added columns (after the first render) if not set explicitly\n  // will default to the DEFAULT_COLUMN_WIDTH.\n  useEffect(() => {\n    updateColumnWidths();\n\n    if (!resizableColumns) {\n      return;\n    }\n    let updated = false;\n    const newColumnWidths = new Map(columnWidths);\n    const lastVisible = visibleColumnsRef.current;\n    if (lastVisible) {\n      for (let index = 0; index < visibleColumns.length; index++) {\n        const column = visibleColumns[index];\n        if (!columnWidths?.get(column.id) && lastVisible.indexOf(column.id) === -1) {\n          updated = true;\n          newColumnWidths.set(column.id, (column.width as number) || DEFAULT_COLUMN_WIDTH);\n        }\n      }\n      if (updated) {\n        setColumnWidths(newColumnWidths);\n      }\n    }\n    visibleColumnsRef.current = visibleColumns.map(column => column.id);\n  }, [columnWidths, resizableColumns, visibleColumns, updateColumnWidths]);\n\n  // Read the actual column widths after the first render to employ the browser defaults for\n  // those columns without explicit width.\n  useEffect(() => {\n    if (!resizableColumns) {\n      return;\n    }\n    setColumnWidths(() => readWidths(getCell, visibleColumns));\n    // This code is intended to run only at the first render and should not re-run when table props change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function updateColumn(columnId: PropertyKey, newWidth: number) {\n    setColumnWidths(columnWidths => updateWidths(visibleColumns, columnWidths ?? new Map(), newWidth, columnId));\n  }\n\n  return (\n    <WidthsContext.Provider value={{ getColumnStyles, columnWidths: columnWidths ?? new Map(), updateColumn, setCell }}>\n      {children}\n    </WidthsContext.Provider>\n  );\n}\n\nexport function useColumnWidths() {\n  return useContext(WidthsContext);\n}\n","\n    import './styles.scoped.css';\n    export default {\n  \"resize-active\": \"awsui_resize-active_x7peu_179a9_97\",\n  \"resize-active-with-focus\": \"awsui_resize-active-with-focus_x7peu_179a9_97\",\n  \"divider\": \"awsui_divider_x7peu_179a9_102\",\n  \"divider-disabled\": \"awsui_divider-disabled_x7peu_179a9_116\",\n  \"divider-active\": \"awsui_divider-active_x7peu_179a9_119\",\n  \"resizer\": \"awsui_resizer_x7peu_179a9_123\",\n  \"has-focus\": \"awsui_has-focus_x7peu_179a9_180\",\n  \"tracker\": \"awsui_tracker_x7peu_179a9_203\"\n};\n  ","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { findUpUntil } from '@cloudscape-design/component-toolkit/dom';\nimport { getLogicalBoundingClientRect } from '@cloudscape-design/component-toolkit/internal';\n\nimport { getOverflowParents } from '../../internal/utils/scrollable-containers.js';\n\nimport tableStyles from '../styles.css.js';\nimport resizerStyles from './styles.css.js';\n\nexport function getResizerElements(resizerElement: null | HTMLElement) {\n  if (!resizerElement) {\n    return null;\n  }\n\n  const header = findUpUntil(resizerElement, element => element.tagName.toLowerCase() === 'th');\n  if (!header) {\n    return null;\n  }\n\n  const tableRoot = findUpUntil(header, element => element.className.indexOf(tableStyles.root) > -1);\n  if (!tableRoot) {\n    return null;\n  }\n\n  const table = tableRoot.querySelector<HTMLElement>(`table`);\n  if (!table) {\n    return null;\n  }\n\n  // tracker is rendered inside table wrapper to align with its size\n  const tracker = tableRoot.querySelector<HTMLElement>(`.${resizerStyles.tracker}`);\n  if (!tracker) {\n    return null;\n  }\n\n  const scrollParent = getOverflowParents(header)[0];\n  if (!scrollParent) {\n    return null;\n  }\n\n  return { header, table, tracker, scrollParent };\n}\n\nexport function getHeaderWidth(resizerElement: null | HTMLElement): number {\n  const header = resizerElement && findUpUntil(resizerElement, element => element.tagName.toLowerCase() === 'th');\n  return header ? getLogicalBoundingClientRect(header).inlineSize : 0;\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { useStableCallback } from '@cloudscape-design/component-toolkit/internal';\nimport { getIsRtl, getLogicalBoundingClientRect, getLogicalPageX } from '@cloudscape-design/component-toolkit/internal';\n\nimport { useSingleTabStopNavigation } from '../../internal/context/single-tab-stop-navigation-context.js';\nimport { useUniqueId } from '../../internal/hooks/use-unique-id';\nimport { KeyCode } from '../../internal/keycode';\nimport handleKey, { isEventLike } from '../../internal/utils/handle-key';\nimport { DEFAULT_COLUMN_WIDTH } from '../use-column-widths';\nimport { getHeaderWidth, getResizerElements } from './resizer-lookup';\n\nimport styles from './styles.css.js';\n\ninterface ResizerProps {\n  onWidthUpdate: (newWidth: number) => void;\n  onWidthUpdateCommit: () => void;\n  ariaLabelledby?: string;\n  minWidth?: number;\n  tabIndex?: number;\n  focusId?: string;\n  showFocusRing?: boolean;\n  roleDescription?: string;\n}\n\nconst AUTO_GROW_START_TIME = 10;\nconst AUTO_GROW_INTERVAL = 10;\nconst AUTO_GROW_INCREMENT = 5;\n\nexport function Divider({ className }: { className?: string }) {\n  return <span className={clsx(styles.divider, styles['divider-disabled'], className)} />;\n}\n\nexport function Resizer({\n  onWidthUpdate,\n  onWidthUpdateCommit,\n  ariaLabelledby,\n  minWidth = DEFAULT_COLUMN_WIDTH,\n  tabIndex,\n  showFocusRing,\n  focusId,\n  roleDescription,\n}: ResizerProps) {\n  onWidthUpdate = useStableCallback(onWidthUpdate);\n  onWidthUpdateCommit = useStableCallback(onWidthUpdateCommit);\n\n  const separatorId = useUniqueId();\n  const resizerToggleRef = useRef<HTMLButtonElement>(null);\n  const resizerSeparatorRef = useRef<HTMLSpanElement>(null);\n\n  const [isDragging, setIsDragging] = useState(false);\n  const [isKeyboardDragging, setIsKeyboardDragging] = useState(false);\n  const autoGrowTimeout = useRef<ReturnType<typeof setTimeout> | undefined>();\n  const [resizerHasFocus, setResizerHasFocus] = useState(false);\n  const [headerCellWidth, setHeaderCellWidth] = useState(0);\n\n  // Read header width after mounting for it to be available in the element's ARIA label before it gets focused.\n  useEffect(() => {\n    setHeaderCellWidth(getHeaderWidth(resizerToggleRef.current));\n  }, []);\n\n  useEffect(() => {\n    const elements = getResizerElements(resizerToggleRef.current);\n    if ((!isDragging && !resizerHasFocus) || !elements) {\n      return;\n    }\n\n    const { insetInlineStart: inlineStartEdge, insetInlineEnd: inlineEndEdge } = getLogicalBoundingClientRect(\n      elements.scrollParent\n    );\n\n    const updateTrackerPosition = (newOffset: number) => {\n      const { insetInlineStart: scrollParentInsetInlineStart } = getLogicalBoundingClientRect(elements.table);\n      elements.tracker.style.insetBlockStart = getLogicalBoundingClientRect(elements.header).blockSize + 'px';\n      // minus one pixel to offset the cell border\n      elements.tracker.style.insetInlineStart = newOffset - scrollParentInsetInlineStart - 1 + 'px';\n    };\n\n    const updateColumnWidth = (newWidth: number) => {\n      const { insetInlineEnd, inlineSize } = getLogicalBoundingClientRect(elements.header);\n      const updatedWidth = newWidth < minWidth ? minWidth : newWidth;\n      updateTrackerPosition(insetInlineEnd + updatedWidth - inlineSize);\n      if (newWidth >= minWidth) {\n        setHeaderCellWidth(newWidth);\n      }\n      // callbacks must be the last calls in the handler, because they may cause an extra update\n      onWidthUpdate(newWidth);\n    };\n\n    const resizeColumn = (offset: number) => {\n      if (offset > inlineStartEdge) {\n        const cellLeft = getLogicalBoundingClientRect(elements.header).insetInlineStart;\n        const newWidth = offset - cellLeft;\n        // callbacks must be the last calls in the handler, because they may cause an extra update\n        updateColumnWidth(newWidth);\n      }\n    };\n\n    const onAutoGrow = () => {\n      const inlineSize = getLogicalBoundingClientRect(elements.header).inlineSize;\n      autoGrowTimeout.current = setTimeout(onAutoGrow, AUTO_GROW_INTERVAL);\n      // callbacks must be the last calls in the handler, because they may cause an extra update\n      updateColumnWidth(inlineSize + AUTO_GROW_INCREMENT);\n      elements.scrollParent.scrollLeft += AUTO_GROW_INCREMENT * (getIsRtl(elements.scrollParent) ? -1 : 1);\n    };\n\n    const onMouseMove = (event: MouseEvent) => {\n      clearTimeout(autoGrowTimeout.current);\n      const offset = getLogicalPageX(event);\n      if (offset > inlineEndEdge) {\n        autoGrowTimeout.current = setTimeout(onAutoGrow, AUTO_GROW_START_TIME);\n      } else {\n        resizeColumn(offset);\n      }\n    };\n\n    const onMouseUp = (event: MouseEvent) => {\n      resizeColumn(getLogicalPageX(event));\n      setIsDragging(false);\n      onWidthUpdateCommit();\n      clearTimeout(autoGrowTimeout.current);\n    };\n\n    const onKeyDown = (event: KeyboardEvent) => {\n      if (isKeyboardDragging) {\n        const keys = [KeyCode.left, KeyCode.right, KeyCode.enter, KeyCode.right, KeyCode.space, KeyCode.escape];\n\n        if (keys.indexOf(event.keyCode) !== -1) {\n          event.preventDefault();\n\n          isEventLike(event) &&\n            handleKey(event, {\n              onActivate: () => {\n                setIsKeyboardDragging(false);\n                resizerToggleRef.current?.focus();\n              },\n              onEscape: () => {\n                setIsKeyboardDragging(false);\n                resizerToggleRef.current?.focus();\n              },\n              onInlineStart: () => updateColumnWidth(getLogicalBoundingClientRect(elements.header).inlineSize - 10),\n              onInlineEnd: () => updateColumnWidth(getLogicalBoundingClientRect(elements.header).inlineSize + 10),\n            });\n        }\n      }\n      // Enter keyboard dragging mode\n      else if (event.keyCode === KeyCode.enter || event.keyCode === KeyCode.space) {\n        event.preventDefault();\n\n        isEventLike(event) &&\n          handleKey(event, {\n            onActivate: () => {\n              setIsKeyboardDragging(true);\n              resizerSeparatorRef.current?.focus();\n            },\n          });\n      }\n    };\n\n    updateTrackerPosition(getLogicalBoundingClientRect(elements.header).insetInlineEnd);\n\n    if (isDragging) {\n      document.body.classList.add(styles['resize-active']);\n      document.addEventListener('mousemove', onMouseMove);\n      document.addEventListener('mouseup', onMouseUp);\n    }\n    if (resizerHasFocus) {\n      document.body.classList.add(styles['resize-active-with-focus']);\n      elements.header.addEventListener('keydown', onKeyDown);\n    }\n    if (isKeyboardDragging) {\n      document.body.classList.add(styles['resize-active']);\n    }\n\n    return () => {\n      clearTimeout(autoGrowTimeout.current);\n      document.body.classList.remove(styles['resize-active']);\n      document.body.classList.remove(styles['resize-active-with-focus']);\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('mouseup', onMouseUp);\n      elements.header.removeEventListener('keydown', onKeyDown);\n    };\n  }, [minWidth, isDragging, isKeyboardDragging, resizerHasFocus, onWidthUpdate, onWidthUpdateCommit]);\n\n  const { tabIndex: resizerTabIndex } = useSingleTabStopNavigation(resizerToggleRef, { tabIndex });\n\n  return (\n    <>\n      <button\n        ref={resizerToggleRef}\n        className={clsx(\n          styles.resizer,\n          (resizerHasFocus || showFocusRing || isKeyboardDragging) && styles['has-focus']\n        )}\n        onMouseDown={event => {\n          if (event.button !== 0) {\n            return;\n          }\n          event.preventDefault();\n          setIsDragging(true);\n        }}\n        onClick={() => {\n          // Prevent mouse drag activation and activate keyboard dragging for VO+Space click.\n          setIsDragging(false);\n          setResizerHasFocus(true);\n          setIsKeyboardDragging(true);\n          resizerSeparatorRef.current?.focus();\n        }}\n        onFocus={() => {\n          setHeaderCellWidth(getHeaderWidth(resizerToggleRef.current));\n          setResizerHasFocus(true);\n        }}\n        onBlur={event => {\n          // Ignoring blur event when focus moves to the resizer separator element.\n          // (This focus transition is done programmatically when the resizer button is clicked).\n          if (event.relatedTarget !== resizerSeparatorRef.current) {\n            setResizerHasFocus(false);\n          }\n        }}\n        // Using a custom role-description to make the element's purpose better clear.\n        // The role-description must include the word \"button\" to imply the interaction model.\n        // See https://www.w3.org/TR/wai-aria-1.1/#aria-roledescription\n        aria-roledescription={roleDescription}\n        aria-labelledby={ariaLabelledby}\n        tabIndex={resizerTabIndex}\n        data-focus-id={focusId}\n      />\n      <span\n        className={clsx(styles.divider, isDragging && styles['divider-active'])}\n        data-awsui-table-suppress-navigation={true}\n        ref={resizerSeparatorRef}\n        id={separatorId}\n        role=\"separator\"\n        tabIndex={-1}\n        aria-hidden={!isKeyboardDragging}\n        aria-orientation=\"vertical\"\n        aria-valuenow={headerCellWidth}\n        // aria-valuetext is needed because the VO announces \"collapsed\" when only aria-valuenow set without aria-valuemax\n        aria-valuetext={headerCellWidth.toFixed(0)}\n        aria-valuemin={minWidth}\n        data-focus-id={focusId}\n        onBlur={() => {\n          setResizerHasFocus(false);\n          if (isKeyboardDragging) {\n            setIsKeyboardDragging(false);\n          }\n          onWidthUpdateCommit();\n        }}\n      />\n    </>\n  );\n}\n\nexport function ResizeTracker() {\n  return <span className={styles.tracker} />;\n}\n","\n    import './styles.scoped.css';\n    export default {\n  \"root\": \"awsui_root_1s55x_svuwr_97\",\n  \"label\": \"awsui_label_1s55x_svuwr_101\",\n  \"stud\": \"awsui_stud_1s55x_svuwr_115\"\n};\n  ","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { KeyboardEvent } from 'react';\n\nimport { findUpUntil } from '../../internal/utils/dom';\nimport { TableProps } from '../interfaces';\nimport { SELECTION_ITEM } from './utils';\n\nimport selectionStyles from './styles.css.js';\n\n// The hooks moves focus between multi-selection checkboxes.\n// Not eligible for tables with grid navigation.\nexport function useSelectionFocusMove(selectionType: TableProps['selectionType'], totalItems: number) {\n  if (selectionType !== 'multi') {\n    return {};\n  }\n  function moveFocus(sourceElement: HTMLElement, fromIndex: number, direction: -1 | 1) {\n    let index = fromIndex;\n    const rootContainer = findRootContainer(sourceElement);\n\n    while (index >= -1 && index < totalItems) {\n      index += direction;\n      const control = findSelectionControlByIndex(rootContainer, index);\n      if (control && !control.disabled) {\n        control.focus();\n        break;\n      }\n    }\n  }\n  const [moveFocusDown, moveFocusUp] = ([1, -1] as const).map(direction => {\n    return (event: KeyboardEvent) => {\n      const target = event.currentTarget as HTMLElement;\n      const itemNode = findUpUntil(target, node => node.dataset.selectionItem === 'item')!;\n      const fromIndex = Array.prototype.indexOf.call(itemNode.parentElement!.children, itemNode);\n      moveFocus(target, fromIndex, direction);\n    };\n  });\n  return {\n    moveFocusDown,\n    moveFocusUp,\n    moveFocus,\n  };\n}\n\nfunction findSelectionControlByIndex(rootContainer: HTMLElement, index: number) {\n  if (index === -1) {\n    // find \"select all\" checkbox\n    return rootContainer.querySelector<HTMLInputElement>(\n      `[data-${SELECTION_ITEM}=\"all\"] .${selectionStyles.root} input`\n    );\n  }\n  return rootContainer.querySelectorAll<HTMLInputElement>(\n    `[data-${SELECTION_ITEM}=\"item\"] .${selectionStyles.root} input`\n  )[index];\n}\n\nfunction findRootContainer(element: HTMLElement) {\n  return findUpUntil(element, node => node.dataset.selectionRoot === 'true')!;\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useState } from 'react';\n\nimport { fireNonCancelableEvent } from '../../internal/events';\nimport { useUniqueId } from '../../internal/hooks/use-unique-id';\nimport { joinStrings } from '../../internal/utils/strings';\nimport { TableProps } from '../interfaces';\nimport { getTrackableValue } from '../utils';\nimport { SelectionProps } from './interfaces';\nimport { ItemSet } from './utils';\n\ntype SelectionOptions<T> = Pick<\n  TableProps<T>,\n  | 'ariaLabels'\n  | 'isItemDisabled'\n  | 'items'\n  | 'loading'\n  | 'onSelectionChange'\n  | 'selectedItems'\n  | 'selectionType'\n  | 'trackBy'\n>;\n\nexport function useSelection<T>(options: SelectionOptions<T>): {\n  isItemSelected: (item: T) => boolean;\n  getSelectAllProps?: () => SelectionProps;\n  getItemSelectionProps?: (item: T) => SelectionProps;\n} {\n  const singleSelectionProps = useSingleSelection(options);\n  const multiSelectionProps = useMultiSelection(options);\n  return options.selectionType === 'single' ? singleSelectionProps : multiSelectionProps;\n}\n\nfunction useSingleSelection<T>({\n  ariaLabels,\n  isItemDisabled = () => false,\n  onSelectionChange,\n  selectedItems = [],\n  selectionType,\n  trackBy,\n}: SelectionOptions<T>) {\n  // The name assigned to all controls to combine them in a single group.\n  const selectionControlName = useUniqueId();\n\n  if (selectionType !== 'single') {\n    return { isItemSelected: () => false };\n  }\n\n  // Selection state for individual items.\n  const selectedSet = new ItemSet(trackBy, selectedItems.slice(0, 1));\n  const isItemSelected = selectedSet.has.bind(selectedSet);\n\n  const handleToggleItem = (item: T) => {\n    if (!isItemDisabled(item) && !isItemSelected(item)) {\n      fireNonCancelableEvent(onSelectionChange, { selectedItems: [item] });\n    }\n  };\n\n  return {\n    isItemSelected,\n    getItemSelectionProps: (item: T): SelectionProps => ({\n      name: selectionControlName,\n      selectionType: 'single',\n      disabled: isItemDisabled(item),\n      checked: isItemSelected(item),\n      onChange: () => handleToggleItem(item),\n      ariaLabel: joinStrings(\n        ariaLabels?.selectionGroupLabel,\n        ariaLabels?.itemSelectionLabel?.({ selectedItems }, item)\n      ),\n    }),\n  };\n}\n\nfunction useMultiSelection<T>({\n  ariaLabels,\n  isItemDisabled = () => false,\n  items,\n  loading,\n  onSelectionChange,\n  selectedItems = [],\n  selectionType,\n  trackBy,\n}: SelectionOptions<T>) {\n  // The name assigned to all controls to combine them in a single group.\n  const selectionControlName = useUniqueId();\n  const [shiftPressed, setShiftPressed] = useState(false);\n  const [lastClickedItem, setLastClickedItem] = useState<null | T>(null);\n\n  if (selectionType !== 'multi') {\n    return { isItemSelected: () => false };\n  }\n\n  // Selection state for individual items.\n  const selectedSet = new ItemSet(trackBy, selectedItems);\n  const isItemSelected = selectedSet.has.bind(selectedSet);\n\n  // Derived selection state for all-items checkbox.\n  let allItemsDisabled = true;\n  let allEnabledItemsSelected = true;\n  for (const item of items) {\n    allItemsDisabled = allItemsDisabled && isItemDisabled(item);\n    allEnabledItemsSelected = allEnabledItemsSelected && (isItemSelected(item) || isItemDisabled(item));\n  }\n  const allItemsCheckboxSelected = selectedItems.length > 0 && allEnabledItemsSelected;\n  const allItemsCheckboxIndeterminate = selectedItems.length > 0 && !allEnabledItemsSelected;\n\n  // Shift-selection helpers.\n  const itemIndexesMap = new Map<T, number>();\n  items.forEach((item, i) => itemIndexesMap.set(getTrackableValue(trackBy, item), i));\n  const getShiftSelectedItems = (item: T): T[] => {\n    const lastClickedItemIndex = lastClickedItem\n      ? itemIndexesMap.get(getTrackableValue(trackBy, lastClickedItem))\n      : undefined;\n    // We use lastClickedItemIndex to determine if filtering/sorting/pagination\n    // made previously selected item invisible, therefore we reset state for shift-select.\n    if (lastClickedItemIndex !== undefined) {\n      const currentItemIndex = itemIndexesMap.get(getTrackableValue(trackBy, item))!;\n      const start = Math.min(currentItemIndex, lastClickedItemIndex);\n      const end = Math.max(currentItemIndex, lastClickedItemIndex);\n      return items.slice(start, end + 1);\n    }\n    return [item];\n  };\n\n  // Select items that are not already selected or disabled.\n  const selectItems = (requestedItems: readonly T[]) => {\n    const newSelectedItems = [...selectedItems];\n    requestedItems.forEach(newItem => {\n      if (!isItemSelected(newItem) && !isItemDisabled(newItem)) {\n        newSelectedItems.push(newItem);\n      }\n    });\n    return newSelectedItems;\n  };\n\n  // Unselect items unless they are disabled.\n  const deselectItems = (requestedItems: readonly T[]) => {\n    const requestedItemsSet = new ItemSet(trackBy, requestedItems);\n    const newSelectedItems: Array<T> = [];\n    selectedItems.forEach(selectedItem => {\n      const shouldUnselect = requestedItemsSet.has(selectedItem);\n      if (!shouldUnselect || isItemDisabled(selectedItem)) {\n        newSelectedItems.push(selectedItem);\n      }\n    });\n    return newSelectedItems;\n  };\n\n  const handleToggleAll = () => {\n    const newSelectedItems = allEnabledItemsSelected ? deselectItems(items) : selectItems(items);\n    fireNonCancelableEvent(onSelectionChange, { selectedItems: newSelectedItems });\n  };\n\n  const handleToggleItem = (item: T) => {\n    if (!isItemDisabled(item)) {\n      const requestedItems = shiftPressed ? getShiftSelectedItems(item) : [item];\n      const selectedItems = isItemSelected(item) ? deselectItems(requestedItems) : selectItems(requestedItems);\n      fireNonCancelableEvent(onSelectionChange, { selectedItems });\n      setLastClickedItem(item);\n    }\n  };\n\n  return {\n    isItemSelected,\n    getSelectAllProps: (): SelectionProps => ({\n      name: selectionControlName,\n      selectionType: 'multi',\n      disabled: allItemsDisabled || !!loading,\n      checked: allItemsCheckboxSelected,\n      indeterminate: allItemsCheckboxIndeterminate,\n      onChange: handleToggleAll,\n      ariaLabel: joinStrings(ariaLabels?.selectionGroupLabel, ariaLabels?.allItemsSelectionLabel?.({ selectedItems })),\n    }),\n    getItemSelectionProps: (item: T): SelectionProps => ({\n      name: selectionControlName,\n      selectionType: 'multi',\n      disabled: isItemDisabled(item),\n      checked: isItemSelected(item),\n      onChange: () => handleToggleItem(item),\n      onShiftToggle: (value: boolean) => setShiftPressed(value),\n      ariaLabel: joinStrings(\n        ariaLabels?.selectionGroupLabel,\n        ariaLabels?.itemSelectionLabel?.({ selectedItems }, item)\n      ),\n    }),\n  };\n}\n","\n    import './styles.scoped.css';\n    export default {\n  \"root\": \"awsui_root_k2y2q_1wk1c_97\",\n  \"checkbox-control\": \"awsui_checkbox-control_k2y2q_1wk1c_133\",\n  \"outline\": \"awsui_outline_k2y2q_1wk1c_141\"\n};\n  ","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport {\n  GeneratedAnalyticsMetadataFragment,\n  getAnalyticsMetadataAttribute,\n} from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { getBaseProps } from '../internal/base-component';\nimport AbstractSwitch from '../internal/components/abstract-switch';\nimport CheckboxIcon from '../internal/components/checkbox-icon';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport { useSingleTabStopNavigation } from '../internal/context/single-tab-stop-navigation-context';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport {\n  GeneratedAnalyticsMetadataCheckboxComponent,\n  GeneratedAnalyticsMetadataCheckboxSelect,\n} from './analytics-metadata/interfaces';\nimport { CheckboxProps } from './interfaces';\n\nimport styles from './styles.css.js';\n\ninterface InternalProps extends CheckboxProps, InternalBaseComponentProps {\n  tabIndex?: -1;\n  showOutline?: boolean;\n  __injectAnalyticsComponentMetadata?: boolean;\n}\n\nconst InternalCheckbox = React.forwardRef<CheckboxProps.Ref, InternalProps>(\n  (\n    {\n      controlId,\n      name,\n      checked,\n      disabled,\n      readOnly,\n      ariaRequired,\n      indeterminate,\n      children,\n      description,\n      ariaLabel,\n      onFocus,\n      onBlur,\n      onChange,\n      tabIndex: explicitTabIndex,\n      showOutline,\n      ariaControls,\n      __internalRootRef,\n      __injectAnalyticsComponentMetadata = false,\n      ...rest\n    },\n    ref\n  ) => {\n    const { ariaDescribedby, ariaLabelledby } = useFormFieldContext(rest);\n    const baseProps = getBaseProps(rest);\n    const checkboxRef = useRef<HTMLInputElement>(null);\n    useForwardFocus(ref, checkboxRef);\n    useEffect(() => {\n      if (checkboxRef.current) {\n        checkboxRef.current.indeterminate = Boolean(indeterminate);\n      }\n    });\n\n    const { tabIndex } = useSingleTabStopNavigation(checkboxRef, { tabIndex: explicitTabIndex });\n\n    const analyticsMetadata: GeneratedAnalyticsMetadataFragment = {};\n    const analyticsComponentMetadata: GeneratedAnalyticsMetadataCheckboxComponent = {\n      name: 'awsui.Checkbox',\n      label: { root: 'self' },\n    };\n    if (__injectAnalyticsComponentMetadata) {\n      analyticsMetadata.component = analyticsComponentMetadata;\n    }\n    if (!disabled && !readOnly) {\n      analyticsMetadata.detail = {\n        selected: `${!checked}`,\n      } as Partial<GeneratedAnalyticsMetadataCheckboxSelect['detail']>;\n    }\n\n    return (\n      <AbstractSwitch\n        {...baseProps}\n        className={clsx(styles.root, baseProps.className)}\n        controlClassName={styles['checkbox-control']}\n        outlineClassName={styles.outline}\n        controlId={controlId}\n        disabled={disabled}\n        readOnly={readOnly}\n        label={children}\n        description={description}\n        descriptionBottomPadding={true}\n        ariaLabel={ariaLabel}\n        ariaLabelledby={ariaLabelledby}\n        ariaDescribedby={ariaDescribedby}\n        ariaControls={ariaControls}\n        showOutline={showOutline}\n        nativeControl={nativeControlProps => (\n          <input\n            {...nativeControlProps}\n            ref={checkboxRef}\n            type=\"checkbox\"\n            checked={checked}\n            name={name}\n            aria-required={ariaRequired ? 'true' : undefined}\n            aria-disabled={readOnly && !disabled ? 'true' : undefined}\n            tabIndex={tabIndex}\n            onFocus={() => fireNonCancelableEvent(onFocus)}\n            onBlur={() => fireNonCancelableEvent(onBlur)}\n            // empty handler to suppress React controllability warning\n            onChange={() => {}}\n          />\n        )}\n        onClick={() => {\n          checkboxRef.current?.focus();\n          fireNonCancelableEvent(\n            onChange,\n            // for deterministic transitions \"indeterminate\" -> \"checked\" -> \"unchecked\"\n            indeterminate ? { checked: true, indeterminate: false } : { checked: !checked, indeterminate: false }\n          );\n        }}\n        styledControl={\n          <CheckboxIcon checked={checked} indeterminate={indeterminate} disabled={disabled} readOnly={readOnly} />\n        }\n        __internalRootRef={__internalRootRef}\n        {...getAnalyticsMetadataAttribute(analyticsMetadata)}\n      />\n    );\n  }\n);\n\nexport default InternalCheckbox;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { KeyboardEvent, KeyboardEventHandler, MouseEvent, useContext } from 'react';\nimport clsx from 'clsx';\n\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport InternalCheckbox from '../../checkbox/internal';\nimport { SingleTabStopNavigationContext } from '../../internal/context/single-tab-stop-navigation-context';\nimport { useUniqueId } from '../../internal/hooks/use-unique-id';\nimport { KeyCode } from '../../internal/keycode';\nimport RadioButton from '../../radio-group/radio-button';\nimport { GeneratedAnalyticsMetadataTableSelect } from '../analytics-metadata/interfaces';\nimport { SelectionProps } from './interfaces';\n\nimport styles from './styles.css.js';\n\nexport interface SelectionControlProps extends SelectionProps {\n  onShiftToggle?(shiftPressed: boolean): void;\n  onFocusUp?: KeyboardEventHandler;\n  onFocusDown?: KeyboardEventHandler;\n  ariaLabel?: string;\n  tabIndex?: -1;\n  focusedComponent?: null | string;\n  rowIndex?: number;\n  itemKey?: string;\n}\n\nexport function SelectionControl({\n  selectionType,\n  indeterminate = false,\n  onShiftToggle,\n  onFocusUp,\n  onFocusDown,\n  name,\n  ariaLabel,\n  focusedComponent,\n  rowIndex,\n  itemKey,\n  ...sharedProps\n}: SelectionControlProps) {\n  const controlId = useUniqueId();\n  const isMultiSelection = selectionType === 'multi';\n  const { navigationActive } = useContext(SingleTabStopNavigationContext);\n\n  const setShiftState = (event: KeyboardEvent | MouseEvent) => {\n    if (isMultiSelection) {\n      onShiftToggle && onShiftToggle(event.shiftKey);\n    }\n  };\n\n  const onMouseDownHandler = (event: MouseEvent) => {\n    setShiftState(event);\n    if (isMultiSelection) {\n      // To overcome an issue\n      // If you shift+click or ctrl+click on a label for a checkbox, checkbox is not checked.\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=559506\n      event.preventDefault();\n    }\n  };\n\n  // native checkboxes do not have focus move via keyboard, we implement it here programmatically\n  const handleKeyDown = (event: KeyboardEvent) => {\n    setShiftState(event);\n    if (isMultiSelection && !navigationActive) {\n      if (event.keyCode === KeyCode.up) {\n        event.preventDefault();\n        onFocusUp && onFocusUp(event);\n      }\n      if (event.keyCode === KeyCode.down) {\n        event.preventDefault();\n        onFocusDown && onFocusDown(event);\n      }\n    }\n  };\n\n  const handleClick = (event: MouseEvent) => {\n    const target = event.currentTarget;\n    const nativeInput = (target.tagName === 'INPUT' ? target : target.querySelector('input')) as HTMLInputElement;\n    // Clicking on input, does not focus it on Firefox (AWSUI-11345)\n    nativeInput?.focus();\n  };\n\n  const selector = isMultiSelection ? (\n    <InternalCheckbox\n      {...sharedProps}\n      showOutline={focusedComponent === 'selection-control'}\n      controlId={controlId}\n      data-focus-id=\"selection-control\"\n      indeterminate={indeterminate}\n    />\n  ) : (\n    <RadioButton {...sharedProps} controlId={controlId} name={name} value={''} label={''} />\n  );\n\n  return (\n    <>\n      <label\n        onKeyDown={handleKeyDown}\n        onKeyUp={setShiftState}\n        onMouseDown={onMouseDownHandler}\n        onMouseUp={setShiftState}\n        onClick={handleClick}\n        htmlFor={controlId}\n        className={clsx(styles.label, styles.root)}\n        aria-label={ariaLabel}\n        title={ariaLabel}\n        {...(rowIndex !== undefined && !sharedProps.disabled\n          ? getAnalyticsMetadataAttribute({\n              detail: {\n                position: `${rowIndex + 1}`,\n                item: itemKey || '',\n              },\n            } as Partial<GeneratedAnalyticsMetadataTableSelect>)\n          : {})}\n      >\n        {selector}\n      </label>\n      <span className={styles.stud} aria-hidden={true}>\n        &nbsp;\n      </span>\n    </>\n  );\n}\n","\n    import './styles.scoped.css';\n    export default {\n  \"header-cell\": \"awsui_header-cell_1spae_geicw_97\",\n  \"header-cell-fake-focus\": \"awsui_header-cell-fake-focus_1spae_geicw_131\",\n  \"header-cell-sticky\": \"awsui_header-cell-sticky_1spae_geicw_152\",\n  \"header-cell-stuck\": \"awsui_header-cell-stuck_1spae_geicw_155\",\n  \"header-cell-variant-full-page\": \"awsui_header-cell-variant-full-page_1spae_geicw_155\",\n  \"header-cell-hidden\": \"awsui_header-cell-hidden_1spae_geicw_161\",\n  \"header-cell-sortable\": \"awsui_header-cell-sortable_1spae_geicw_164\",\n  \"sticky-cell\": \"awsui_sticky-cell_1spae_geicw_167\",\n  \"sticky-cell-pad-left\": \"awsui_sticky-cell-pad-left_1spae_geicw_175\",\n  \"has-selection\": \"awsui_has-selection_1spae_geicw_175\",\n  \"sticky-cell-last-inline-start\": \"awsui_sticky-cell-last-inline-start_1spae_geicw_178\",\n  \"resize-divider\": \"awsui_resize-divider_1spae_geicw_183\",\n  \"sticky-cell-last-inline-end\": \"awsui_sticky-cell-last-inline-end_1spae_geicw_190\",\n  \"sorting-icon\": \"awsui_sorting-icon_1spae_geicw_210\",\n  \"edit-icon\": \"awsui_edit-icon_1spae_geicw_218\",\n  \"header-cell-content\": \"awsui_header-cell-content_1spae_geicw_224\",\n  \"header-cell-content-expandable\": \"awsui_header-cell-content-expandable_1spae_geicw_230\",\n  \"header-cell-disabled\": \"awsui_header-cell-disabled_1spae_geicw_282\",\n  \"header-cell-sorted\": \"awsui_header-cell-sorted_1spae_geicw_282\",\n  \"header-cell-text\": \"awsui_header-cell-text_1spae_geicw_296\",\n  \"header-cell-text-wrap\": \"awsui_header-cell-text-wrap_1spae_geicw_300\",\n  \"header-cell-ascending\": \"awsui_header-cell-ascending_1spae_geicw_306\",\n  \"header-cell-descending\": \"awsui_header-cell-descending_1spae_geicw_307\",\n  \"is-visual-refresh\": \"awsui_is-visual-refresh_1spae_geicw_317\",\n  \"has-striped-rows\": \"awsui_has-striped-rows_1spae_geicw_421\",\n  \"sticky-cell-pad-inline-start\": \"awsui_sticky-cell-pad-inline-start_1spae_geicw_427\"\n};\n  ","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { copyAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { useSingleTabStopNavigation } from '../../internal/context/single-tab-stop-navigation-context';\nimport { useMergeRefs } from '../../internal/hooks/use-merge-refs';\nimport { StickyColumnsModel, useStickyCellStyles } from '../sticky-columns';\nimport { getTableColHeaderRoleProps, TableRole } from '../table-role';\nimport { getStickyClassNames } from '../utils';\nimport { SortingStatus } from './utils';\n\nimport styles from './styles.css.js';\n\ninterface TableThElementProps {\n  className?: string;\n  style?: React.CSSProperties;\n  sortingStatus?: SortingStatus;\n  sortingDisabled?: boolean;\n  focusedComponent?: null | string;\n  hidden?: boolean;\n  colIndex: number;\n  columnId: PropertyKey;\n  stickyState: StickyColumnsModel;\n  cellRef?: React.RefCallback<HTMLElement>;\n  tableRole: TableRole;\n  children: React.ReactNode;\n}\n\nexport function TableThElement({\n  className,\n  style,\n  sortingStatus,\n  sortingDisabled,\n  focusedComponent,\n  hidden,\n  colIndex,\n  columnId,\n  stickyState,\n  cellRef,\n  tableRole,\n  children,\n  ...props\n}: TableThElementProps) {\n  const stickyStyles = useStickyCellStyles({\n    stickyColumns: stickyState,\n    columnId,\n    getClassName: props => getStickyClassNames(styles, props),\n  });\n\n  const cellRefObject = useRef<HTMLTableCellElement>(null);\n  const mergedRef = useMergeRefs(stickyStyles.ref, cellRef, cellRefObject);\n  const { tabIndex: cellTabIndex } = useSingleTabStopNavigation(cellRefObject);\n\n  return (\n    <th\n      data-focus-id={`header-${String(columnId)}`}\n      className={clsx(\n        className,\n        {\n          [styles['header-cell-fake-focus']]: focusedComponent === `header-${String(columnId)}`,\n          [styles['header-cell-sortable']]: sortingStatus,\n          [styles['header-cell-sorted']]: sortingStatus === 'ascending' || sortingStatus === 'descending',\n          [styles['header-cell-disabled']]: sortingDisabled,\n          [styles['header-cell-ascending']]: sortingStatus === 'ascending',\n          [styles['header-cell-descending']]: sortingStatus === 'descending',\n          [styles['header-cell-hidden']]: hidden,\n        },\n        stickyStyles.className\n      )}\n      style={{ ...style, ...stickyStyles.style }}\n      ref={mergedRef}\n      {...getTableColHeaderRoleProps({ tableRole, sortingStatus, colIndex })}\n      tabIndex={cellTabIndex === -1 ? undefined : cellTabIndex}\n      {...copyAnalyticsMetadataAttribute(props)}\n    >\n      {children}\n    </th>\n  );\n}\n","\n    import './styles.scoped.css';\n    export default {\n  \"header-cell-text\": \"awsui_header-cell-text_dpuyq_1id1o_5\"\n};\n  ","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { useInternalI18n } from '../../i18n/context';\nimport InternalIcon from '../../icon/internal';\nimport { useSingleTabStopNavigation } from '../../internal/context/single-tab-stop-navigation-context';\nimport { useUniqueId } from '../../internal/hooks/use-unique-id';\nimport { KeyCode } from '../../internal/keycode';\nimport { GeneratedAnalyticsMetadataTableSort } from '../analytics-metadata/interfaces';\nimport { TableProps } from '../interfaces';\nimport { Divider, Resizer } from '../resizer';\nimport { StickyColumnsModel } from '../sticky-columns';\nimport { TableRole } from '../table-role';\nimport { TableThElement } from './th-element';\nimport { getSortingIconName, getSortingStatus, isSorted } from './utils';\n\nimport analyticsSelectors from '../analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\n\nexport interface TableHeaderCellProps<ItemType> {\n  className?: string;\n  style?: React.CSSProperties;\n  tabIndex: number;\n  column: TableProps.ColumnDefinition<ItemType>;\n  activeSortingColumn?: TableProps.SortingColumn<ItemType>;\n  sortingDescending?: boolean;\n  sortingDisabled?: boolean;\n  wrapLines?: boolean;\n  hidden?: boolean;\n  onClick(detail: TableProps.SortingState<any>): void;\n  onResizeFinish: () => void;\n  colIndex: number;\n  updateColumn: (columnId: PropertyKey, newWidth: number) => void;\n  resizableColumns?: boolean;\n  isEditable?: boolean;\n  columnId: PropertyKey;\n  stickyState: StickyColumnsModel;\n  cellRef: React.RefCallback<HTMLElement>;\n  focusedComponent?: null | string;\n  tableRole: TableRole;\n  resizerRoleDescription?: string;\n  isExpandable?: boolean;\n}\n\nexport function TableHeaderCell<ItemType>({\n  className,\n  style,\n  tabIndex,\n  column,\n  activeSortingColumn,\n  sortingDescending,\n  sortingDisabled,\n  wrapLines,\n  focusedComponent,\n  hidden,\n  onClick,\n  colIndex,\n  updateColumn,\n  resizableColumns,\n  onResizeFinish,\n  isEditable,\n  columnId,\n  stickyState,\n  cellRef,\n  tableRole,\n  resizerRoleDescription,\n  isExpandable,\n}: TableHeaderCellProps<ItemType>) {\n  const i18n = useInternalI18n('table');\n  const sortable = !!column.sortingComparator || !!column.sortingField;\n  const sorted = !!activeSortingColumn && isSorted(column, activeSortingColumn);\n  const sortingStatus = getSortingStatus(sortable, sorted, !!sortingDescending, !!sortingDisabled);\n  const handleClick = () =>\n    onClick({\n      sortingColumn: column,\n      isDescending: sorted ? !sortingDescending : false,\n    });\n\n  // Elements with role=\"button\" do not have the default behavior of <button>, where pressing\n  // Enter or Space will trigger a click event. Therefore we need to add this ourselves.\n  // The native <button> element cannot be used due to a misaligned implementation in Firefox:\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=843003\n  const handleKeyPress = ({ nativeEvent: e }: React.KeyboardEvent) => {\n    if (e.keyCode === KeyCode.enter || e.keyCode === KeyCode.space) {\n      e.preventDefault();\n      handleClick();\n    }\n  };\n\n  const headerId = useUniqueId('table-header-');\n\n  const clickableHeaderRef = useRef<HTMLDivElement>(null);\n  const { tabIndex: clickableHeaderTabIndex } = useSingleTabStopNavigation(clickableHeaderRef, { tabIndex });\n\n  return (\n    <TableThElement\n      className={className}\n      style={style}\n      cellRef={cellRef}\n      sortingStatus={sortingStatus}\n      sortingDisabled={sortingDisabled}\n      focusedComponent={focusedComponent}\n      hidden={hidden}\n      colIndex={colIndex}\n      columnId={columnId}\n      stickyState={stickyState}\n      tableRole={tableRole}\n      {...(sortingDisabled\n        ? {}\n        : getAnalyticsMetadataAttribute({\n            action: 'sort',\n            detail: {\n              position: `${colIndex + 1}`,\n              columnId: column.id ? `${column.id}` : '',\n              label: `.${analyticsSelectors['header-cell-text']}`,\n              sortingDescending: `${!sortingDescending}`,\n            },\n          } as GeneratedAnalyticsMetadataTableSort))}\n    >\n      <div\n        ref={clickableHeaderRef}\n        data-focus-id={`sorting-control-${String(columnId)}`}\n        className={clsx(styles['header-cell-content'], {\n          [styles['header-cell-fake-focus']]: focusedComponent === `sorting-control-${String(columnId)}`,\n          [styles['header-cell-content-expandable']]: isExpandable,\n        })}\n        aria-label={\n          column.ariaLabel\n            ? column.ariaLabel({\n                sorted: sorted,\n                descending: sorted && !!sortingDescending,\n                disabled: !!sortingDisabled,\n              })\n            : undefined\n        }\n        {...(sortingStatus && !sortingDisabled\n          ? {\n              onKeyPress: handleKeyPress,\n              tabIndex: clickableHeaderTabIndex,\n              role: 'button',\n              onClick: handleClick,\n            }\n          : {})}\n      >\n        <div\n          className={clsx(\n            styles['header-cell-text'],\n            analyticsSelectors['header-cell-text'],\n            wrapLines && styles['header-cell-text-wrap']\n          )}\n          id={headerId}\n        >\n          {column.header}\n          {isEditable && !isExpandable ? (\n            <span\n              className={styles['edit-icon']}\n              role=\"img\"\n              aria-label={i18n('columnDefinitions.editConfig.editIconAriaLabel', column.editConfig?.editIconAriaLabel)}\n            >\n              <InternalIcon name=\"edit\" />\n            </span>\n          ) : null}\n        </div>\n        {sortingStatus && (\n          <span className={styles['sorting-icon']}>\n            <InternalIcon name={getSortingIconName(sortingStatus)} />\n          </span>\n        )}\n      </div>\n      {resizableColumns ? (\n        <Resizer\n          tabIndex={tabIndex}\n          focusId={`resize-control-${String(columnId)}`}\n          showFocusRing={focusedComponent === `resize-control-${String(columnId)}`}\n          onWidthUpdate={newWidth => updateColumn(columnId, newWidth)}\n          onWidthUpdateCommit={onResizeFinish}\n          ariaLabelledby={headerId}\n          minWidth={typeof column.minWidth === 'string' ? parseInt(column.minWidth) : column.minWidth}\n          roleDescription={i18n('ariaLabels.resizerRoleDescription', resizerRoleDescription)}\n        />\n      ) : (\n        <Divider className={styles['resize-divider']} />\n      )}\n    </TableThElement>\n  );\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport { findUpUntil } from '@cloudscape-design/component-toolkit/dom';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport ScreenreaderOnly from '../internal/components/screenreader-only';\nimport { fireNonCancelableEvent, NonCancelableEventHandler } from '../internal/events';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { GeneratedAnalyticsMetadataTableSelectAll } from './analytics-metadata/interfaces';\nimport { TableHeaderCell } from './header-cell';\nimport { TableThElement } from './header-cell/th-element';\nimport { TableProps } from './interfaces';\nimport { Divider } from './resizer';\nimport { focusMarkers, SelectionControl, SelectionProps } from './selection';\nimport { StickyColumnsModel } from './sticky-columns';\nimport { getTableHeaderRowRoleProps, TableRole } from './table-role';\nimport { useColumnWidths } from './use-column-widths';\nimport { getColumnKey } from './utils';\n\nimport headerCellStyles from './header-cell/styles.css.js';\nimport styles from './styles.css.js';\n\nexport interface TheadProps {\n  selectionType: TableProps.SelectionType | undefined;\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<any>>;\n  sortingColumn: TableProps.SortingColumn<any> | undefined;\n  sortingDescending: boolean | undefined;\n  sortingDisabled: boolean | undefined;\n  variant: TableProps.Variant;\n  wrapLines: boolean | undefined;\n  resizableColumns: boolean | undefined;\n  getSelectAllProps?: () => SelectionProps;\n  onFocusMove: ((sourceElement: HTMLElement, fromIndex: number, direction: -1 | 1) => void) | undefined;\n  onResizeFinish: (newWidths: Map<PropertyKey, number>) => void;\n  onSortingChange: NonCancelableEventHandler<TableProps.SortingState<any>> | undefined;\n  sticky?: boolean;\n  hidden?: boolean;\n  stuck?: boolean;\n  singleSelectionHeaderAriaLabel?: string;\n  resizerRoleDescription?: string;\n  stripedRows?: boolean;\n  stickyState: StickyColumnsModel;\n  selectionColumnId: PropertyKey;\n  focusedComponent?: null | string;\n  onFocusedComponentChange?: (focusId: null | string) => void;\n  tableRole: TableRole;\n  isExpandable?: boolean;\n  setLastUserAction: (name: string) => void;\n}\n\nconst Thead = React.forwardRef(\n  (\n    {\n      selectionType,\n      getSelectAllProps,\n      columnDefinitions,\n      sortingColumn,\n      sortingDisabled,\n      sortingDescending,\n      resizableColumns,\n      variant,\n      wrapLines,\n      onFocusMove,\n      onSortingChange,\n      onResizeFinish,\n      singleSelectionHeaderAriaLabel,\n      stripedRows,\n      sticky = false,\n      hidden = false,\n      stuck = false,\n      stickyState,\n      selectionColumnId,\n      focusedComponent,\n      onFocusedComponentChange,\n      tableRole,\n      resizerRoleDescription,\n      isExpandable,\n      setLastUserAction,\n    }: TheadProps,\n    outerRef: React.Ref<HTMLTableRowElement>\n  ) => {\n    const isVisualRefresh = useVisualRefresh();\n\n    const headerCellClass = clsx(\n      headerCellStyles['header-cell'],\n      headerCellStyles[`header-cell-variant-${variant}`],\n      sticky && headerCellStyles['header-cell-sticky'],\n      stuck && headerCellStyles['header-cell-stuck'],\n      stripedRows && headerCellStyles['has-striped-rows'],\n      isVisualRefresh && headerCellStyles['is-visual-refresh']\n    );\n\n    const selectionCellClass = clsx(\n      styles['selection-control'],\n      styles['selection-control-header'],\n      isVisualRefresh && styles['is-visual-refresh']\n    );\n\n    const { getColumnStyles, columnWidths, updateColumn, setCell } = useColumnWidths();\n\n    return (\n      <thead className={clsx(!hidden && styles['thead-active'])}>\n        <tr\n          {...focusMarkers.all}\n          ref={outerRef}\n          aria-rowindex={1}\n          {...getTableHeaderRowRoleProps({ tableRole })}\n          onFocus={event => {\n            const focusControlElement = findUpUntil(event.target, element => !!element.getAttribute('data-focus-id'));\n            const focusId = focusControlElement?.getAttribute('data-focus-id') ?? null;\n            onFocusedComponentChange?.(focusId);\n          }}\n          onBlur={() => onFocusedComponentChange?.(null)}\n        >\n          {selectionType ? (\n            <TableThElement\n              className={clsx(headerCellClass, selectionCellClass, hidden && headerCellStyles['header-cell-hidden'])}\n              hidden={hidden}\n              tableRole={tableRole}\n              colIndex={0}\n              focusedComponent={focusedComponent}\n              columnId={selectionColumnId}\n              stickyState={stickyState}\n              {...getAnalyticsMetadataAttribute({\n                action: 'selectAll',\n              } as Partial<GeneratedAnalyticsMetadataTableSelectAll>)}\n            >\n              {getSelectAllProps ? (\n                <SelectionControl\n                  onFocusDown={event => {\n                    onFocusMove!(event.target as HTMLElement, -1, +1);\n                  }}\n                  focusedComponent={focusedComponent}\n                  {...getSelectAllProps()}\n                  {...(sticky ? { tabIndex: -1 } : {})}\n                />\n              ) : (\n                <ScreenreaderOnly>{singleSelectionHeaderAriaLabel}</ScreenreaderOnly>\n              )}\n              <Divider className={styles['resize-divider']} />\n            </TableThElement>\n          ) : null}\n\n          {columnDefinitions.map((column, colIndex) => {\n            const columnId = getColumnKey(column, colIndex);\n            return (\n              <TableHeaderCell\n                key={columnId}\n                style={getColumnStyles(sticky, columnId)}\n                className={headerCellClass}\n                tabIndex={sticky ? -1 : 0}\n                focusedComponent={focusedComponent}\n                column={column}\n                activeSortingColumn={sortingColumn}\n                sortingDescending={sortingDescending}\n                sortingDisabled={sortingDisabled}\n                wrapLines={wrapLines}\n                hidden={hidden}\n                colIndex={selectionType ? colIndex + 1 : colIndex}\n                columnId={columnId}\n                updateColumn={updateColumn}\n                onResizeFinish={() => onResizeFinish(columnWidths)}\n                resizableColumns={resizableColumns}\n                onClick={detail => {\n                  setLastUserAction('sorting');\n                  fireNonCancelableEvent(onSortingChange, detail);\n                }}\n                isEditable={!!column.editConfig}\n                stickyState={stickyState}\n                cellRef={node => setCell(sticky, columnId, node)}\n                tableRole={tableRole}\n                resizerRoleDescription={resizerRoleDescription}\n                // Expandable option is only applicable to the first data column of the table.\n                // When present, the header content receives extra padding to match the first offset in the data cells.\n                isExpandable={colIndex === 0 && isExpandable}\n              />\n            );\n          })}\n        </tr>\n      </thead>\n    );\n  }\n);\n\nexport default Thead;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getLogicalBoundingClientRect } from '@cloudscape-design/component-toolkit/internal';\n\nimport { getOverflowParents } from '../internal/utils/scrollable-containers';\n\n/**\n * @param containerRef ref to surrounding container with sticky element\n * @param stickyRef ref to sticky element scrolled inside of containerRef\n * @param containerOffset offset between header and container\n *                        originating borders or paddings\n */\nexport default function stickyScrolling(\n  containerRef: React.MutableRefObject<HTMLElement | null>,\n  stickyRef: React.MutableRefObject<HTMLElement | null>\n) {\n  const scrollToTop = () => {\n    if (!containerRef.current || !stickyRef.current) {\n      return;\n    }\n    const scrollingOffset = calculateScrollingOffset(containerRef.current, stickyRef.current);\n    if (scrollingOffset > 0) {\n      scrollUpBy(scrollingOffset, containerRef.current);\n    }\n  };\n  const scrollToItem = (item: HTMLElement | null) => {\n    if (!item || !containerRef.current || !stickyRef.current) {\n      return;\n    }\n    const stickyBottom = getLogicalBoundingClientRect(stickyRef.current).insetBlockEnd;\n    const scrollingOffset = stickyBottom - getLogicalBoundingClientRect(item).insetBlockStart;\n    if (scrollingOffset > 0) {\n      scrollUpBy(scrollingOffset, containerRef.current);\n    }\n  };\n  return {\n    scrollToTop,\n    scrollToItem,\n  };\n}\n\n/**\n * Calculates the scrolling offset between container and\n * sticky element with container offset caused by border\n * or padding\n * @param container\n * @param sticky element inside of container\n * @param containerOffset caused by borders or paddings\n */\nexport function calculateScrollingOffset(container: HTMLElement, sticky: HTMLElement) {\n  const stickyRect = getLogicalBoundingClientRect(sticky);\n  const containerRect = getLogicalBoundingClientRect(container);\n  return stickyRect.insetBlockStart - containerRect.insetBlockStart;\n}\n\n/**\n * Scrolls suitable parent of container up by amount of pixels\n * @param amount pixels to be scrolled up\n * @param container used to determine next parent element for scrolling\n */\nexport function scrollUpBy(amount: number, container: HTMLElement) {\n  const parent = getOverflowParents(container);\n  if (parent.length) {\n    // Take next overflow parent in stack\n    parent[0].scrollTop -= amount;\n  } else {\n    window.scrollTo({ top: window.pageYOffset - amount });\n  }\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { RefObject, useCallback, useLayoutEffect } from 'react';\n\nimport { useResizeObserver } from '@cloudscape-design/component-toolkit/internal';\n\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport stickyScrolling, { calculateScrollingOffset, scrollUpBy } from './sticky-scrolling';\n\nexport const useStickyHeader = (\n  tableRef: RefObject<HTMLElement>,\n  theadRef: RefObject<HTMLElement>,\n  secondaryTheadRef: RefObject<HTMLElement>,\n  secondaryTableRef: RefObject<HTMLElement>,\n  tableWrapperRef: RefObject<HTMLElement>\n) => {\n  const isMobile = useMobile();\n  // Sync the sizes of the column header copies in the sticky header with the originals\n  const syncColumnHeaderWidths = useCallback(() => {\n    if (\n      tableRef.current &&\n      theadRef.current &&\n      secondaryTheadRef.current &&\n      secondaryTableRef.current &&\n      tableWrapperRef.current\n    ) {\n      // Using the tableRef offsetWidth instead of the theadRef because in VR\n      // the tableRef adds extra padding to the table and by default the theadRef will have a width\n      // without the padding and will make the sticky header width incorrect.\n      secondaryTableRef.current.style.inlineSize = `${tableRef.current.offsetWidth}px`;\n\n      tableWrapperRef.current.style.marginBlockStart = `-${theadRef.current.offsetHeight}px`;\n    }\n  }, [theadRef, secondaryTheadRef, secondaryTableRef, tableWrapperRef, tableRef]);\n  useLayoutEffect(() => {\n    syncColumnHeaderWidths();\n  });\n  useResizeObserver(theadRef, syncColumnHeaderWidths);\n  const scrollToTop = () => {\n    if (!isMobile && theadRef.current && secondaryTheadRef.current && tableWrapperRef.current) {\n      const scrollDist = calculateScrollingOffset(theadRef.current, secondaryTheadRef.current);\n      if (scrollDist > 0) {\n        scrollUpBy(scrollDist, tableWrapperRef.current);\n      }\n    }\n  };\n  const { scrollToItem } = stickyScrolling(tableWrapperRef, secondaryTheadRef);\n  const scrollToRow = (itemNode: HTMLElement | null) => {\n    if (!isMobile) {\n      scrollToItem(itemNode);\n    }\n  };\n  return { scrollToRow, scrollToTop };\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef, useContext, useImperativeHandle, useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { StickyHeaderContext } from '../container/use-sticky-header';\nimport { getVisualContextClassname } from '../internal/components/visual-context';\nimport { TableProps } from './interfaces';\nimport { getTableRoleProps, TableRole } from './table-role';\nimport Thead, { TheadProps } from './thead';\nimport { useStickyHeader } from './use-sticky-header';\n\nimport styles from './styles.css.js';\n\nexport interface StickyHeaderRef {\n  scrollToTop(): void;\n  scrollToRow(node: null | HTMLElement): void;\n  setFocus(focusId: null | string): void;\n}\n\ninterface StickyHeaderProps {\n  variant: TableProps.Variant;\n  theadProps: TheadProps;\n  wrapperRef: React.RefObject<HTMLDivElement>;\n  theadRef: React.RefObject<HTMLTableRowElement>;\n  secondaryWrapperRef: React.RefObject<HTMLDivElement>;\n  tableRef: React.RefObject<HTMLTableElement>;\n  onScroll?: React.UIEventHandler<HTMLDivElement>;\n  contentDensity?: 'comfortable' | 'compact';\n  tableHasHeader?: boolean;\n  tableRole: TableRole;\n}\n\nexport default forwardRef(StickyHeader);\n\nfunction StickyHeader(\n  {\n    variant,\n    theadProps,\n    wrapperRef,\n    theadRef,\n    secondaryWrapperRef,\n    onScroll,\n    tableRef,\n    tableHasHeader,\n    contentDensity,\n    tableRole,\n  }: StickyHeaderProps,\n  ref: React.Ref<StickyHeaderRef>\n) {\n  const secondaryTheadRef = useRef<HTMLTableRowElement>(null);\n  const secondaryTableRef = useRef<HTMLTableElement>(null);\n  const { isStuck } = useContext(StickyHeaderContext);\n\n  const [focusedComponent, setFocusedComponent] = useState<null | string>(null);\n  const { scrollToRow, scrollToTop } = useStickyHeader(\n    tableRef,\n    theadRef,\n    secondaryTheadRef,\n    secondaryTableRef,\n    wrapperRef\n  );\n\n  useImperativeHandle(ref, () => ({\n    scrollToTop,\n    scrollToRow,\n    setFocus: setFocusedComponent,\n  }));\n\n  return (\n    <div\n      className={clsx(styles['header-secondary'], styles[`variant-${variant}`], {\n        [styles.stuck]: isStuck,\n        [styles['table-has-header']]: tableHasHeader,\n      })}\n      aria-hidden={true}\n      // Prevents receiving focus in Firefox. Focus on the overflowing table is sufficient\n      // to scroll the table horizontally\n      tabIndex={-1}\n      ref={secondaryWrapperRef}\n      onScroll={onScroll}\n    >\n      <table\n        className={clsx(\n          styles.table,\n          styles['table-layout-fixed'],\n          contentDensity === 'compact' && getVisualContextClassname('compact-table')\n        )}\n        ref={secondaryTableRef}\n        {...getTableRoleProps({ tableRole })}\n      >\n        <Thead\n          ref={secondaryTheadRef}\n          sticky={true}\n          stuck={isStuck}\n          focusedComponent={focusedComponent}\n          {...theadProps}\n        />\n      </table>\n    </div>\n  );\n}\n","\n    import './styles.scoped.css';\n    export default {\n  \"sticky-scrollbar\": \"awsui_sticky-scrollbar_faqt8_xzs7h_97\",\n  \"sticky-scrollbar-content\": \"awsui_sticky-scrollbar-content_faqt8_xzs7h_106\",\n  \"sticky-scrollbar-visible\": \"awsui_sticky-scrollbar-visible_faqt8_xzs7h_109\",\n  \"sticky-scrollbar-native-invisible\": \"awsui_sticky-scrollbar-native-invisible_faqt8_xzs7h_112\",\n  \"sticky-scrollbar-offset\": \"awsui_sticky-scrollbar-offset_faqt8_xzs7h_115\",\n  \"is-visual-refresh\": \"awsui_is-visual-refresh_faqt8_xzs7h_118\"\n};\n  ","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { RefObject, useEffect, useState } from 'react';\nimport { ResizeObserver } from '@juggle/resize-observer';\n\nimport { getLogicalBoundingClientRect } from '@cloudscape-design/component-toolkit/internal';\n\nimport globalVars from '../../internal/styles/global-vars';\nimport { browserScrollbarSize } from '../../internal/utils/browser-scrollbar-size';\nimport { getContainingBlock } from '../../internal/utils/dom';\nimport { getOverflowParents } from '../../internal/utils/scrollable-containers';\n\nimport styles from './styles.css.js';\n\nexport const updatePosition = (\n  tableEl: HTMLElement | null,\n  wrapperEl: HTMLElement | null,\n  scrollbarEl: HTMLElement | null,\n  scrollbarContentEl: HTMLElement | null,\n  inScrollableContainer: boolean\n) => {\n  if (!tableEl || !scrollbarEl || !wrapperEl) {\n    return;\n  }\n\n  const { inlineSize: tableInlineSize } = getLogicalBoundingClientRect(tableEl);\n  const { inlineSize: wrapperInlineSize } = getLogicalBoundingClientRect(wrapperEl);\n\n  // using 15 px as a height of transparent scrollbar on mac\n  const scrollbarHeight = browserScrollbarSize().height;\n  const areaIsScrollable = tableInlineSize > wrapperInlineSize;\n\n  if (!areaIsScrollable) {\n    scrollbarEl.classList.remove(styles['sticky-scrollbar-visible']);\n  } else {\n    // when scrollbar is not displayed scrollLeft property cannot be set by useScrollSync\n    // that's why syncing it separately\n    if (!scrollbarEl.classList.contains(styles['sticky-scrollbar-visible'])) {\n      requestAnimationFrame(() => {\n        scrollbarEl.scrollLeft = wrapperEl.scrollLeft;\n      });\n    }\n\n    scrollbarEl.classList.add(styles['sticky-scrollbar-visible']);\n    if (!scrollbarHeight) {\n      /* istanbul ignore next: covered by screenshot tests */\n      scrollbarEl.classList.add(styles['sticky-scrollbar-native-invisible']);\n    }\n  }\n\n  if (scrollbarHeight && scrollbarEl && scrollbarContentEl) {\n    scrollbarEl.style.blockSize = `${scrollbarHeight}px`;\n    scrollbarContentEl.style.blockSize = `${scrollbarHeight}px`;\n  }\n\n  if (tableEl && wrapperEl && scrollbarContentEl && scrollbarEl) {\n    const wrapperElRect = getLogicalBoundingClientRect(wrapperEl);\n    const tableElRect = getLogicalBoundingClientRect(tableEl);\n    scrollbarEl.style.inlineSize = `${wrapperElRect.inlineSize}px`;\n    scrollbarContentEl.style.inlineSize = `${tableElRect.inlineSize}px`;\n\n    // when using sticky scrollbars in containers\n    // we agreed to ignore dynamic bottom calculations for footer overlap\n    scrollbarEl.style.insetBlockEnd = inScrollableContainer\n      ? '0px'\n      : `var(${globalVars.stickyVerticalBottomOffset}, 0px)`;\n  }\n};\n\nexport function useStickyScrollbar(\n  scrollbarRef: RefObject<HTMLDivElement>,\n  scrollbarContentRef: RefObject<HTMLDivElement>,\n  tableRef: RefObject<HTMLTableElement>,\n  wrapperRef: RefObject<HTMLDivElement>,\n  offsetScrollbar: boolean\n) {\n  const [inScrollableContainer, setInScrollableContainer] = useState(false);\n\n  const wrapperEl = wrapperRef.current;\n  useEffect(() => {\n    if (wrapperEl) {\n      setInScrollableContainer(!!getContainingBlock(wrapperEl) || !!getOverflowParents(wrapperEl)[0]);\n    }\n  }, [wrapperEl]);\n\n  // Update scrollbar position wrapper or table size change.\n  useEffect(() => {\n    if (wrapperRef.current && tableRef.current) {\n      const observer = new ResizeObserver(() => {\n        if (scrollbarContentRef.current) {\n          updatePosition(\n            tableRef.current,\n            wrapperRef.current,\n            scrollbarRef.current,\n            scrollbarContentRef.current,\n            inScrollableContainer\n          );\n        }\n      });\n      // Scrollbar width must be in sync with wrapper width.\n      observer.observe(wrapperRef.current);\n      // Scrollbar content width must be in sync with table width.\n      observer.observe(tableRef.current);\n      return () => {\n        observer.disconnect();\n      };\n    }\n  }, [scrollbarContentRef, scrollbarRef, tableRef, wrapperRef, inScrollableContainer, offsetScrollbar]);\n\n  // Update scrollbar position when window resizes (vertically).\n  useEffect(() => {\n    const resizeHandler = () => {\n      updatePosition(\n        tableRef.current,\n        wrapperRef.current,\n        scrollbarRef.current,\n        scrollbarContentRef.current,\n        inScrollableContainer\n      );\n    };\n    resizeHandler();\n    window.addEventListener('resize', resizeHandler);\n    return () => {\n      window.removeEventListener('resize', resizeHandler);\n    };\n  }, [tableRef, wrapperRef, scrollbarRef, scrollbarContentRef, inScrollableContainer]);\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef } from 'react';\nimport clsx from 'clsx';\n\nimport { useMergeRefs } from '../../internal/hooks/use-merge-refs';\nimport { useVisualRefresh } from '../../internal/hooks/use-visual-mode';\nimport { browserScrollbarSize } from '../../internal/utils/browser-scrollbar-size';\nimport { useStickyScrollbar } from './use-sticky-scrollbar';\n\nimport styles from './styles.css.js';\n\ninterface StickyScrollbarProps {\n  wrapperRef: React.RefObject<HTMLDivElement>;\n  tableRef: React.RefObject<HTMLTableElement>;\n  onScroll?: React.UIEventHandler<HTMLDivElement>;\n  hasStickyColumns?: boolean;\n}\n\nexport default forwardRef(StickyScrollbar);\n\nfunction StickyScrollbar(\n  { wrapperRef, tableRef, onScroll, hasStickyColumns }: StickyScrollbarProps,\n  ref: React.Ref<HTMLDivElement>\n) {\n  const isVisualRefresh = useVisualRefresh();\n  const scrollbarRef = React.useRef<HTMLDivElement>(null);\n  const scrollbarContentRef = React.useRef<HTMLDivElement>(null);\n  const mergedRef = useMergeRefs(ref, scrollbarRef);\n\n  /**\n   * If the height of the scrollbar is 0, we're likely on a platform that uses\n   * overlay scrollbars (e.g. Mac).\n   */\n  const offsetScrollbar = hasStickyColumns || browserScrollbarSize().height === 0;\n\n  useStickyScrollbar(scrollbarRef, scrollbarContentRef, tableRef, wrapperRef, offsetScrollbar);\n  return (\n    <div\n      ref={mergedRef}\n      className={clsx(\n        styles['sticky-scrollbar'],\n        offsetScrollbar && styles['sticky-scrollbar-offset'],\n        isVisualRefresh && styles['is-visual-refresh']\n      )}\n      onScroll={onScroll}\n    >\n      <div ref={scrollbarContentRef} className={styles['sticky-scrollbar-content']} />\n    </div>\n  );\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nexport function getClosestCell(element: Element) {\n  return element.closest('td,th') as null | HTMLTableCellElement;\n}\n\nexport function isElementDisabled(element: HTMLElement) {\n  if (element instanceof HTMLInputElement || element instanceof HTMLButtonElement) {\n    return element.disabled;\n  }\n  return false;\n}\n\n/**\n * Returns true if the target element or one of its parents is a dialog or is marked with data-awsui-table-suppress-navigation attribute.\n * This is used to suppress navigation for interactive content without a need to use a custom suppression check.\n */\nexport function defaultIsSuppressed(target: Element) {\n  let current: null | Element = target;\n  while (current) {\n    // Stop checking for parents upon reaching the cell element as the function only aims at the cell content.\n    if (isTableCell(current)) {\n      return false;\n    }\n    if (\n      current.getAttribute('role') === 'dialog' ||\n      current.getAttribute('data-awsui-table-suppress-navigation') === 'true'\n    ) {\n      return true;\n    }\n    current = current.parentElement;\n  }\n  return false;\n}\n\n/**\n * Finds the closest row to the targetAriaRowIndex+delta in the direction of delta.\n */\nexport function findTableRowByAriaRowIndex(table: HTMLTableElement, targetAriaRowIndex: number, delta: number) {\n  let targetRow: null | HTMLTableRowElement = null;\n  const rowElements = Array.from(table.querySelectorAll('tr[aria-rowindex]'));\n  if (delta < 0) {\n    rowElements.reverse();\n  }\n  for (const element of rowElements) {\n    const rowIndex = parseInt(element.getAttribute('aria-rowindex') ?? '');\n    targetRow = element as HTMLTableRowElement;\n\n    if (rowIndex === targetAriaRowIndex) {\n      break;\n    }\n    if (delta >= 0 && rowIndex > targetAriaRowIndex) {\n      break;\n    }\n    if (delta < 0 && rowIndex < targetAriaRowIndex) {\n      break;\n    }\n  }\n  return targetRow;\n}\n\n/**\n * Finds the closest column to the targetAriaColIndex+delta in the direction of delta.\n */\nexport function findTableRowCellByAriaColIndex(\n  tableRow: HTMLTableRowElement,\n  targetAriaColIndex: number,\n  delta: number\n) {\n  let targetCell: null | HTMLTableCellElement = null;\n  const cellElements = Array.from(tableRow.querySelectorAll('td[aria-colindex],th[aria-colindex]'));\n  if (delta < 0) {\n    cellElements.reverse();\n  }\n  for (const element of cellElements) {\n    const columnIndex = parseInt(element.getAttribute('aria-colindex') ?? '');\n    targetCell = element as HTMLTableCellElement;\n\n    if (columnIndex === targetAriaColIndex) {\n      break;\n    }\n    if (delta >= 0 && columnIndex > targetAriaColIndex) {\n      break;\n    }\n    if (delta < 0 && columnIndex < targetAriaColIndex) {\n      break;\n    }\n  }\n  return targetCell;\n}\n\nexport function isTableCell(element: Element) {\n  return element.tagName === 'TD' || element.tagName === 'TH';\n}\n\nexport function focusNextElement(element: null | HTMLElement) {\n  if (element) {\n    // Table cells are not focusable by default (tabIndex=undefined) and cell.focus() is ignored.\n    // To force focusing we have to imperatively set tabIndex to -1. When focused, the grid navigation\n    // will update the tabIndex to 0 if the cell gets focused or set it to undefined if the cell content\n    // gets focused instead.\n    // We cannot make cells have tabIndex=-1 by default due to an associated bug with text selection, see: PR 2158.\n    if (isTableCell(element)) {\n      element.tabIndex = -1;\n    }\n    element.focus();\n  }\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useRef } from 'react';\nimport { useEffect, useMemo } from 'react';\n\nimport { useStableCallback } from '@cloudscape-design/component-toolkit/internal';\n\nimport { getAllFocusables } from '../../internal/components/focus-lock/utils';\nimport {\n  SingleTabStopNavigationAPI,\n  SingleTabStopNavigationProvider,\n} from '../../internal/context/single-tab-stop-navigation-context';\nimport { KeyCode } from '../../internal/keycode';\nimport handleKey, { isEventLike } from '../../internal/utils/handle-key';\nimport { nodeBelongs } from '../../internal/utils/node-belongs';\nimport { FocusedCell, GridNavigationProps } from './interfaces';\nimport {\n  defaultIsSuppressed,\n  findTableRowByAriaRowIndex,\n  findTableRowCellByAriaColIndex,\n  focusNextElement,\n  getClosestCell,\n  isElementDisabled,\n  isTableCell,\n} from './utils';\n\n/**\n * Makes table navigable with keyboard commands.\n * See grid-navigation.md\n */\nexport function GridNavigationProvider({ keyboardNavigation, pageSize, getTable, children }: GridNavigationProps) {\n  const navigationAPI = useRef<SingleTabStopNavigationAPI>(null);\n  const gridNavigation = useMemo(() => new GridNavigationProcessor(navigationAPI), []);\n\n  const getTableStable = useStableCallback(getTable);\n\n  // Initialize the processor with the table container assuming it is mounted synchronously and only once.\n  useEffect(() => {\n    if (keyboardNavigation) {\n      const table = getTableStable();\n      table && gridNavigation.init(table);\n    }\n    return () => gridNavigation.cleanup();\n  }, [keyboardNavigation, gridNavigation, getTableStable]);\n\n  // Notify the processor of the props change.\n  useEffect(() => {\n    gridNavigation.update({ pageSize });\n  }, [gridNavigation, pageSize]);\n\n  // Notify the processor of the new render.\n  useEffect(() => {\n    if (keyboardNavigation) {\n      gridNavigation.refresh();\n    }\n  });\n\n  return (\n    <SingleTabStopNavigationProvider\n      ref={navigationAPI}\n      navigationActive={keyboardNavigation}\n      getNextFocusTarget={gridNavigation.getNextFocusTarget}\n      isElementSuppressed={gridNavigation.isElementSuppressed}\n      onRegisterFocusable={gridNavigation.onRegisterFocusable}\n      onUnregisterActive={gridNavigation.onUnregisterActive}\n    >\n      {children}\n    </SingleTabStopNavigationProvider>\n  );\n}\n\n/**\n * This helper encapsulates the grid navigation behaviors which are:\n * 1. Responding to keyboard commands and moving the focus accordingly;\n * 2. Muting table interactive elements for only one to be user-focusable at a time;\n * 3. Suppressing the above behaviors when focusing an element inside a dialog or when instructed explicitly.\n */\nclass GridNavigationProcessor {\n  // Props\n  private _pageSize = 0;\n  private _table: null | HTMLTableElement = null;\n  private _navigationAPI: { current: null | SingleTabStopNavigationAPI };\n\n  // State\n  private focusedCell: null | FocusedCell = null;\n  private keepUserIndex = false;\n\n  constructor(navigationAPI: { current: null | SingleTabStopNavigationAPI }) {\n    this._navigationAPI = navigationAPI;\n  }\n\n  public init(table: HTMLTableElement) {\n    this._table = table;\n\n    this.table.addEventListener('focusin', this.onFocusin);\n    this.table.addEventListener('keydown', this.onKeydown);\n\n    this.cleanup = () => {\n      this.table.removeEventListener('focusin', this.onFocusin);\n      this.table.removeEventListener('keydown', this.onKeydown);\n    };\n  }\n\n  public cleanup() {\n    // Do nothing before initialized.\n  }\n\n  public update({ pageSize }: { pageSize: number }) {\n    this._pageSize = pageSize;\n  }\n\n  public refresh() {\n    // Timeout ensures the newly rendered content elements are registered.\n    setTimeout(() => {\n      if (this._table) {\n        // Update focused cell indices in case table rows, columns, or firstIndex change.\n        this.updateFocusedCell(this.focusedCell?.element);\n        this._navigationAPI.current?.updateFocusTarget();\n      }\n    }, 0);\n  }\n\n  public onRegisterFocusable = (focusableElement: HTMLElement) => {\n    // When newly registered element belongs to the focused cell the focus must transition to it.\n    const focusedElement = this.focusedCell?.element;\n    if (focusedElement && isTableCell(focusedElement) && focusedElement.contains(focusableElement)) {\n      // Scroll is unnecessary when moving focus from a cell to element within the cell.\n      focusableElement.focus({ preventScroll: true });\n    }\n  };\n\n  public onUnregisterActive = () => {\n    // If the focused cell appears to be no longer attached to the table we need to re-apply\n    // focus to a cell with the same or closest position.\n    if (this.focusedCell && !nodeBelongs(this.table, this.focusedCell.element)) {\n      this.moveFocusBy(this.focusedCell, { x: 0, y: 0 });\n    }\n  };\n\n  public getNextFocusTarget = () => {\n    const cell = this.focusedCell;\n    const firstTableCell = this.table.querySelector('td,th') as null | HTMLTableCellElement;\n\n    // A single element of the table is made user-focusable.\n    // It defaults to the first interactive element of the first cell or the first cell itself otherwise.\n    let focusTarget: null | HTMLElement =\n      (firstTableCell && this.getFocusablesFrom(firstTableCell)[0]) ?? firstTableCell;\n\n    // When a navigation-focused element is present in the table it is used for user-navigation instead.\n    if (cell) {\n      focusTarget = this.getNextFocusable(cell, { x: 0, y: 0 });\n    }\n\n    return focusTarget;\n  };\n\n  public isElementSuppressed = (element: null | Element) => {\n    // Omit calculation as irrelevant until the table receives focus.\n    if (!this.focusedCell) {\n      return false;\n    }\n    return !element || defaultIsSuppressed(element);\n  };\n\n  private get pageSize() {\n    return this._pageSize;\n  }\n\n  private get table(): HTMLTableElement {\n    if (!this._table) {\n      throw new Error('Invariant violation: GridNavigationProcessor is used before initialization.');\n    }\n    return this._table;\n  }\n\n  private onFocusin = (event: FocusEvent) => {\n    if (!(event.target instanceof HTMLElement)) {\n      return;\n    }\n\n    this.updateFocusedCell(event.target);\n    if (!this.focusedCell) {\n      return;\n    }\n\n    this._navigationAPI.current?.updateFocusTarget();\n\n    // Focusing on cell is not eligible when it contains focusable elements in the content.\n    // If content focusables are available - move the focus to the first one.\n    const focusedElement = this.focusedCell.element;\n    const nextTarget = isTableCell(focusedElement) ? this.getFocusablesFrom(focusedElement)[0] : null;\n    if (nextTarget) {\n      // Scroll is unnecessary when moving focus from a cell to element within the cell.\n      nextTarget.focus({ preventScroll: true });\n    } else {\n      this.keepUserIndex = false;\n    }\n  };\n\n  private onKeydown = (event: KeyboardEvent) => {\n    if (!this.focusedCell) {\n      return;\n    }\n\n    const keys = [\n      KeyCode.up,\n      KeyCode.down,\n      KeyCode.left,\n      KeyCode.right,\n      KeyCode.pageUp,\n      KeyCode.pageDown,\n      KeyCode.home,\n      KeyCode.end,\n    ];\n    const ctrlKey = event.ctrlKey ? 1 : 0;\n    const altKey = event.altKey ? 1 : 0;\n    const shiftKey = event.shiftKey ? 1 : 0;\n    const metaKey = event.metaKey ? 1 : 0;\n    const modifiersPressed = ctrlKey + altKey + shiftKey + metaKey;\n    const invalidModifierCombination =\n      (modifiersPressed && !event.ctrlKey) ||\n      (event.ctrlKey && event.keyCode !== KeyCode.home && event.keyCode !== KeyCode.end);\n\n    if (\n      invalidModifierCombination ||\n      this.isElementSuppressed(document.activeElement) ||\n      !this.isRegistered(document.activeElement) ||\n      keys.indexOf(event.keyCode) === -1\n    ) {\n      return;\n    }\n\n    const from = this.focusedCell;\n    event.preventDefault();\n\n    isEventLike(event) &&\n      handleKey(event, {\n        onBlockStart: () => this.moveFocusBy(from, { y: -1, x: 0 }),\n        onBlockEnd: () => this.moveFocusBy(from, { y: 1, x: 0 }),\n        onInlineStart: () => this.moveFocusBy(from, { y: 0, x: -1 }),\n        onInlineEnd: () => this.moveFocusBy(from, { y: 0, x: 1 }),\n        onPageUp: () => this.moveFocusBy(from, { y: -this.pageSize, x: 0 }),\n        onPageDown: () => this.moveFocusBy(from, { y: this.pageSize, x: 0 }),\n        onHome: () =>\n          event.ctrlKey\n            ? this.moveFocusBy(from, { y: -Infinity, x: -Infinity })\n            : this.moveFocusBy(from, { y: 0, x: -Infinity }),\n        onEnd: () =>\n          event.ctrlKey\n            ? this.moveFocusBy(from, { y: Infinity, x: Infinity })\n            : this.moveFocusBy(from, { y: 0, x: Infinity }),\n      });\n  };\n\n  private moveFocusBy(cell: FocusedCell, delta: { x: number; y: number }) {\n    // For vertical moves preserve column- and element indices set by user.\n    // It allows keeping indices while moving over disabled actions or cells with colspan > 1.\n    if (delta.y !== 0 && delta.x === 0) {\n      this.keepUserIndex = true;\n    }\n    focusNextElement(this.getNextFocusable(cell, delta));\n  }\n\n  private isRegistered(element: null | Element): boolean {\n    return !element || (this._navigationAPI.current?.isRegistered(element) ?? false);\n  }\n\n  private updateFocusedCell(focusedElement?: HTMLElement): void {\n    if (!focusedElement) {\n      return;\n    }\n\n    const cellElement = getClosestCell(focusedElement);\n    const rowElement = cellElement?.closest('tr');\n    if (!cellElement || !rowElement) {\n      return;\n    }\n\n    const colIndex = parseInt(cellElement.getAttribute('aria-colindex') ?? '');\n    const rowIndex = parseInt(rowElement.getAttribute('aria-rowindex') ?? '');\n    if (isNaN(colIndex) || isNaN(rowIndex)) {\n      return;\n    }\n\n    const cellFocusables = this.getFocusablesFrom(cellElement);\n    const elementIndex = cellFocusables.indexOf(focusedElement);\n\n    const prevColIndex = this.focusedCell?.colIndex ?? -1;\n    const prevElementIndex = this.focusedCell?.elementIndex ?? -1;\n    this.focusedCell = {\n      rowIndex,\n      colIndex: this.keepUserIndex && prevColIndex !== -1 ? prevColIndex : colIndex,\n      elementIndex: this.keepUserIndex && prevElementIndex !== -1 ? prevElementIndex : elementIndex,\n      element: focusedElement,\n    };\n  }\n\n  private getNextFocusable(from: FocusedCell, delta: { y: number; x: number }) {\n    // Find next row to move focus into (can be null if the top/bottom is reached).\n    const targetAriaRowIndex = from.rowIndex + delta.y;\n    const targetRow = findTableRowByAriaRowIndex(this.table, targetAriaRowIndex, delta.y);\n    if (!targetRow) {\n      return null;\n    }\n\n    // Return next interactive cell content element if available.\n    const cellElement = getClosestCell(from.element);\n    const cellFocusables = cellElement ? this.getFocusablesFrom(cellElement) : [];\n    const nextElementIndex = from.elementIndex + delta.x;\n    const isValidDirection = !!delta.x;\n    const isValidIndex = from.elementIndex !== -1 && 0 <= nextElementIndex && nextElementIndex < cellFocusables.length;\n    const isTargetDifferent = from.element !== cellFocusables[nextElementIndex];\n    if (isValidDirection && isValidIndex && isTargetDifferent) {\n      return cellFocusables[nextElementIndex];\n    }\n\n    // Find next cell to focus or move focus into (can be null if the left/right edge is reached).\n    const targetAriaColIndex = from.colIndex + delta.x;\n    const targetCell = findTableRowCellByAriaColIndex(targetRow, targetAriaColIndex, delta.x);\n    if (!targetCell) {\n      return null;\n    }\n\n    // When target cell matches the current cell it means we reached the left or right boundary.\n    if (targetCell === cellElement && delta.x !== 0) {\n      return null;\n    }\n\n    const targetCellFocusables = this.getFocusablesFrom(targetCell);\n\n    // When delta.x = 0 keep element index if possible.\n    let focusIndex = from.elementIndex;\n    // Use first element index when moving to the right or to extreme left.\n    if ((isFinite(delta.x) && delta.x > 0) || delta.x === -Infinity) {\n      focusIndex = 0;\n    }\n    // Use last element index when moving to the left or to extreme right.\n    if ((isFinite(delta.x) && delta.x < 0) || delta.x === Infinity) {\n      focusIndex = targetCellFocusables.length - 1;\n    }\n\n    return targetCellFocusables[focusIndex] ?? targetCell;\n  }\n\n  private getFocusablesFrom(target: HTMLElement) {\n    const isElementRegistered = (element: Element) => this._navigationAPI.current?.isRegistered(element);\n    return getAllFocusables(target).filter(el => isElementRegistered(el) && !isElementDisabled(el));\n  }\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useContext } from 'react';\nimport clsx from 'clsx';\n\nimport { CollectionLabelContext } from '../internal/context/collection-label-context';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\n\nimport styles from './styles.css.js';\n\ninterface ToolsHeaderProps {\n  header: React.ReactNode;\n  filter?: React.ReactNode;\n  pagination?: React.ReactNode;\n  preferences?: React.ReactNode;\n  setLastUserAction?: (name: string) => void;\n}\n\nexport default function ToolsHeader({ header, filter, pagination, preferences, setLastUserAction }: ToolsHeaderProps) {\n  const [breakpoint, ref] = useContainerBreakpoints(['xs']);\n  const isHeaderString = typeof header === 'string';\n  const assignHeaderId = useContext(CollectionLabelContext).assignId;\n  const headingId = useUniqueId('heading');\n  if (assignHeaderId !== undefined && isHeaderString) {\n    assignHeaderId(headingId);\n  }\n  const isSmall = breakpoint === 'default';\n  const hasTools = filter || pagination || preferences;\n  return (\n    <>\n      {isHeaderString ? <span id={headingId}>{header}</span> : header}\n      {hasTools && (\n        <div ref={ref} className={clsx(styles.tools, isSmall && styles['tools-small'])}>\n          {filter && (\n            <div\n              className={styles['tools-filtering']}\n              onClickCapture={() => setLastUserAction?.('filter')}\n              onKeyDownCapture={() => setLastUserAction?.('filter')}\n            >\n              {filter}\n            </div>\n          )}\n          <div className={styles['tools-align-right']}>\n            {pagination && (\n              <div className={styles['tools-pagination']} onClickCapture={() => setLastUserAction?.('pagination')}>\n                {pagination}\n              </div>\n            )}\n            {preferences && (\n              <div className={styles['tools-preferences']} onClickCapture={() => setLastUserAction?.('preferences')}>\n                {preferences}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { RefObject, useCallback, useEffect, useMemo } from 'react';\n\nimport { scrollElementIntoView } from '../internal/utils/scrollable-containers';\nimport { TableProps } from './interfaces';\n\nfunction iterateTableCells<T extends HTMLElement>(\n  table: T,\n  func: (cell: HTMLTableCellElement, rowIndex: number, columnIndex: number) => void\n) {\n  table.querySelectorAll('tr').forEach((row: HTMLTableRowElement, rowIndex: number) => {\n    row.querySelectorAll('td').forEach((cell, cellIndex) => {\n      func(cell, rowIndex, cellIndex);\n    });\n  });\n}\n\ninterface TableFocusNavigationProps<T> {\n  enableKeyboardNavigation?: boolean;\n  selectionType: TableProps['selectionType'];\n  tableRoot: RefObject<HTMLTableElement>;\n  columnDefinitions: Readonly<T[]>;\n  numRows: number;\n}\n\n/**\n * This hook is used to navigate between table cells using the keyboard arrow keys.\n * All the functionality is implemented in the hook, so the table component does not\n * need to implement any keyboard event handlers.\n * @param enable - Toggle functionality of the hook\n * @param tableRoot - A ref to a table container. Ideally the root element of the table (<table>); tbody is also acceptable.\n * @param columnDefinitions - The column definitions for the table.\n * @param numRows - The number of rows in the table.\n */\nfunction useTableFocusNavigation<T extends { editConfig?: TableProps.EditConfig<any> }>({\n  enableKeyboardNavigation,\n  selectionType,\n  tableRoot,\n  columnDefinitions,\n  numRows,\n}: TableFocusNavigationProps<T>) {\n  const focusableColumns = useMemo(() => {\n    const cols = columnDefinitions.map(column => !!column.editConfig);\n    if (selectionType) {\n      cols.unshift(false);\n    }\n    return cols;\n  }, [columnDefinitions, selectionType]);\n\n  const maxColumnIndex = focusableColumns.length - 1;\n  const minColumnIndex = selectionType ? 1 : 0;\n\n  const focusCell = useCallback(\n    (rowIndex: number, columnIndex: number) => {\n      if (tableRoot?.current) {\n        iterateTableCells(tableRoot.current, (cell, rIndex, cIndex) => {\n          if (rIndex === rowIndex && cIndex === columnIndex) {\n            const editButton = cell.querySelector('button:last-child') as HTMLButtonElement | null;\n\n            if (editButton) {\n              editButton.focus?.();\n              scrollElementIntoView(editButton);\n            }\n          }\n        });\n      }\n    },\n    [tableRoot]\n  );\n\n  const shiftFocus = useCallback(\n    (vertical: -1 | 0 | 1, horizontal: -1 | 0 | 1) => {\n      const focusedCell = tableRoot.current?.querySelector<HTMLTableCellElement>('td:focus-within');\n      if (!focusedCell) {\n        return;\n      }\n\n      const columnIndex = focusedCell.cellIndex;\n      const rowIndex = (focusedCell.parentElement as HTMLTableRowElement).rowIndex;\n\n      let newRowIndex = rowIndex;\n      let newColumnIndex = columnIndex;\n\n      if (vertical !== 0) {\n        newRowIndex = Math.min(numRows, Math.max(rowIndex + vertical, 0));\n      }\n\n      if (horizontal !== 0) {\n        while (newColumnIndex <= maxColumnIndex && newColumnIndex >= minColumnIndex) {\n          newColumnIndex += horizontal;\n          if (focusableColumns[newColumnIndex]) {\n            break;\n          }\n        }\n      }\n\n      if ((rowIndex !== newRowIndex || columnIndex !== newColumnIndex) && tableRoot.current) {\n        focusCell(newRowIndex, newColumnIndex);\n      }\n    },\n    [focusCell, focusableColumns, maxColumnIndex, minColumnIndex, numRows, tableRoot]\n  );\n\n  const handleArrowKeyEvents = useCallback(\n    (event: KeyboardEvent) => {\n      const abort =\n        !!tableRoot.current?.querySelector('[data-inline-editing-active = \"true\"]') ||\n        !document.activeElement?.closest('[data-inline-editing-active]');\n\n      if (abort) {\n        return;\n      }\n      switch (event.key) {\n        case 'ArrowUp':\n          event.preventDefault();\n          shiftFocus(-1, 0);\n          break;\n        case 'ArrowDown':\n          event.preventDefault();\n          shiftFocus(1, 0);\n          break;\n        case 'ArrowLeft':\n          event.preventDefault();\n          shiftFocus(0, -1);\n          break;\n        case 'ArrowRight':\n          event.preventDefault();\n          shiftFocus(0, 1);\n          break;\n        // istanbul ignore next (default case = do nothing, not testable)\n        default:\n          return;\n      }\n    },\n    [shiftFocus, tableRoot]\n  );\n\n  useEffect(() => {\n    if (!tableRoot.current || enableKeyboardNavigation) {\n      return;\n    }\n\n    const tableElement = tableRoot.current;\n    tableRoot.current.addEventListener('keydown', handleArrowKeyEvents);\n\n    return () => tableElement && tableElement.removeEventListener('keydown', handleArrowKeyEvents);\n  }, [enableKeyboardNavigation, focusableColumns, handleArrowKeyEvents, tableRoot]);\n}\n\nexport default useTableFocusNavigation;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useImperativeHandle, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { useContainerQuery } from '@cloudscape-design/component-toolkit';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport {\n  GeneratedAnalyticsMetadataFragment,\n  getAnalyticsMetadataAttribute,\n} from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport InternalContainer, { InternalContainerProps } from '../container/internal';\nimport { useFunnelSubStep } from '../internal/analytics/hooks/use-funnel';\nimport { getAnalyticsMetadataProps, getBaseProps } from '../internal/base-component';\nimport LiveRegion from '../internal/components/live-region';\nimport { getVisualContextClassname } from '../internal/components/visual-context';\nimport { CollectionLabelContext } from '../internal/context/collection-label-context';\nimport { LinkDefaultVariantContext } from '../internal/context/link-default-variant-context';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport useMouseDownTarget from '../internal/hooks/use-mouse-down-target';\nimport { usePerformanceMarks } from '../internal/hooks/use-performance-marks';\nimport { usePrevious } from '../internal/hooks/use-previous';\nimport { useScrollSync } from '../internal/hooks/use-scroll-sync';\nimport { useTableInteractionMetrics } from '../internal/hooks/use-table-interaction-metrics';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { isDevelopment } from '../internal/is-development';\nimport { SomeRequired } from '../internal/types';\nimport { GeneratedAnalyticsMetadataTableComponent } from './analytics-metadata/interfaces';\nimport { TableBodyCell } from './body-cell';\nimport { TableTdElement } from './body-cell/td-element';\nimport { checkColumnWidths } from './column-widths-utils';\nimport { useExpandableTableProps } from './expandable-rows/expandable-rows-utils';\nimport { TableForwardRefType, TableProps, TableRow } from './interfaces';\nimport { NoDataCell } from './no-data-cell';\nimport { ItemsLoader } from './progressive-loading/items-loader';\nimport { useProgressiveLoadingProps } from './progressive-loading/progressive-loading-utils';\nimport { ResizeTracker } from './resizer';\nimport { focusMarkers, SelectionControl, useSelection, useSelectionFocusMove } from './selection';\nimport { useStickyColumns } from './sticky-columns';\nimport StickyHeader, { StickyHeaderRef } from './sticky-header';\nimport { StickyScrollbar } from './sticky-scrollbar';\nimport {\n  getTableRoleProps,\n  getTableRowRoleProps,\n  getTableWrapperRoleProps,\n  GridNavigationProvider,\n  TableRole,\n} from './table-role';\nimport Thead, { TheadProps } from './thead';\nimport ToolsHeader from './tools-header';\nimport { useCellEditing } from './use-cell-editing';\nimport { ColumnWidthDefinition, ColumnWidthsProvider, DEFAULT_COLUMN_WIDTH } from './use-column-widths';\nimport { useRowEvents } from './use-row-events';\nimport useTableFocusNavigation from './use-table-focus-navigation';\nimport { checkSortingState, getColumnKey, getItemKey, getVisibleColumnDefinitions, toContainerVariant } from './utils';\n\nimport headerStyles from '../header/styles.css.js';\nimport styles from './styles.css.js';\n\nconst GRID_NAVIGATION_PAGE_SIZE = 10;\nconst SELECTION_COLUMN_WIDTH = 54;\nconst selectionColumnId = Symbol('selection-column-id');\n\ntype InternalTableProps<T> = SomeRequired<TableProps<T>, 'items' | 'selectedItems' | 'variant' | 'firstIndex'> &\n  InternalBaseComponentProps & {\n    __funnelSubStepProps?: InternalContainerProps['__funnelSubStepProps'];\n  };\n\nexport const InternalTableAsSubstep = React.forwardRef(\n  <T,>(props: InternalTableProps<T>, ref: React.Ref<TableProps.Ref>) => {\n    const { funnelSubStepProps } = useFunnelSubStep();\n\n    const tableProps: InternalTableProps<T> = {\n      ...props,\n      __funnelSubStepProps: funnelSubStepProps,\n    };\n\n    return <InternalTable {...tableProps} ref={ref} />;\n  }\n) as TableForwardRefType;\n\nconst InternalTable = React.forwardRef(\n  <T,>(\n    {\n      header,\n      footer,\n      empty,\n      filter,\n      pagination,\n      preferences,\n      items,\n      columnDefinitions,\n      trackBy,\n      loading,\n      loadingText,\n      selectionType,\n      selectedItems,\n      isItemDisabled,\n      ariaLabels,\n      onSelectionChange,\n      onSortingChange,\n      sortingColumn,\n      sortingDescending,\n      sortingDisabled,\n      visibleColumns,\n      stickyHeader,\n      stickyHeaderVerticalOffset,\n      onRowClick,\n      onRowContextMenu,\n      wrapLines,\n      stripedRows,\n      contentDensity,\n      submitEdit,\n      onEditCancel,\n      resizableColumns,\n      onColumnWidthsChange,\n      variant,\n      __internalRootRef,\n      totalItemsCount,\n      firstIndex,\n      renderAriaLive,\n      stickyColumns,\n      columnDisplay,\n      enableKeyboardNavigation,\n      expandableRows,\n      getLoadingStatus,\n      renderLoaderPending,\n      renderLoaderLoading,\n      renderLoaderError,\n      __funnelSubStepProps,\n      ...rest\n    }: InternalTableProps<T>,\n    ref: React.Ref<TableProps.Ref>\n  ) => {\n    // Keyboard navigation defaults to `true` for tables with expandable rows.\n    if (expandableRows && enableKeyboardNavigation === undefined) {\n      enableKeyboardNavigation = true;\n    }\n\n    const baseProps = getBaseProps(rest);\n\n    const prevStickyHeader = usePrevious(stickyHeader);\n    if (prevStickyHeader !== undefined && !!stickyHeader !== !!prevStickyHeader) {\n      warnOnce(\n        'Table',\n        `\\`stickyHeader\\` has changed from \"${prevStickyHeader}\" to \"${stickyHeader}\". It is not recommended to change the value of this property during the component lifecycle. Please set it to either \"true\" or \"false\" unconditionally.`\n      );\n    }\n\n    const isMobile = useMobile();\n\n    const { isExpandable, allItems, getExpandableItemProps } = useExpandableTableProps({\n      items,\n      expandableRows,\n      trackBy,\n      ariaLabels,\n    });\n    const { allRows } = useProgressiveLoadingProps({\n      items: allItems,\n      getLoadingStatus,\n      getExpandableItemProps,\n    });\n\n    const [containerWidth, wrapperMeasureRef] = useContainerQuery<number>(rect => rect.contentBoxWidth);\n    const wrapperMeasureRefObject = useRef(null);\n    const wrapperMeasureMergedRef = useMergeRefs(wrapperMeasureRef, wrapperMeasureRefObject);\n\n    const [tableWidth, tableMeasureRef] = useContainerQuery<number>(rect => rect.contentBoxWidth);\n    const tableRefObject = useRef(null);\n\n    const secondaryWrapperRef = React.useRef<HTMLDivElement>(null);\n    const theadRef = useRef<HTMLTableRowElement>(null);\n    const stickyHeaderRef = React.useRef<StickyHeaderRef>(null);\n    const scrollbarRef = React.useRef<HTMLDivElement>(null);\n    const { cancelEdit, ...cellEditing } = useCellEditing({ onCancel: onEditCancel, onSubmit: submitEdit });\n\n    /* istanbul ignore next: performance marks do not work in JSDOM */\n    const getHeaderText = () =>\n      toolsHeaderPerformanceMarkRef.current?.querySelector<HTMLElement>(`.${headerStyles['heading-text']}`)\n        ?.innerText ?? toolsHeaderPerformanceMarkRef.current?.innerText;\n\n    const performanceMarkAttributes = usePerformanceMarks(\n      'table',\n      true,\n      tableRefObject,\n      () => ({\n        loading: loading ?? false,\n        header: getHeaderText(),\n      }),\n      [loading]\n    );\n\n    const analyticsMetadata = getAnalyticsMetadataProps(rest);\n\n    const { setLastUserAction } = useTableInteractionMetrics({\n      loading,\n      instanceIdentifier: analyticsMetadata?.instanceIdentifier,\n      itemCount: items.length,\n      getComponentIdentifier: getHeaderText,\n    });\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        scrollToTop: stickyHeaderRef.current?.scrollToTop || (() => undefined),\n        cancelEdit,\n      }),\n      [cancelEdit]\n    );\n\n    const wrapperRefObject = useRef(null);\n    const handleScroll = useScrollSync([wrapperRefObject, scrollbarRef, secondaryWrapperRef]);\n\n    const { moveFocusDown, moveFocusUp, moveFocus } = useSelectionFocusMove(selectionType, allItems.length);\n    const { onRowClickHandler, onRowContextMenuHandler } = useRowEvents({ onRowClick, onRowContextMenu });\n\n    const visibleColumnDefinitions = getVisibleColumnDefinitions({\n      columnDefinitions,\n      columnDisplay,\n      visibleColumns,\n    });\n\n    const { isItemSelected, getSelectAllProps, getItemSelectionProps } = useSelection({\n      items: allItems,\n      trackBy,\n      selectedItems,\n      selectionType,\n      isItemDisabled,\n      onSelectionChange,\n      ariaLabels,\n      loading,\n    });\n    const isRowSelected = (row: TableRow<T>) => row.type === 'data' && isItemSelected(row.item);\n\n    if (isDevelopment) {\n      if (resizableColumns) {\n        checkColumnWidths(columnDefinitions);\n      }\n      if (sortingColumn?.sortingComparator) {\n        checkSortingState(columnDefinitions, sortingColumn.sortingComparator);\n      }\n    }\n\n    const isVisualRefresh = useVisualRefresh();\n    const computedVariant = isVisualRefresh\n      ? variant\n      : ['embedded', 'full-page'].indexOf(variant) > -1\n        ? 'container'\n        : variant;\n    const hasHeader = !!(header || filter || pagination || preferences);\n    const hasSelection = !!selectionType;\n    const hasFooterPagination = isMobile && variant === 'full-page' && !!pagination;\n    const hasFooter = !!footer || hasFooterPagination;\n\n    const headerIdRef = useRef<string | undefined>(undefined);\n    const isLabelledByHeader = !ariaLabels?.tableLabel && !!header;\n    const ariaLabelledby = isLabelledByHeader && headerIdRef.current ? headerIdRef.current : undefined;\n    const setHeaderRef = useCallback((id: string) => {\n      headerIdRef.current = id;\n    }, []);\n\n    const visibleColumnWidthsWithSelection: ColumnWidthDefinition[] = [];\n    const visibleColumnIdsWithSelection: PropertyKey[] = [];\n    if (hasSelection) {\n      visibleColumnWidthsWithSelection.push({ id: selectionColumnId, width: SELECTION_COLUMN_WIDTH });\n      visibleColumnIdsWithSelection.push(selectionColumnId);\n    }\n    for (let columnIndex = 0; columnIndex < visibleColumnDefinitions.length; columnIndex++) {\n      const columnId = getColumnKey(visibleColumnDefinitions[columnIndex], columnIndex);\n      visibleColumnWidthsWithSelection.push({ ...visibleColumnDefinitions[columnIndex], id: columnId });\n      visibleColumnIdsWithSelection.push(columnId);\n    }\n\n    const stickyState = useStickyColumns({\n      visibleColumns: visibleColumnIdsWithSelection,\n      stickyColumnsFirst: (stickyColumns?.first ?? 0) + (stickyColumns?.first && hasSelection ? 1 : 0),\n      stickyColumnsLast: stickyColumns?.last || 0,\n    });\n\n    const hasStickyColumns = !!((stickyColumns?.first ?? 0) + (stickyColumns?.last ?? 0) > 0);\n    const hasEditableCells = !!columnDefinitions.find(col => col.editConfig);\n\n    let tableRole: TableRole = 'table';\n    if (isExpandable) {\n      tableRole = 'treegrid';\n    } else if (enableKeyboardNavigation) {\n      tableRole = 'grid';\n    } else if (hasEditableCells) {\n      tableRole = 'grid-default';\n    }\n\n    const theadProps: TheadProps = {\n      selectionType,\n      getSelectAllProps,\n      columnDefinitions: visibleColumnDefinitions,\n      variant: computedVariant,\n      wrapLines,\n      resizableColumns,\n      sortingColumn,\n      sortingDisabled,\n      sortingDescending,\n      onSortingChange,\n      onFocusMove: moveFocus,\n      onResizeFinish(newWidth) {\n        const widthsDetail = columnDefinitions.map(\n          (column, index) =>\n            newWidth.get(getColumnKey(column, index)) || (column.width as number) || DEFAULT_COLUMN_WIDTH\n        );\n        const widthsChanged = widthsDetail.some((width, index) => columnDefinitions[index].width !== width);\n        if (widthsChanged) {\n          fireNonCancelableEvent(onColumnWidthsChange, { widths: widthsDetail });\n        }\n      },\n      singleSelectionHeaderAriaLabel: ariaLabels?.selectionGroupLabel,\n      resizerRoleDescription: ariaLabels?.resizerRoleDescription,\n      stripedRows,\n      stickyState,\n      selectionColumnId,\n      tableRole,\n      isExpandable,\n      setLastUserAction,\n    };\n\n    const wrapperRef = useMergeRefs(wrapperRefObject, stickyState.refs.wrapper);\n    const tableRef = useMergeRefs(tableMeasureRef, tableRefObject, stickyState.refs.table);\n\n    const wrapperProps = getTableWrapperRoleProps({\n      tableRole,\n      isScrollable: !!(tableWidth && containerWidth && tableWidth > containerWidth),\n      ariaLabel: ariaLabels?.tableLabel,\n      ariaLabelledby,\n    });\n\n    const getMouseDownTarget = useMouseDownTarget();\n\n    useTableFocusNavigation({\n      enableKeyboardNavigation,\n      selectionType,\n      tableRoot: tableRefObject,\n      columnDefinitions: visibleColumnDefinitions,\n      numRows: allRows?.length,\n    });\n    const toolsHeaderPerformanceMarkRef = useRef<HTMLDivElement>(null);\n    // If is mobile, we take into consideration the AppLayout's mobile bar and we subtract the tools wrapper height so only the table header is sticky\n    const [toolsHeaderHeight, toolsHeaderWrapperMeasureRef] = useContainerQuery(rect => rect.borderBoxHeight);\n    const toolsHeaderWrapper = useMergeRefs(toolsHeaderPerformanceMarkRef, toolsHeaderWrapperMeasureRef);\n\n    const colIndexOffset = selectionType ? 1 : 0;\n    const totalColumnsCount = visibleColumnDefinitions.length + colIndexOffset;\n\n    return (\n      <LinkDefaultVariantContext.Provider value={{ defaultVariant: 'primary' }}>\n        <ColumnWidthsProvider\n          visibleColumns={visibleColumnWidthsWithSelection}\n          resizableColumns={resizableColumns}\n          containerRef={wrapperMeasureRefObject}\n        >\n          <InternalContainer\n            {...baseProps}\n            __internalRootRef={__internalRootRef}\n            className={clsx(baseProps.className, styles.root)}\n            __funnelSubStepProps={__funnelSubStepProps}\n            __fullPage={variant === 'full-page'}\n            header={\n              <>\n                {hasHeader && (\n                  <div>\n                    <div\n                      ref={toolsHeaderWrapper}\n                      className={clsx(styles['header-controls'], styles[`variant-${computedVariant}`])}\n                    >\n                      <CollectionLabelContext.Provider value={{ assignId: setHeaderRef }}>\n                        <ToolsHeader\n                          header={header}\n                          filter={filter}\n                          pagination={pagination}\n                          preferences={preferences}\n                          setLastUserAction={setLastUserAction}\n                        />\n                      </CollectionLabelContext.Provider>\n                    </div>\n                  </div>\n                )}\n                {stickyHeader && (\n                  <StickyHeader\n                    ref={stickyHeaderRef}\n                    variant={computedVariant}\n                    theadProps={theadProps}\n                    wrapperRef={wrapperRefObject}\n                    theadRef={theadRef}\n                    secondaryWrapperRef={secondaryWrapperRef}\n                    tableRef={tableRefObject}\n                    onScroll={handleScroll}\n                    tableHasHeader={hasHeader}\n                    contentDensity={contentDensity}\n                    tableRole={tableRole}\n                  />\n                )}\n              </>\n            }\n            disableHeaderPaddings={true}\n            disableContentPaddings={true}\n            variant={toContainerVariant(computedVariant)}\n            __disableFooterPaddings={true}\n            __disableFooterDivider={true}\n            __disableStickyMobile={false}\n            footer={\n              hasFooter ? (\n                <div className={clsx(styles['footer-wrapper'], styles[`variant-${computedVariant}`])}>\n                  <div className={clsx(styles.footer, hasFooterPagination && styles['footer-with-pagination'])}>\n                    {footer && <span>{footer}</span>}\n                    {hasFooterPagination && <div className={styles['footer-pagination']}>{pagination}</div>}\n                  </div>\n                </div>\n              ) : null\n            }\n            __stickyHeader={stickyHeader}\n            __mobileStickyOffset={toolsHeaderHeight ?? 0}\n            __stickyOffset={stickyHeaderVerticalOffset}\n            {...focusMarkers.root}\n          >\n            <div\n              ref={wrapperRef}\n              className={clsx(styles.wrapper, styles[`variant-${computedVariant}`], {\n                [styles['has-footer']]: hasFooter,\n                [styles['has-header']]: hasHeader,\n              })}\n              style={stickyState.style.wrapper}\n              onScroll={handleScroll}\n              {...wrapperProps}\n            >\n              <div className={styles['wrapper-content-measure']} ref={wrapperMeasureMergedRef}></div>\n              {!!renderAriaLive && !!firstIndex && (\n                <LiveRegion>\n                  <span>\n                    {renderAriaLive({\n                      firstIndex,\n                      lastIndex: firstIndex + items.length - 1,\n                      visibleItemsCount: allItems.length,\n                      totalItemsCount,\n                    })}\n                  </span>\n                </LiveRegion>\n              )}\n              <GridNavigationProvider\n                keyboardNavigation={!!enableKeyboardNavigation}\n                pageSize={GRID_NAVIGATION_PAGE_SIZE}\n                getTable={() => tableRefObject.current}\n              >\n                <table\n                  {...performanceMarkAttributes}\n                  ref={tableRef}\n                  className={clsx(\n                    styles.table,\n                    resizableColumns && styles['table-layout-fixed'],\n                    contentDensity === 'compact' && getVisualContextClassname('compact-table')\n                  )}\n                  {...getTableRoleProps({\n                    tableRole,\n                    totalItemsCount,\n                    totalColumnsCount: totalColumnsCount,\n                    ariaLabel: ariaLabels?.tableLabel,\n                    ariaLabelledby,\n                  })}\n                >\n                  <Thead\n                    ref={theadRef}\n                    hidden={stickyHeader}\n                    onFocusedComponentChange={focusId => stickyHeaderRef.current?.setFocus(focusId)}\n                    {...theadProps}\n                  />\n                  <tbody>\n                    {loading || allItems.length === 0 ? (\n                      <tr>\n                        <NoDataCell\n                          totalColumnsCount={totalColumnsCount}\n                          hasFooter={hasFooter}\n                          loading={loading}\n                          loadingText={loadingText}\n                          empty={empty}\n                          tableRef={tableRefObject}\n                          containerRef={wrapperMeasureRefObject}\n                        />\n                      </tr>\n                    ) : (\n                      allRows.map((row, rowIndex) => {\n                        const isFirstRow = rowIndex === 0;\n                        const isLastRow = rowIndex === allRows.length - 1;\n                        const expandableProps = row.type === 'data' ? getExpandableItemProps(row.item) : undefined;\n                        const rowRoleProps = getTableRowRoleProps({\n                          tableRole,\n                          firstIndex,\n                          rowIndex,\n                          level: row.type === 'loader' ? row.level : undefined,\n                          ...expandableProps,\n                        });\n                        const getTableItemKey = (item: T) => getItemKey(trackBy, item, rowIndex);\n                        const sharedCellProps = {\n                          isVisualRefresh,\n                          isFirstRow,\n                          isLastRow,\n                          isSelected: hasSelection && isRowSelected(row),\n                          isPrevSelected: hasSelection && !isFirstRow && isRowSelected(allRows[rowIndex - 1]),\n                          isNextSelected: hasSelection && !isLastRow && isRowSelected(allRows[rowIndex + 1]),\n                          isEvenRow: rowIndex % 2 === 0,\n                          stripedRows,\n                          hasSelection,\n                          hasFooter,\n                          stickyState,\n                          tableRole,\n                        };\n                        if (row.type === 'data') {\n                          return (\n                            <tr\n                              key={getTableItemKey(row.item)}\n                              className={clsx(styles.row, sharedCellProps.isSelected && styles['row-selected'])}\n                              onFocus={({ currentTarget }) => {\n                                // When an element inside table row receives focus we want to adjust the scroll.\n                                // However, that behaviour is unwanted when the focus is received as result of a click\n                                // as it causes the click to never reach the target element.\n                                if (!currentTarget.contains(getMouseDownTarget())) {\n                                  stickyHeaderRef.current?.scrollToRow(currentTarget);\n                                }\n                              }}\n                              {...focusMarkers.item}\n                              onClick={onRowClickHandler && onRowClickHandler.bind(null, rowIndex, row.item)}\n                              onContextMenu={\n                                onRowContextMenuHandler && onRowContextMenuHandler.bind(null, rowIndex, row.item)\n                              }\n                              {...rowRoleProps}\n                            >\n                              {getItemSelectionProps && (\n                                <TableTdElement\n                                  {...sharedCellProps}\n                                  className={styles['selection-control']}\n                                  wrapLines={false}\n                                  columnId={selectionColumnId}\n                                  colIndex={0}\n                                >\n                                  <SelectionControl\n                                    onFocusDown={moveFocusDown}\n                                    onFocusUp={moveFocusUp}\n                                    {...getItemSelectionProps(row.item)}\n                                    rowIndex={rowIndex}\n                                    itemKey={`${getTableItemKey(row.item)}`}\n                                  />\n                                </TableTdElement>\n                              )}\n\n                              {visibleColumnDefinitions.map((column, colIndex) => {\n                                const isEditing = cellEditing.checkEditing({ rowIndex, colIndex });\n                                const successfulEdit = cellEditing.checkLastSuccessfulEdit({ rowIndex, colIndex });\n                                const isEditable = !!column.editConfig && !cellEditing.isLoading;\n                                const cellExpandableProps =\n                                  isExpandable && colIndex === 0 ? expandableProps : undefined;\n\n                                const analyticsMetadata: GeneratedAnalyticsMetadataFragment = {\n                                  component: {\n                                    innerContext: {\n                                      position: `${rowIndex + 1},${colIndex + 1}`,\n                                      columnId: column.id ? `${column.id}` : '',\n                                      columnLabel: {\n                                        selector: `table thead tr th:nth-child(${colIndex + (selectionType ? 2 : 1)})`,\n                                        root: 'component',\n                                      },\n                                      item: `${getTableItemKey(row.item)}`,\n                                    } as GeneratedAnalyticsMetadataTableComponent['innerContext'],\n                                  },\n                                };\n\n                                return (\n                                  <TableBodyCell\n                                    key={getColumnKey(column, colIndex)}\n                                    {...sharedCellProps}\n                                    style={\n                                      resizableColumns\n                                        ? {}\n                                        : {\n                                            width: column.width,\n                                            minWidth: column.minWidth,\n                                            maxWidth: column.maxWidth,\n                                          }\n                                    }\n                                    ariaLabels={ariaLabels}\n                                    column={column}\n                                    item={row.item}\n                                    wrapLines={wrapLines}\n                                    isEditable={isEditable}\n                                    isEditing={isEditing}\n                                    isRowHeader={column.isRowHeader}\n                                    successfulEdit={successfulEdit}\n                                    resizableColumns={resizableColumns}\n                                    onEditStart={() => cellEditing.startEdit({ rowIndex, colIndex })}\n                                    onEditEnd={editCancelled =>\n                                      cellEditing.completeEdit({ rowIndex, colIndex }, editCancelled)\n                                    }\n                                    submitEdit={cellEditing.submitEdit}\n                                    columnId={column.id ?? colIndex}\n                                    colIndex={colIndex + colIndexOffset}\n                                    verticalAlign={column.verticalAlign}\n                                    {...cellExpandableProps}\n                                    {...getAnalyticsMetadataAttribute(analyticsMetadata)}\n                                  />\n                                );\n                              })}\n                            </tr>\n                          );\n                        }\n                        return (\n                          <tr\n                            key={(row.item ? getTableItemKey(row.item) : 'root-' + rowIndex) + '-' + row.from}\n                            className={styles.row}\n                            {...rowRoleProps}\n                          >\n                            {getItemSelectionProps && (\n                              <TableTdElement\n                                {...sharedCellProps}\n                                className={styles['selection-control']}\n                                wrapLines={false}\n                                columnId={selectionColumnId}\n                                colIndex={0}\n                              >\n                                {null}\n                              </TableTdElement>\n                            )}\n                            {visibleColumnDefinitions.map((column, colIndex) => (\n                              <TableTdElement\n                                key={getColumnKey(column, colIndex)}\n                                {...sharedCellProps}\n                                wrapLines={false}\n                                columnId={column.id ?? colIndex}\n                                colIndex={colIndex + colIndexOffset}\n                                isRowHeader={colIndex === 0}\n                                level={row.level}\n                              >\n                                {colIndex === 0 ? (\n                                  <ItemsLoader\n                                    item={row.item}\n                                    loadingStatus={row.status}\n                                    renderLoaderPending={renderLoaderPending}\n                                    renderLoaderLoading={renderLoaderLoading}\n                                    renderLoaderError={renderLoaderError}\n                                    trackBy={trackBy}\n                                  />\n                                ) : null}\n                              </TableTdElement>\n                            ))}\n                          </tr>\n                        );\n                      })\n                    )}\n                  </tbody>\n                </table>\n              </GridNavigationProvider>\n\n              {resizableColumns && <ResizeTracker />}\n            </div>\n\n            <StickyScrollbar\n              ref={scrollbarRef}\n              wrapperRef={wrapperRefObject}\n              tableRef={tableRefObject}\n              onScroll={handleScroll}\n              hasStickyColumns={hasStickyColumns}\n            />\n          </InternalContainer>\n        </ColumnWidthsProvider>\n      </LinkDefaultVariantContext.Provider>\n    );\n  }\n) as TableForwardRefType;\n\nexport default InternalTable;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useInternalI18n } from '../../i18n/context';\nimport { fireNonCancelableEvent } from '../../internal/events';\nimport { TableProps } from '../interfaces';\nimport { ItemSet } from '../selection/utils';\n\ninterface ExpandableItemProps<T> extends ExpandableItemDetail<T> {\n  isExpandable: boolean;\n  isExpanded: boolean;\n  onExpandableItemToggle: () => void;\n  expandButtonLabel?: string;\n  collapseButtonLabel?: string;\n}\n\ninterface ExpandableItemDetail<T> {\n  level: number;\n  setSize: number;\n  posInSet: number;\n  parent: null | T;\n  children: readonly T[];\n}\n\nexport function useExpandableTableProps<T>({\n  items,\n  expandableRows,\n  trackBy,\n  ariaLabels,\n}: {\n  items: readonly T[];\n  expandableRows?: TableProps.ExpandableRows<T>;\n  trackBy?: TableProps.TrackBy<T>;\n  ariaLabels?: TableProps.AriaLabels<T>;\n}) {\n  const i18n = useInternalI18n('table');\n  const isExpandable = !!expandableRows;\n\n  const expandedSet = new ItemSet(trackBy, expandableRows?.expandedItems ?? []);\n\n  let allItems = items;\n  const itemToDetail = new Map<T, ExpandableItemDetail<T>>();\n  const getItemLevel = (item: T) => itemToDetail.get(item)?.level ?? 0;\n\n  if (isExpandable) {\n    const visibleItems = new Array<T>();\n\n    const traverse = (item: T, detail: Omit<ExpandableItemDetail<T>, 'children'>) => {\n      const children = expandableRows.getItemChildren(item);\n      itemToDetail.set(item, { ...detail, children });\n\n      visibleItems.push(item);\n      if (expandedSet.has(item)) {\n        children.forEach((child, index) =>\n          traverse(child, { level: detail.level + 1, setSize: children.length, posInSet: index + 1, parent: item })\n        );\n      }\n    };\n    items.forEach((item, index) =>\n      traverse(item, { level: 1, setSize: items.length, posInSet: index + 1, parent: null })\n    );\n\n    for (let index = 0; index < visibleItems.length; index++) {\n      const item = visibleItems[index];\n      if (expandedSet.has(item)) {\n        let insertionIndex = index + 1;\n        for (insertionIndex; insertionIndex < visibleItems.length; insertionIndex++) {\n          const insertionItem = visibleItems[insertionIndex];\n          if (getItemLevel(item) >= getItemLevel(insertionItem)) {\n            break;\n          }\n        }\n        insertionIndex--;\n      }\n    }\n\n    allItems = visibleItems;\n  }\n\n  const getExpandableItemProps = (item: T): ExpandableItemProps<T> => {\n    const { level = 1, setSize = 1, posInSet = 1, parent = null, children = [] } = itemToDetail.get(item) ?? {};\n    return {\n      level,\n      setSize,\n      posInSet,\n      isExpandable: expandableRows?.isItemExpandable(item) ?? true,\n      isExpanded: expandedSet.has(item),\n      onExpandableItemToggle: () =>\n        fireNonCancelableEvent(expandableRows?.onExpandableItemToggle, { item, expanded: !expandedSet.has(item) }),\n      expandButtonLabel: i18n('ariaLabels.expandButtonLabel', ariaLabels?.expandButtonLabel?.(item)),\n      collapseButtonLabel: i18n('ariaLabels.collapseButtonLabel', ariaLabels?.collapseButtonLabel?.(item)),\n      parent,\n      children,\n    };\n  };\n\n  return { isExpandable, allItems, getExpandableItemProps };\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\n\nimport { TableProps, TableRow } from '../interfaces';\n\nexport function useProgressiveLoadingProps<T>({\n  items,\n  getLoadingStatus,\n  getExpandableItemProps,\n}: {\n  items: readonly T[];\n  getLoadingStatus?: (item: null | T) => TableProps.LoadingStatus;\n  getExpandableItemProps: (item: T) => { level: number; parent: null | T; isExpanded: boolean; children: readonly T[] };\n}) {\n  // The rows are either data or loader.\n  // A loader row can be added to the root level (level=0) in which case it has no associated item (item=null).\n  // Loader rows can be added to expandable rows (level>0) in which case they have an associated item (item!=null).\n  // The \"from\" property of the loader row is the index of the first item to be loaded starting 0. It is used to generate unique React keys.\n  const allRows = new Array<TableRow<T>>();\n\n  const getItemParent = (item: T) => getExpandableItemProps(item).parent;\n  const getItemChildren = (item: T) => getExpandableItemProps(item).children;\n  const getItemLevel = (item?: T) => (item ? getExpandableItemProps(item).level : 0);\n  const isItemExpanded = (item: T) => getExpandableItemProps(item).isExpanded;\n\n  for (let i = 0; i < items.length; i++) {\n    allRows.push({ type: 'data', item: items[i] });\n\n    // Insert empty expandable item loader\n    if (isItemExpanded(items[i]) && getItemChildren(items[i]).length === 0) {\n      const status = getLoadingStatus?.(items[i]);\n      if (status && (status === 'loading' || status === 'error')) {\n        allRows.push({ type: 'loader', item: items[i], level: getItemLevel(items[i]), status, from: 0 });\n      } else {\n        warnOnce('Table', 'Expanded items without children must have \"loading\" or \"error\" loading status.');\n      }\n    }\n\n    // Insert expandable items loaders\n    let currentParent = getItemParent(items[i]);\n    let levelsDiff = getItemLevel(items[i]) - getItemLevel(items[i + 1]);\n    while (currentParent && levelsDiff > 0) {\n      const status = getLoadingStatus?.(currentParent);\n      if (status && status !== 'finished') {\n        const level = currentParent ? getItemLevel(currentParent) : 0;\n        const children = currentParent ? getItemChildren(currentParent) : [];\n        allRows.push({ type: 'loader', item: currentParent, level, status, from: children.length });\n      }\n      currentParent = currentParent && getItemParent(currentParent);\n      levelsDiff--;\n    }\n\n    // Insert root loader\n    const rootLoadingStatus = getLoadingStatus?.(null);\n    if (i === items.length - 1 && rootLoadingStatus && rootLoadingStatus !== 'finished') {\n      allRows.push({ type: 'loader', item: null, level: 0, status: rootLoadingStatus, from: items.length });\n    }\n  }\n\n  return { allRows };\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useCallback, useState } from 'react';\n\nimport { CancelableEventHandler, fireCancelableEvent } from '../internal/events';\nimport { TableProps } from './interfaces';\n\nexport interface CellId {\n  rowIndex: number;\n  colIndex: number;\n}\n\ninterface CellEditingProps {\n  onCancel?: CancelableEventHandler;\n  onSubmit?: TableProps.SubmitEditFunction<any>;\n}\n\nexport function useCellEditing({ onCancel, onSubmit }: CellEditingProps) {\n  const [currentEditCell, setCurrentEditCell] = useState<null | CellId>(null);\n  const [lastSuccessfulEditCell, setLastSuccessfulEditCell] = useState<null | CellId>(null);\n  const [currentEditLoading, setCurrentEditLoading] = useState(false);\n\n  const startEdit = (cellId: CellId) => {\n    setLastSuccessfulEditCell(null);\n    setCurrentEditCell(cellId);\n  };\n\n  const cancelEdit = useCallback(() => setCurrentEditCell(null), []);\n\n  const completeEdit = (cellId: CellId, editCancelled: boolean) => {\n    const eventCancelled = fireCancelableEvent(onCancel, {});\n    if (!eventCancelled) {\n      setCurrentEditCell(null);\n      if (!editCancelled) {\n        setLastSuccessfulEditCell(cellId);\n      }\n    }\n  };\n\n  const checkEditing = ({ rowIndex, colIndex }: CellId) =>\n    rowIndex === currentEditCell?.rowIndex && colIndex === currentEditCell.colIndex;\n\n  const checkLastSuccessfulEdit = ({ rowIndex, colIndex }: CellId) =>\n    rowIndex === lastSuccessfulEditCell?.rowIndex && colIndex === lastSuccessfulEditCell.colIndex;\n\n  const submitEdit = onSubmit\n    ? async (...args: Parameters<typeof onSubmit>) => {\n        setCurrentEditLoading(true);\n        try {\n          await onSubmit(...args);\n        } finally {\n          setCurrentEditLoading(false);\n        }\n      }\n    : undefined;\n\n  return {\n    isLoading: currentEditLoading,\n    startEdit,\n    cancelEdit,\n    checkEditing,\n    checkLastSuccessfulEdit,\n    completeEdit,\n    submitEdit,\n  };\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useEffect, useRef } from 'react';\n\nimport { PerformanceMetrics } from '../../analytics';\nimport { useEffectOnUpdate } from '../use-effect-on-update';\n\n/*\nIf the last user interaction is more than this time ago, it is not considered\nto be the cause of the current loading state.\n*/\nconst USER_ACTION_TIME_LIMIT = 1_000;\n\nexport interface UseTableInteractionMetricsProps {\n  instanceIdentifier: string | undefined;\n  loading: boolean | undefined;\n  itemCount: number;\n  getComponentIdentifier: () => string | undefined;\n}\n\nexport function useTableInteractionMetrics({\n  itemCount,\n  instanceIdentifier,\n  getComponentIdentifier,\n  loading = false,\n}: UseTableInteractionMetricsProps) {\n  const lastUserAction = useRef<{ name: string; time: number } | null>(null);\n  const capturedUserAction = useRef<string | null>(null);\n  const loadingStartTime = useRef<number | null>(null);\n\n  const metadata = useRef({ itemCount, getComponentIdentifier });\n  metadata.current = { itemCount, getComponentIdentifier };\n\n  useEffect(() => {\n    if (loading) {\n      loadingStartTime.current = performance.now();\n\n      if (lastUserAction.current && lastUserAction.current.time > performance.now() - USER_ACTION_TIME_LIMIT) {\n        capturedUserAction.current = lastUserAction.current.name;\n      } else {\n        capturedUserAction.current = null;\n      }\n    }\n  }, [loading]);\n\n  useEffectOnUpdate(() => {\n    if (!loading && loadingStartTime.current !== null) {\n      const loadingDuration = performance.now() - loadingStartTime.current;\n      loadingStartTime.current = null;\n\n      PerformanceMetrics.tableInteraction({\n        userAction: capturedUserAction.current ?? '',\n        interactionTime: Math.round(loadingDuration),\n        interactionMetadata: undefined,\n        componentIdentifier: metadata.current.getComponentIdentifier(),\n        instanceIdentifier,\n        noOfResourcesInTable: metadata.current.itemCount,\n      });\n    }\n  }, [instanceIdentifier, loading]);\n\n  return {\n    setLastUserAction: (name: string) => void (lastUserAction.current = { name, time: performance.now() }),\n  };\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { RefObject, useRef } from 'react';\n\n/**\n * useScrollSync returns scroll event handler to be attached to synchronized scroll elements.\n *\n * For example\n *    const handleScroll = useScrollSync([ref1, ref2]);\n *    <div ref={ref1} onScroll={handleScroll}/>\n *    <div ref={ref2} onScroll={handleScroll}/>\n */\nexport function useScrollSync(refs: Array<RefObject<any>>) {\n  const activeElement = useRef<HTMLElement | null>(null);\n\n  return (event: React.UIEvent) => {\n    const targetElement = event.currentTarget as HTMLElement;\n    // remembers the first element that fires onscroll to align with other elements against it\n    if (targetElement && (activeElement.current === null || activeElement.current === targetElement)) {\n      requestAnimationFrame(() => {\n        activeElement.current = targetElement;\n        refs.forEach(ref => {\n          const element = ref.current;\n          if (element && element !== targetElement) {\n            element.scrollLeft = targetElement.scrollLeft;\n          }\n        });\n        // unblock the ability to scroll the synced elements\n        requestAnimationFrame(() => {\n          activeElement.current = null;\n        });\n      });\n    }\n  };\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { fireCancelableEvent, fireNonCancelableEvent } from '../internal/events/index';\nimport { findUpUntil } from '../internal/utils/dom';\nimport { TableProps } from './interfaces';\n\nimport styles from './styles.css.js';\n\nexport function useRowEvents<T>({ onRowClick, onRowContextMenu }: Pick<TableProps, 'onRowClick' | 'onRowContextMenu'>) {\n  const onRowClickHandler = (rowIndex: number, item: T, event: React.MouseEvent) => {\n    const tableCell = findUpUntil(event.target as HTMLElement, element => element.tagName.toLowerCase() === 'td');\n    if (!tableCell || !tableCell.classList.contains(styles['selection-control'])) {\n      const details: TableProps.OnRowClickDetail<T> = { rowIndex, item };\n      fireNonCancelableEvent(onRowClick, details);\n    }\n  };\n  const onRowContextMenuHandler = (rowIndex: number, item: T, event: React.MouseEvent) => {\n    const details: TableProps.OnRowContextMenuDetail<T> = {\n      rowIndex,\n      item,\n      clientX: event.clientX,\n      clientY: event.clientY,\n    };\n    fireCancelableEvent(onRowContextMenu, details, event);\n  };\n\n  return {\n    onRowClickHandler: onRowClick && onRowClickHandler,\n    onRowContextMenuHandler: onRowContextMenu && onRowContextMenuHandler,\n  };\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { AnalyticsFunnelSubStep } from '../internal/analytics/components/analytics-funnel';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { GeneratedAnalyticsMetadataTableComponent } from './analytics-metadata/interfaces';\nimport { getSortingColumnId } from './header-cell/utils';\nimport { TableForwardRefType, TableProps } from './interfaces';\nimport InternalTable, { InternalTableAsSubstep } from './internal';\n\nexport { TableProps };\nconst Table = React.forwardRef(\n  <T,>(\n    {\n      items = [],\n      selectedItems = [],\n      variant = 'container',\n      contentDensity = 'comfortable',\n      firstIndex = 1,\n      ...props\n    }: TableProps<T>,\n    ref: React.Ref<TableProps.Ref>\n  ) => {\n    const baseComponentProps = useBaseComponent('Table', {\n      props: {\n        contentDensity,\n        resizableColumns: props.resizableColumns,\n        selectionType: props.selectionType,\n        stickyHeader: props.stickyHeader,\n        stripedRows: props.stripedRows,\n        variant,\n        wrapLines: props.wrapLines,\n        enableKeyboardNavigation: props.enableKeyboardNavigation,\n      },\n      metadata: {\n        expandableRows: !!props.expandableRows,\n        progressiveLoading: !!props.getLoadingStatus,\n        inlineEdit: props.columnDefinitions.some(def => !!def.editConfig),\n        disabledInlineEdit: props.columnDefinitions.some(def => !!def.editConfig?.disabledReason),\n      },\n    });\n\n    const analyticsComponentMetadata: GeneratedAnalyticsMetadataTableComponent = {\n      name: 'awsui.Table',\n      label: { root: 'self' },\n      properties: {\n        selectionType: props.selectionType || 'none',\n        itemsCount: `${items.length}`,\n        selectedItemsCount: `${selectedItems.length}`,\n        variant,\n      },\n    };\n\n    const sortingColumnId = getSortingColumnId(props.columnDefinitions, props.sortingColumn);\n    if (sortingColumnId) {\n      analyticsComponentMetadata.properties.sortingColumnId = sortingColumnId;\n      analyticsComponentMetadata.properties.sortingDescending = `${props.sortingDescending || false}`;\n    }\n\n    const tableProps: Parameters<typeof InternalTable<T>>[0] = {\n      items,\n      selectedItems,\n      variant,\n      contentDensity,\n      firstIndex,\n      ...props,\n      ...baseComponentProps,\n      ref,\n      ...getAnalyticsMetadataAttribute({ component: analyticsComponentMetadata }),\n    };\n\n    if (variant === 'borderless' || variant === 'embedded') {\n      return <InternalTable {...tableProps} />;\n    }\n\n    return (\n      <AnalyticsFunnelSubStep>\n        <InternalTableAsSubstep {...tableProps} />\n      </AnalyticsFunnelSubStep>\n    );\n  }\n) as TableForwardRefType;\n\napplyDisplayName(Table, 'Table');\nexport default Table;\n","\n    import './styles.scoped.css';\n    export default {\n  \"root\": \"awsui_root_qk1j1_1x14a_97\",\n  \"textarea\": \"awsui_textarea_qk1j1_1x14a_101\",\n  \"textarea-readonly\": \"awsui_textarea-readonly_qk1j1_1x14a_154\",\n  \"textarea-invalid\": \"awsui_textarea-invalid_qk1j1_1x14a_196\",\n  \"textarea-warning\": \"awsui_textarea-warning_qk1j1_1x14a_207\"\n};\n  ","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { Ref, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { convertAutoComplete } from '../input/utils';\nimport { getBaseProps } from '../internal/base-component';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport { fireKeyboardEvent, fireNonCancelableEvent } from '../internal/events';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { TextareaProps } from './interfaces';\n\nimport styles from './styles.css.js';\n\nexport { TextareaProps };\n\nconst Textarea = React.forwardRef(\n  (\n    {\n      value,\n      autoComplete = true,\n      disabled,\n      readOnly,\n      disableBrowserAutocorrect,\n      disableBrowserSpellcheck,\n      spellcheck,\n      onKeyDown,\n      onKeyUp,\n      onChange,\n      onBlur,\n      onFocus,\n      ariaRequired,\n      name,\n      rows,\n      placeholder,\n      autoFocus,\n      ariaLabel,\n      ...rest\n    }: TextareaProps,\n    ref: Ref<TextareaProps.Ref>\n  ) => {\n    const { __internalRootRef } = useBaseComponent('Textarea', {\n      props: { autoComplete, autoFocus, disableBrowserAutocorrect, disableBrowserSpellcheck, readOnly, spellcheck },\n    });\n    const { ariaLabelledby, ariaDescribedby, controlId, invalid, warning } = useFormFieldContext(rest);\n\n    const baseProps = getBaseProps(rest);\n\n    const textareaRef = useRef<HTMLTextAreaElement>(null);\n    useForwardFocus(ref, textareaRef);\n\n    const attributes: React.TextareaHTMLAttributes<HTMLTextAreaElement> = {\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledby,\n      'aria-describedby': ariaDescribedby,\n      'aria-required': ariaRequired ? 'true' : undefined,\n      'aria-invalid': invalid ? 'true' : undefined,\n      name,\n      placeholder,\n      autoFocus,\n      className: clsx(styles.textarea, {\n        [styles['textarea-readonly']]: readOnly,\n        [styles['textarea-invalid']]: invalid,\n        [styles['textarea-warning']]: warning && !invalid,\n      }),\n      autoComplete: convertAutoComplete(autoComplete),\n      spellCheck: spellcheck,\n      disabled,\n      readOnly: readOnly ? true : undefined,\n      rows: rows || 3,\n      onKeyDown: onKeyDown && (event => fireKeyboardEvent(onKeyDown, event)),\n      onKeyUp: onKeyUp && (event => fireKeyboardEvent(onKeyUp, event)),\n      // We set a default value on the component in order to force it into the controlled mode.\n      value: value || '',\n      onChange: onChange && (event => fireNonCancelableEvent(onChange, { value: event.target.value })),\n      onBlur: onBlur && (() => fireNonCancelableEvent(onBlur)),\n      onFocus: onFocus && (() => fireNonCancelableEvent(onFocus)),\n    };\n\n    if (disableBrowserAutocorrect) {\n      attributes.autoCorrect = 'off';\n      attributes.autoCapitalize = 'off';\n    }\n\n    if (disableBrowserSpellcheck) {\n      attributes.spellCheck = 'false';\n    }\n\n    return (\n      <span {...baseProps} className={clsx(styles.root, baseProps.className)} ref={__internalRootRef}>\n        <textarea ref={textareaRef} id={controlId} {...attributes} />\n      </span>\n    );\n  }\n);\n\napplyDisplayName(Textarea, 'Textarea');\nexport default Textarea;\n"],"names":["Container","_a","variant","disableHeaderPaddings","disableContentPaddings","fitHeight","props","__rest","analyticsMetadata","getAnalyticsMetadataProps","baseComponentProps","useBaseComponent","externalProps","getExternalProps","React","AnalyticsFunnelSubStep","subStepIdentifier","instanceIdentifier","subStepErrorContext","errorContext","InternalContainerAsSubstep","Object","assign","getAnalyticsMetadataAttribute","component","name","label","root","applyDisplayName","joinString","values","filter","value","join","AbstractSwitch","controlId","controlClassName","outlineClassName","showOutline","disabled","readOnly","nativeControl","styledControl","description","descriptionBottomPadding","ariaLabel","ariaLabelledby","ariaDescribedby","ariaControls","onClick","__internalRootRef","rest","uniqueId","useUniqueId","id","labelId","concat","descriptionId","ariaLabelledByIds","push","ariaDescriptions","className","clsx","styles","wrapper","ref","getAnalyticsLabelAttribute","analyticsSelectors","undefined","action","detail","control","length","outline","content","browserScrollbarSize","callback","result","calculateOnce","document","width","height","scrollDiv","createElement","style","overflow","position","top","left","body","appendChild","offsetWidth","clientWidth","offsetHeight","clientHeight","removeChild","_ref","children","ButtonContext","Provider","CollectionLabelContext","assignId","FormFieldContext","InfoLinkLabelContext","LinkDefaultVariantContext","linkDefaultValue","SingleTabStopNavigationContext","singleTabStopDefaultValue","initialBodyPaddingRightStyle","disableBodyScrolling","window","innerWidth","paddingRight","newBodyPaddingRight","parseInt","getComputedStyle","setBodyScrollbarPadding","classList","add","enableBodyScrolling","remove","setProperty","removeProperty","restoreBodyScrollbarPadding","InternalModal","modalRoot","getModalRoot","removeModalRoot","Portal","container","getContainer","removeContainer","PortaledModal","size","visible","header","footer","onDismiss","instanceUniqueId","headerId","lastMouseDownElementRef","useRef","breakpoint","breakpointsRef","useContainerBreakpoints","closeAriaLabel","useInternalI18n","i18n","refObject","mergedRef","useMergeRefs","isRefresh","useVisualRefresh","baseProps","getBaseProps","useEffect","current","scrollTop","dismiss","reason","fireNonCancelableEvent","stickySentinelRef","isIntersecting","footerStuck","observerRef","setIsIntersecting","useState","useCallback","targetElement","IntersectionObserver","disconnect","entry","observe","useIntersectionObserver","footerHeight","footerRef","useContainerQuery","rect","borderBoxHeight","subStepRef","useFunnelSubStep","FunnelNameSelectorContext","ResetContextsForModal","ModalContext","isInModal","hidden","refresh","role","onMouseDown","event","target","overlay","lastClicked","scrollPaddingBottom","_b","FocusLock","autoFocus","restoreFocus","dialog","onKeyDown","keyCode","KeyCode","escape","InternalHeader","__disableActionsWrapping","actions","InternalButton","iconName","formAction","onCloseButtonClick","Modal","items","ariaRequired","onChange","useFormFieldContext","generatedName","radioButtonRef","radioButtonRefIndex","forwardedRef","itemRef","itemIndex","predicate","i","findIndex","item","useImperativeHandle","focus","useRadioGroupForwardFocus","map","index","RadioButton","key","checked","RadioGroup","InternalRadioGroup","isVisualRefresh","mergedRefs","tabIndex","useSingleTabStopNavigation","radio","copyAnalyticsMetadataAttribute","nativeControlProps","type","viewBox","focusable","strokeWidth","cx","cy","r","stateToIcon","sortable","ascending","descending","isSorted","column","sortingColumn","sortingField","sortingComparator","useEventListenersSingleton","createSingletonHandler","setTarget","handleMouseDown","handleKeyDown","addEventListener","removeEventListener","useClickAway","awayRef","onClickStable","useStableCallback","handleClick","nodeBelongs","capture","ExpandToggleButton","isExpanded","onExpandableItemToggle","expandButtonLabel","collapseButtonLabel","buttonRef","InternalIcon","AsyncStore","constructor","state","_listeners","this","_state","get","set","cb","prevState","newState","unstable_batchedUpdates","selector","listener","subscribe","unsubscribe","storedListener","splice","useStickyColumns","visibleColumns","stickyColumnsFirst","stickyColumnsLast","store","useMemo","StickyColumnsStore","wrapperRef","tableRef","cellsRef","Map","hasStickyColumns","updateStickyStyles","updateCellStyles","table","cells","useResizeObserver","wrapperState","updateWrapperStyles","prev","s1","s2","scrollPaddingInlineStart","scrollPaddingInlineEnd","setWrapper","node","setTable","setCell","columnId","delete","refs","cell","useStickyCellStyles","_ref2","stickyColumns","getClassName","unsubscribeRef","refCallback","cellElement","cellState","padInlineStart","lastInsetInlineStart","lastInsetInlineEnd","offset","insetInlineStart","insetInlineEnd","keys","forEach","cellStyles","super","cellOffsets","offsets","stickyWidthInlineStart","stickyWidthInlineEnd","isStuckToTheInlineStart","isStuckToTheInlineEnd","generateCellStyles","isEnabled","lastLeftStickyColumnIndex","lastRightStickyColumnIndex","reduce","acc","stickySide","isFirstColumn","stickyColumnOffsetLeft","first","stickyColumnOffsetRight","_d","_c","last","updateCellOffsets","totalColumns","firstColumnsWidths","Math","min","element","cellWidth","getLogicalBoundingClientRect","inlineSize","lastColumnsWidths","columnIndex","wrapperWidth","parseFloat","paddingLeft","hadStickyColumns","updateScroll","wrapperScrollInlineStart","getScrollInlineStart","wrapperScrollWidth","scrollWidth","wrapperClientWidth","tablePaddingInlineStart","paddingInlineStart","tablePaddingInlineEnd","paddingInlineEnd","ceil","stateToAriaSort","getAriaSort","sortingState","getTableRoleProps","options","nativeProps","tableRole","totalItemsCount","totalColumnsCount","applyTrackBy","trackBy","getTrackableValue","getColumnKey","toContainerVariant","getVisibleColumnDefinitions","columnDisplay","columnDefinitions","columnDefinitionsById","accumulator","Boolean","getVisibleColumnDefinitionsFromColumnDisplay","_ref3","ids","Set","_ref4","has","getVisibleColumnDefinitionsFromVisibleColumns","getStickyClassNames","TableTdElement","wrapLines","isRowHeader","isFirstRow","isLastRow","isSelected","isNextSelected","isPrevSelected","nativeAttributes","onMouseEnter","onMouseLeave","isEvenRow","stripedRows","hasSelection","hasFooter","colIndex","stickyState","level","isExpandable","verticalAlign","Element","scope","getTableCellRoleProps","stickyStyles","cellRefObject","cellTabIndex","getLevelClassSuffix","DisabledInlineEditor","ariaLabels","isEditing","onEditStart","onEditEnd","editDisabledReason","interactiveCell","resizableColumns","clickAwayRef","hasHover","setHasHover","hasFocus","setHasFocus","showIcon","iconRef","portalRef","targetProps","descriptionEl","useHiddenDescription","portalClasses","usePortalModeClasses","toString","activateEditLabel","call","onFocus","onBlur","Icon","PopoverContainer","fixedWidth","trackRef","arrow","Arrow","renderWithPortal","zIndex","PopoverBody","dismissButton","dismissAriaLabel","overflowVisible","noop","InlineEditor","submitEdit","__onRender","currentEditLoading","setCurrentEditLoading","currentEditValue","setCurrentEditValue","focusLockRef","cellContext","currentValue","setValue","finishEdit","cancelled","refocusCell","arguments","onCancel","reFocusEditedCell","timer","setTimeout","clearTimeout","validation","errorIconAriaLabel","constraintText","editingCell","editConfig","onSubmit","evt","preventDefault","e","focusFirst","FormField","stretch","__hideLabel","__disableGutters","i18nStrings","errorText","SpaceBetween","direction","Button","cancelEditLabel","submitEditLabel","loading","LiveRegion","submittingEditText","submitHandlerFallback","Error","TableCellEditable","successfulEdit","editActivateRef","tdNativeAttributes","isFocusMoveNeededRef","prevSuccessfulEdit","usePrevious","prevHasFocus","showSuccessIcon","setShowSuccessIcon","editActivateTabIndex","successfulEditLabel","TableBodyCell","isEditable","isExpandableColumnCell","disabledReason","setElementWidths","property","widthCssValue","checkProperty","warnOnce","SELECTION_ITEM","ItemSet","put","bind","focusMarkers","all","NoDataCell","loadingText","empty","containerRef","cellContentRef","contentBoxWidth","containerInlineSize","floor","colSpan","InternalStatusIndicator","wrapText","ItemsLoader","loadingStatus","renderLoaderPending","renderLoaderLoading","renderLoaderError","parentTrackId","DEFAULT_COLUMN_WIDTH","WidthsContext","createContext","getColumnStyles","columnWidths","updateColumn","ColumnWidthsProvider","visibleColumnsRef","containerWidthRef","setColumnWidths","stickyCellsRef","getCell","sticky","find","isLastColumn","totalWidth","sum","minWidth","maxWidth","updateColumnWidths","containerWidth","updated","newColumnWidths","lastVisible","indexOf","colEl","max","readWidths","newWidth","oldWidths","newWidths","updateWidths","getHeaderWidth","resizerElement","findUpUntil","tagName","toLowerCase","AUTO_GROW_START_TIME","AUTO_GROW_INTERVAL","AUTO_GROW_INCREMENT","Divider","divider","Resizer","onWidthUpdate","onWidthUpdateCommit","showFocusRing","focusId","roleDescription","separatorId","resizerToggleRef","resizerSeparatorRef","isDragging","setIsDragging","isKeyboardDragging","setIsKeyboardDragging","autoGrowTimeout","resizerHasFocus","setResizerHasFocus","headerCellWidth","setHeaderCellWidth","elements","tableRoot","tableStyles","querySelector","tracker","resizerStyles","scrollParent","getOverflowParents","getResizerElements","inlineStartEdge","inlineEndEdge","updateTrackerPosition","newOffset","scrollParentInsetInlineStart","insetBlockStart","blockSize","updateColumnWidth","resizeColumn","cellLeft","onAutoGrow","scrollLeft","getIsRtl","onMouseMove","getLogicalPageX","onMouseUp","right","enter","space","isEventLike","handleKey","onActivate","onEscape","onInlineStart","onInlineEnd","resizerTabIndex","resizer","button","relatedTarget","toFixed","ResizeTracker","useSelectionFocusMove","selectionType","totalItems","moveFocus","sourceElement","fromIndex","rootContainer","dataset","selectionRoot","findSelectionControlByIndex","moveFocusDown","moveFocusUp","currentTarget","itemNode","selectionItem","Array","prototype","parentElement","selectionStyles","querySelectorAll","useSelection","singleSelectionProps","isItemDisabled","onSelectionChange","selectedItems","selectionControlName","isItemSelected","selectedSet","slice","handleToggleItem","getItemSelectionProps","joinStrings","selectionGroupLabel","itemSelectionLabel","useSingleSelection","multiSelectionProps","shiftPressed","setShiftPressed","lastClickedItem","setLastClickedItem","allItemsDisabled","allEnabledItemsSelected","allItemsCheckboxSelected","allItemsCheckboxIndeterminate","itemIndexesMap","getShiftSelectedItems","lastClickedItemIndex","currentItemIndex","start","end","selectItems","requestedItems","newSelectedItems","newItem","deselectItems","requestedItemsSet","selectedItem","handleToggleAll","getSelectAllProps","indeterminate","allItemsSelectionLabel","onShiftToggle","useMultiSelection","explicitTabIndex","__injectAnalyticsComponentMetadata","checkboxRef","useForwardFocus","analyticsComponentMetadata","selected","CheckboxIcon","SelectionControl","onFocusUp","onFocusDown","focusedComponent","rowIndex","itemKey","sharedProps","isMultiSelection","navigationActive","useContext","setShiftState","shiftKey","InternalCheckbox","up","down","onKeyUp","nativeInput","htmlFor","title","stud","TableThElement","sortingStatus","sortingDisabled","cellRef","String","getTableColHeaderRoleProps","TableHeaderCell","activeSortingColumn","sortingDescending","onResizeFinish","resizerRoleDescription","sorted","getSortingStatus","isDescending","clickableHeaderRef","clickableHeaderTabIndex","onKeyPress","nativeEvent","editIconAriaLabel","Thead","outerRef","onFocusMove","onSortingChange","singleSelectionHeaderAriaLabel","stuck","selectionColumnId","onFocusedComponentChange","setLastUserAction","headerCellClass","headerCellStyles","selectionCellClass","getTableHeaderRowRoleProps","focusControlElement","getAttribute","ScreenreaderOnly","calculateScrollingOffset","stickyRect","containerRect","scrollUpBy","amount","parent","scrollTo","pageYOffset","useStickyHeader","theadRef","secondaryTheadRef","secondaryTableRef","tableWrapperRef","isMobile","useMobile","syncColumnHeaderWidths","marginBlockStart","useLayoutEffect","scrollToItem","stickyRef","scrollToTop","scrollingOffset","insetBlockEnd","scrollToRow","scrollDist","forwardRef","theadProps","secondaryWrapperRef","onScroll","tableHasHeader","contentDensity","isStuck","StickyHeaderContext","setFocusedComponent","setFocus","getVisualContextClassname","updatePosition","tableEl","wrapperEl","scrollbarEl","scrollbarContentEl","inScrollableContainer","tableInlineSize","wrapperInlineSize","scrollbarHeight","contains","requestAnimationFrame","wrapperElRect","tableElRect","globalVars","stickyVerticalBottomOffset","scrollbarRef","scrollbarContentRef","offsetScrollbar","setInScrollableContainer","getContainingBlock","observer","ResizeObserver","resizeHandler","useStickyScrollbar","getClosestCell","closest","isTableCell","GridNavigationProvider","keyboardNavigation","pageSize","getTable","navigationAPI","gridNavigation","GridNavigationProcessor","getTableStable","init","cleanup","update","SingleTabStopNavigationProvider","getNextFocusTarget","isElementSuppressed","onRegisterFocusable","onUnregisterActive","_pageSize","_table","focusedCell","keepUserIndex","focusableElement","focusedElement","preventScroll","moveFocusBy","x","y","firstTableCell","focusTarget","getFocusablesFrom","getNextFocusable","defaultIsSuppressed","onFocusin","HTMLElement","updateFocusedCell","_navigationAPI","updateFocusTarget","nextTarget","onKeydown","pageUp","pageDown","home","ctrlKey","altKey","metaKey","activeElement","isRegistered","from","onBlockStart","onBlockEnd","onPageUp","onPageDown","onHome","Infinity","onEnd","delta","rowElement","isNaN","elementIndex","prevColIndex","prevElementIndex","_f","_e","targetAriaRowIndex","targetRow","rowElements","reverse","findTableRowByAriaRowIndex","cellFocusables","nextElementIndex","isValidDirection","isValidIndex","isTargetDifferent","targetCell","tableRow","targetAriaColIndex","cellElements","findTableRowCellByAriaColIndex","targetCellFocusables","focusIndex","isFinite","isElementRegistered","getAllFocusables","el","HTMLInputElement","HTMLButtonElement","ToolsHeader","pagination","preferences","isHeaderString","assignHeaderId","headingId","isSmall","hasTools","tools","onClickCapture","onKeyDownCapture","enableKeyboardNavigation","numRows","focusableColumns","cols","unshift","maxColumnIndex","minColumnIndex","focusCell","func","row","cellIndex","iterateTableCells","rIndex","cIndex","editButton","scrollElementIntoView","shiftFocus","vertical","horizontal","newRowIndex","newColumnIndex","handleArrowKeyEvents","tableElement","Symbol","InternalTableAsSubstep","funnelSubStepProps","tableProps","__funnelSubStepProps","InternalTable","stickyHeader","stickyHeaderVerticalOffset","onRowClick","onRowContextMenu","onEditCancel","onColumnWidthsChange","firstIndex","renderAriaLive","expandableRows","getLoadingStatus","prevStickyHeader","allItems","getExpandableItemProps","expandedSet","expandedItems","itemToDetail","getItemLevel","visibleItems","traverse","getItemChildren","child","setSize","posInSet","insertionIndex","insertionItem","isItemExpandable","expanded","useExpandableTableProps","allRows","getItemParent","status","currentParent","levelsDiff","rootLoadingStatus","useProgressiveLoadingProps","wrapperMeasureRef","wrapperMeasureRefObject","wrapperMeasureMergedRef","tableWidth","tableMeasureRef","tableRefObject","stickyHeaderRef","_this","currentEditCell","setCurrentEditCell","lastSuccessfulEditCell","setLastSuccessfulEditCell","cancelEdit","_len","args","_key","__awaiter","isLoading","startEdit","cellId","checkEditing","checkLastSuccessfulEdit","completeEdit","editCancelled","fireCancelableEvent","useCellEditing","cellEditing","getHeaderText","toolsHeaderPerformanceMarkRef","headerStyles","innerText","performanceMarkAttributes","usePerformanceMarks","itemCount","getComponentIdentifier","lastUserAction","capturedUserAction","loadingStartTime","metadata","performance","now","time","useEffectOnUpdate","loadingDuration","PerformanceMetrics","tableInteraction","userAction","interactionTime","round","interactionMetadata","componentIdentifier","noOfResourcesInTable","useTableInteractionMetrics","wrapperRefObject","handleScroll","useScrollSync","onRowClickHandler","onRowContextMenuHandler","tableCell","details","clientX","clientY","useRowEvents","visibleColumnDefinitions","isRowSelected","isDevelopment","checkColumnWidths","checkSortingState","computedVariant","hasHeader","hasFooterPagination","headerIdRef","tableLabel","setHeaderRef","visibleColumnWidthsWithSelection","visibleColumnIdsWithSelection","hasEditableCells","col","widthsDetail","some","widths","wrapperProps","isScrollable","getTableWrapperRoleProps","getMouseDownTarget","mouseDownTargetRef","useMouseDownTarget","useTableFocusNavigation","toolsHeaderHeight","toolsHeaderWrapperMeasureRef","toolsHeaderWrapper","colIndexOffset","defaultVariant","InternalContainer","__fullPage","StickyHeader","__disableFooterPaddings","__disableFooterDivider","__disableStickyMobile","__stickyHeader","__mobileStickyOffset","__stickyOffset","lastIndex","visibleItemsCount","expandableProps","rowRoleProps","getTableRowRoleProps","getTableItemKey","getItemKey","sharedCellProps","onContextMenu","cellExpandableProps","innerContext","columnLabel","StickyScrollbar","Table","progressiveLoading","inlineEdit","def","disabledInlineEdit","properties","itemsCount","selectedItemsCount","sortingColumnId","getSortingColumnId","Textarea","autoComplete","disableBrowserAutocorrect","disableBrowserSpellcheck","spellcheck","rows","placeholder","invalid","warning","textareaRef","attributes","convertAutoComplete","spellCheck","fireKeyboardEvent","autoCorrect","autoCapitalize"],"sourceRoot":""}