{"version":3,"file":"static/js/230.0bb23535.chunk.js","mappings":"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","sources":["Utils/helperFunctions.js","Views/PreLogin/Signup.js"],"sourcesContent":["import { Box, CircularProgress } from \"@mui/material\";\r\nimport { toast } from \"react-toastify\";\r\nexport const ValidationEngine = {\r\n  EMAIL_REGEX: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\r\n  PASSWORD_REGEX: /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/,\r\n  MOBILE_NUMBER_REGEX: /^\\d{10}$/,\r\n  NUMBER_ONLY_REGEX: /^[0-9]+$/,\r\n  DECIMAL_ALLOW_REGEX: /^\\d*\\.?\\d*$/,\r\n  ONLY_TWO_DECIMAL_ALLOW_REGEX: /^(?:\\d*\\.\\d{1,2}|\\d+)$/,\r\n  type: {\r\n    MANDATORY: 0,\r\n    REGEX: 1,\r\n    CHARACTERCOUNT: 2,\r\n  },\r\n  validate: (validationJSON, data) => {\r\n    function validateMandatory(validationObject, value) {\r\n      if (!value || value === '') {\r\n        return {\r\n          isValid: false,\r\n          error: {\r\n            isValid: false,\r\n            message: validationObject.message,\r\n          },\r\n        };\r\n      }\r\n      return {\r\n        isValid: true,\r\n        error: {\r\n          isValid: true,\r\n          message: \"\",\r\n        },\r\n      };\r\n    }\r\n\r\n    function validateCharacterCount(validationObject, value) {\r\n      if (value && value.length !== validationObject.CharacterCout) {\r\n        return {\r\n          isValid: false,\r\n          error: {\r\n            isValid: false,\r\n            message: validationObject.message,\r\n          },\r\n        };\r\n      }\r\n      return {\r\n        isValid: true,\r\n        error: {\r\n          isValid: true,\r\n          message: \"\",\r\n        },\r\n      };\r\n    }\r\n\r\n    function validateRegex(validationObject, value) {\r\n      if (validationObject.regex && !validationObject.regex.test(value)) {\r\n        return {\r\n          isValid: false,\r\n          error: {\r\n            isValid: false,\r\n            message: validationObject.message,\r\n          },\r\n        };\r\n      }\r\n      return {\r\n        isValid: true,\r\n        error: {\r\n          isValid: true,\r\n          message: \"\",\r\n        },\r\n      };\r\n    }\r\n\r\n    const keys = Object.keys(data);\r\n    const errors = {};\r\n    let isValid = true;\r\n    let errorObj;\r\n    keys.forEach((key) => {\r\n      const validationArray = validationJSON[key];\r\n      const value = data[key];\r\n      for (const validationObj of validationArray) {\r\n        if (validationObj.type === ValidationEngine.type.MANDATORY) {\r\n          errorObj = validateMandatory(validationObj, value);\r\n        } else if (\r\n          validationObj.type === ValidationEngine.type.CHARACTERCOUNT\r\n        ) {\r\n          errorObj = validateCharacterCount(validationObj, value);\r\n        } else if (validationObj.type === ValidationEngine.type.REGEX) {\r\n          errorObj = validateRegex(validationObj, value);\r\n        }\r\n        errors[key] = errorObj.error;\r\n        isValid = isValid && errorObj.isValid;\r\n        if (!errorObj.isValid) {\r\n          break;\r\n        }\r\n      }\r\n    });\r\n    errors.isValid = isValid;\r\n    return errors;\r\n  },\r\n};\r\n\r\nexport const ErrorMessages = {\r\n  error: (message) =>\r\n    toast.error(message, {\r\n      position: \"top-right\",\r\n      autoClose: 3000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"colored\",\r\n    }),\r\n  success: (message) =>\r\n    toast.success(message, {\r\n      position: \"top-right\",\r\n      autoClose: 3000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"colored\",\r\n    }),\r\n  info: (message) =>\r\n    toast.info(message, {\r\n      position: \"top-right\",\r\n      autoClose: 3000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"colored\",\r\n    }),\r\n};\r\nexport const Loader = {\r\n  commonLoader() {\r\n    return (\r\n      <Box className=\"d-flex align-items-center justify-content-center common-loader\">\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  },\r\n};\r\n\r\nexport const pathFile = {\r\n  dashboards: \"DashBoard\",\r\n};\r\n\r\n\r\nexport const navigate = () => {\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const getBreadcrumbItems = (pathname) => {\r\n  const breadcrumbMap = {\r\n    \"/app/home\": [{ text: \"Home\", href: \"/\" } , {text:''} ],\r\n\r\n    \"/app/home/runsheet\": [{ text: \"Home\", href: \"/app/home\" }, { text: \"Runsheet (5425)\", href: \"/dashboard\" }],\r\n\r\n\r\n    \"/profile\": [{ text: \"Home\", href: \"/\" },\r\n    { text: \"Profile\", href: \"/profile\" }],\r\n    \"/verify-order\": [{ text: \"Home\", href: \"/\" }\r\n      , { text: \"Orders\", href: \"/orders\" },\r\n    { text: \"Verify Order\", href: \"/verify-order\" }],\r\n    // Add more routes as needed\r\n  };\r\n\r\n  return breadcrumbMap[pathname] || [{ text: \"Home\", href: \"/\" }];\r\n};\r\n\r\n\r\n\r\nexport const loginDetails = () => {\r\n  const items = JSON.parse(localStorage.getItem(\"login\"));\r\n  return items;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  FormControlLabel,\r\n  Grid,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n  InputAdornment,\r\n} from \"@mui/material\";\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport { ValidationEngine, ErrorMessages } from \"Utils/helperFunctions\";\r\nconst validationSchema = {\r\n  f_name: [\r\n    {\r\n      message: \"Please enter Name\",\r\n      type: ValidationEngine.type.MANDATORY,\r\n    },\r\n  ],\r\n  l_name: [\r\n    {\r\n      message: \"Please enter Name\",\r\n      type: ValidationEngine.type.MANDATORY,\r\n    },\r\n  ],\r\n  email: [\r\n    {\r\n      message: \"Please enter Email\",\r\n      type: ValidationEngine.type.MANDATORY,\r\n    },\r\n    {\r\n      message: \"Please valid Email\",\r\n      type: ValidationEngine.type.REGEX,\r\n      regex: ValidationEngine.EMAIL_REGEX,\r\n    },\r\n  ],\r\n  password: [\r\n    {\r\n      message: \"Please enter Password\",\r\n      type: ValidationEngine.type.MANDATORY,\r\n    },\r\n  ],\r\n};\r\n\r\nclass Signup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showPassword: false,\r\n      f_name: \"\",\r\n      l_name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n\r\n      isSubmitted: false,\r\n    };\r\n  }\r\n\r\n  handleClickShowPassword = () => {\r\n    this.setState((prevState) => ({\r\n      showPassword: !prevState.showPassword,\r\n    }));\r\n  };\r\n\r\n  handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  handleSignup = () => {\r\n    const errorData = this.validateForm();\r\n    this.setState({\r\n      isSubmitted: true,\r\n    });\r\n\r\n    if (errorData.isValid) {\r\n      // api call\r\n      // this.props.Signup({})\r\n    }\r\n  };\r\n\r\n  validateForm = () => {\r\n    const { f_name, l_name, email, password } = this.state;\r\n    const error = ValidationEngine.validate(validationSchema, {\r\n      f_name: f_name,\r\n      l_name: l_name,\r\n      email: email,\r\n      password: password,\r\n    });\r\n\r\n    return error;\r\n  };\r\n  handleChange = (event) => {\r\n    const { name, value, type, checked } = event.target;\r\n    const val = type === \"checkbox\" ? checked : value;\r\n    this.setState({ [name]: val });\r\n  };\r\n\r\n  render() {\r\n    const errorData = this.validateForm();\r\n\r\n    const { showPassword, f_name, l_name, email, password, isSubmitted } =\r\n      this.state;\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up to <span style={{ color: \"#9C27B0\" }}>Rasi Lab</span>\r\n          </Typography>\r\n          <Box component=\"form\" noValidate sx={{ mt: 3 }}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  autoComplete=\"fname\"\r\n                  name=\"f_name\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"f_name\"\r\n                  label=\"First Name\"\r\n                  value={f_name}\r\n                  error={!errorData.f_name.isValid && isSubmitted}\r\n                  helperText={isSubmitted ? errorData.f_name.message : \"\"}\r\n                  onChange={this.handleChange}\r\n                  autoFocus\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"l_name\"\r\n                  label=\"Last Name\"\r\n                  value={l_name}\r\n                  error={!errorData.l_name.isValid && isSubmitted}\r\n                  helperText={isSubmitted ? errorData.l_name.message : \"\"}\r\n                  onChange={this.handleChange}\r\n                  name=\"l_name\"\r\n                  autoComplete=\"lname\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                {/* <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  value={email}\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  error={!errorData.email.isValid && isSumitted}\r\n                  helperText={isSumitted ? errorData.email.message : \"\"}\r\n                  onChange={this.handleChange}\r\n                  autoComplete=\"email\"\r\n                /> */}\r\n                <TextField\r\n               \r\n                  label=\"Email\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={this.handleChange}\r\n                  error={!errorData.email.isValid && isSubmitted}\r\n                  helperText={isSubmitted ? errorData.email.message : \"\"}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  error={!errorData.password.isValid && isSubmitted}\r\n                  helperText={isSubmitted ? errorData.password.message : \"\"}\r\n                  value={password}\r\n                  onChange={this.handleChange}\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  id=\"password\"\r\n                  autoComplete=\"new-password\"\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={this.handleClickShowPassword}\r\n                          onMouseDown={this.handleMouseDownPassword}\r\n                        >\r\n                          {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox value=\"allowExtraEmails\" color=\"primary\" />\r\n                  }\r\n                  label=\"I have read and agree to the Terms of Service\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              onClick={this.handleSignup}\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2, backgroundColor: \"#9C27B0\" }}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              startIcon={\r\n                <img\r\n                  src=\"https://img.icons8.com/color/16/000000/google-logo.png\"\r\n                  alt=\"Google\"\r\n                />\r\n              }\r\n              sx={{ mb: 2, backgroundColor: \"#4285F4\", color: \"#fff\" }}\r\n            >\r\n              Sign up with Google\r\n            </Button>\r\n            <Grid container justifyContent=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Already have an account? Sign In Now\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signup;\r\n"],"names":["ValidationEngine","EMAIL_REGEX","PASSWORD_REGEX","MOBILE_NUMBER_REGEX","NUMBER_ONLY_REGEX","DECIMAL_ALLOW_REGEX","ONLY_TWO_DECIMAL_ALLOW_REGEX","type","MANDATORY","REGEX","CHARACTERCOUNT","validate","validationJSON","data","validateMandatory","validationObject","value","isValid","error","message","validateCharacterCount","length","CharacterCout","validateRegex","regex","test","keys","Object","errors","errorObj","forEach","key","validationArray","validationObj","validationSchema","f_name","l_name","email","password","Signup","Component","constructor","props","super","handleClickShowPassword","this","setState","prevState","showPassword","handleMouseDownPassword","event","preventDefault","handleSignup","errorData","validateForm","isSubmitted","state","handleChange","name","checked","target","val","render","_jsx","Container","component","maxWidth","children","_jsxs","Box","sx","marginTop","display","flexDirection","alignItems","Typography","variant","style","color","noValidate","mt","Grid","container","spacing","item","xs","sm","TextField","autoComplete","required","fullWidth","id","label","helperText","onChange","autoFocus","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","Visibility","VisibilityOff","FormControlLabel","control","Checkbox","Button","mb","backgroundColor","startIcon","src","alt","justifyContent","Link","href"],"sourceRoot":""}