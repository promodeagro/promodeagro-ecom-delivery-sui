{"version":3,"file":"static/js/412.d886eb33.chunk.js","mappings":"kPAMA,MAmCA,EAnCuBA,KACpB,MAAMC,GAAWC,EAAAA,EAAAA,OACTC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAiBC,IAAsBF,EAAAA,EAAAA,UAAS,IAKzD,OACEG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OAAKC,IAAKC,EAASC,IAAI,MACvBH,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oBAAoBG,IAAKG,EAAQD,IAAI,MAErDH,EAAAA,EAAAA,KAAA,QAAMK,SAReC,MAQQP,UAC5BC,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CACVC,QACIX,EAAAA,EAAAA,MAACY,EAAAA,EAAY,CAACC,UAAU,WAAWC,WAAW,SAAQZ,SAAA,EACxDC,EAAAA,EAAAA,KAACY,EAAAA,EAAG,CAACC,QAAQ,KAAId,SAAC,0BAClBC,EAAAA,EAAAA,KAACY,EAAAA,EAAG,CAACE,UAAU,SAAUD,QAAQ,QAAOd,SAAC,6DAE1CA,UAEGF,EAAAA,EAAAA,MAACY,EAAAA,EAAY,CAACC,UAAU,WAAWK,KAAK,KAAIhB,SAAA,EAC1CC,EAAAA,EAAAA,KAACgB,EAAAA,EAAS,CAACC,UAAU,GAAGC,MAAM,QAAOnB,UACnCC,EAAAA,EAAAA,KAACmB,EAAAA,EAAK,CAACC,MAAO5B,EAAU6B,SAAWf,GAAKb,EAAYa,EAAEgB,OAAOF,OAAQG,KAAK,OAAOC,YAAY,wBAE/FxB,EAAAA,EAAAA,KAACyB,EAAAA,EAAM,CAAEZ,QAAQ,UAAUa,QAASA,IAAMpC,EAAS,0BAA2BqC,WAAS,EAAA5B,SAAC,cACxFC,EAAAA,EAAAA,KAACyB,EAAAA,EAAM,CAACZ,QAAQ,OAAOc,WAAS,EAACD,QAASA,IAAMpC,EAAS,gBAAgBS,SAAC,sBAI5E,C,8HCpBI,SAAUQ,EAAUqB,G,IAAA,QAChCf,EAAU,UAAS,sBACnBgB,GAAwB,EAAK,uBAC7BC,GAAyB,EAAK,UAC9BC,GAAY,GAAKH,EACdI,GAAKC,EAAAA,EAAAA,IAAAL,EALwB,0EAOhC,MAAMM,GAAoBC,EAAAA,EAAAA,GAA0BH,GAC9CI,GAAqBC,EAAAA,EAAAA,GACzB,YACA,CACEL,MAAO,CAAEF,yBAAwBD,wBAAuBE,YAAWlB,YAErEqB,GAEII,GAAgBC,EAAAA,EAAAA,GAAiBP,GAOvC,OACEQ,EAAAA,cAACC,EAAAA,GAAsB,CACrBC,kBAAoC,OAAjBR,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBS,mBACtCC,oBAAsC,OAAjBV,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBW,cAExCL,EAAAA,cAACM,EAAAA,EAA0BC,OAAAC,OAAA,CACzBnC,QAASA,EACTiB,uBAAwBA,EACxBD,sBAAuBA,EACvBE,UAAWA,GACPC,EACAM,EACAF,GACAa,EAAAA,EAAAA,IAA8B,CAAEC,UAlBuC,CAC/EC,KAAM,kBACNjC,MAAO,CAAEkC,KAAM,aAoBnB,EAEAC,EAAAA,EAAAA,GAAiB9C,EAAW,Y","sources":["Views/PreLogin/ForgotPassword.js","../node_modules/src/container/index.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport vector from \"../../Assets/Images/Vector.png\"\r\nimport PTRLogo from \"../../Assets/Images/PTRLogo.png\"\r\nimport { Box,Button, Container, FormField, Input, SpaceBetween } from '@cloudscape-design/components'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst ForgotPassword = () => {\r\n   const navigate = useNavigate()\r\n    const [password, setPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n\r\n    const handleSubmit = (e)=> {\r\n\r\n    }\r\n  return (\r\n    <div className='login_page'>\r\n      <img src={PTRLogo} alt=\"\" />\r\n      <img className='login_page_vector' src={vector} alt=\"\" />\r\n\r\n     <form onSubmit={handleSubmit}>\r\n      <Container\r\n      header={\r\n          <SpaceBetween direction='vertical' alignItems='center'>\r\n        <Box variant='h1'>Forget Your Password</Box>\r\n        <Box textAlign='center'  variant='small'>Enter your email to proceed with the password reset. </Box>\r\n      </SpaceBetween>\r\n      }\r\n      >\r\n          <SpaceBetween direction=\"vertical\" size=\"xs\">\r\n            <FormField errorText=\"\" label=\"Email\">\r\n              <Input value={password} onChange={(e)=> setPassword(e.detail.value)} type='text' placeholder='Enter Your Email' />\r\n            </FormField>\r\n            <Button  variant='primary' onClick={() => navigate(\"/auth/otp-varification\")} fullWidth>Send OTP</Button>\r\n            <Button variant='link' fullWidth onClick={() => navigate(\"/auth/signin\")}>Or Login</Button>\r\n          </SpaceBetween>\r\n      </Container>\r\n          </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForgotPassword","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { AnalyticsFunnelSubStep } from '../internal/analytics/components/analytics-funnel';\nimport { BasePropsWithAnalyticsMetadata, getAnalyticsMetadataProps } from '../internal/base-component';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { getExternalProps } from '../internal/utils/external-props';\nimport { GeneratedAnalyticsMetadataContainerComponent } from './analytics-metadata/interfaces';\nimport { ContainerProps } from './interfaces';\nimport { InternalContainerAsSubstep } from './internal';\n\nexport { ContainerProps };\n\nexport default function Container({\n  variant = 'default',\n  disableHeaderPaddings = false,\n  disableContentPaddings = false,\n  fitHeight = false,\n  ...props\n}: ContainerProps) {\n  const analyticsMetadata = getAnalyticsMetadataProps(props as BasePropsWithAnalyticsMetadata);\n  const baseComponentProps = useBaseComponent(\n    'Container',\n    {\n      props: { disableContentPaddings, disableHeaderPaddings, fitHeight, variant },\n    },\n    analyticsMetadata\n  );\n  const externalProps = getExternalProps(props);\n\n  const analyticsComponentMetadata: GeneratedAnalyticsMetadataContainerComponent = {\n    name: 'awsui.Container',\n    label: { root: 'self' },\n  };\n\n  return (\n    <AnalyticsFunnelSubStep\n      subStepIdentifier={analyticsMetadata?.instanceIdentifier}\n      subStepErrorContext={analyticsMetadata?.errorContext}\n    >\n      <InternalContainerAsSubstep\n        variant={variant}\n        disableContentPaddings={disableContentPaddings}\n        disableHeaderPaddings={disableHeaderPaddings}\n        fitHeight={fitHeight}\n        {...props}\n        {...externalProps}\n        {...baseComponentProps}\n        {...getAnalyticsMetadataAttribute({ component: analyticsComponentMetadata })}\n      />\n    </AnalyticsFunnelSubStep>\n  );\n}\n\napplyDisplayName(Container, 'Container');\n"],"names":["ForgotPassword","navigate","useNavigate","password","setPassword","useState","confirmPassword","setConfirmPassword","_jsxs","className","children","_jsx","src","PTRLogo","alt","vector","onSubmit","e","Container","header","SpaceBetween","direction","alignItems","Box","variant","textAlign","size","FormField","errorText","label","Input","value","onChange","detail","type","placeholder","Button","onClick","fullWidth","_a","disableHeaderPaddings","disableContentPaddings","fitHeight","props","__rest","analyticsMetadata","getAnalyticsMetadataProps","baseComponentProps","useBaseComponent","externalProps","getExternalProps","React","AnalyticsFunnelSubStep","subStepIdentifier","instanceIdentifier","subStepErrorContext","errorContext","InternalContainerAsSubstep","Object","assign","getAnalyticsMetadataAttribute","component","name","root","applyDisplayName"],"sourceRoot":""}